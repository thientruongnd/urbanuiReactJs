/*! jQuery v3.2.1 | (c) JS Foundation and other contributors | jquery.org/license */
!(function (a, b) {
    typeof module === 'object' && typeof module.exports === 'object' ? module.exports = a.document ? b(a, !0) : function (a) { if (!a.document) throw new Error('jQuery requires a window with a document'); return b(a); } : b(a);
}(typeof window !== 'undefined' ? window : this, (a, b) => {
    const c = []; const d = a.document; const e = Object.getPrototypeOf; const f = c.slice; const g = c.concat; const h = c.push; const i = c.indexOf; const j = {}; const k = j.toString; const l = j.hasOwnProperty; const m = l.toString; const n = m.call(Object); const o = {}; function p(a, b) { b = b || d; const c = b.createElement('script'); c.text = a, b.head.appendChild(c).parentNode.removeChild(c); } const q = '3.2.1'; var r = function (a, b) { return new r.fn.init(a, b); }; const s = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g; const t = /^-ms-/; const u = /-([a-z])/g; const v = function (a, b) { return b.toUpperCase(); }; r.fn = r.prototype = {
        jquery: q, constructor: r, length: 0, toArray() { return f.call(this); }, get(a) { return a == null ? f.call(this) : a < 0 ? this[a + this.length] : this[a]; }, pushStack(a) { const b = r.merge(this.constructor(), a); return b.prevObject = this, b; }, each(a) { return r.each(this, a); }, map(a) { return this.pushStack(r.map(this, (b, c) => a.call(b, c, b))); }, slice() { return this.pushStack(f.apply(this, arguments)); }, first() { return this.eq(0); }, last() { return this.eq(-1); }, eq(a) { const b = this.length; const c = +a + (a < 0 ? b : 0); return this.pushStack(c >= 0 && c < b ? [this[c]] : []); }, end() { return this.prevObject || this.constructor(); }, push: h, sort: c.sort, splice: c.splice,
    }, r.extend = r.fn.extend = function () { let a; let b; let c; let d; let e; let f; let g = arguments[0] || {}; let h = 1; const i = arguments.length; let j = !1; for (typeof g === 'boolean' && (j = g, g = arguments[h] || {}, h++), typeof g === 'object' || r.isFunction(g) || (g = {}), h === i && (g = this, h--); h < i; h++) if ((a = arguments[h]) != null) for (b in a)c = g[b], d = a[b], g !== d && (j && d && (r.isPlainObject(d) || (e = Array.isArray(d))) ? (e ? (e = !1, f = c && Array.isArray(c) ? c : []) : f = c && r.isPlainObject(c) ? c : {}, g[b] = r.extend(j, f, d)) : void 0 !== d && (g[b] = d)); return g; }, r.extend({
        expando: `jQuery${(q + Math.random()).replace(/\D/g, '')}`, isReady: !0, error(a) { throw new Error(a); }, noop() {}, isFunction(a) { return r.type(a) === 'function'; }, isWindow(a) { return a != null && a === a.window; }, isNumeric(a) { const b = r.type(a); return (b === 'number' || b === 'string') && !isNaN(a - parseFloat(a)); }, isPlainObject(a) { let b; let c; return !(!a || k.call(a) !== '[object Object]') && (!(b = e(a)) || (c = l.call(b, 'constructor') && b.constructor, typeof c === 'function' && m.call(c) === n)); }, isEmptyObject(a) { let b; for (b in a) return !1; return !0; }, type(a) { return a == null ? `${a}` : typeof a === 'object' || typeof a === 'function' ? j[k.call(a)] || 'object' : typeof a; }, globalEval(a) { p(a); }, camelCase(a) { return a.replace(t, 'ms-').replace(u, v); }, each(a, b) { let c; let d = 0; if (w(a)) { for (c = a.length; d < c; d++) if (b.call(a[d], d, a[d]) === !1) break; } else for (d in a) if (b.call(a[d], d, a[d]) === !1) break; return a; }, trim(a) { return a == null ? '' : (`${a}`).replace(s, ''); }, makeArray(a, b) { const c = b || []; return a != null && (w(Object(a)) ? r.merge(c, typeof a === 'string' ? [a] : a) : h.call(c, a)), c; }, inArray(a, b, c) { return b == null ? -1 : i.call(b, a, c); }, merge(a, b) { for (var c = +b.length, d = 0, e = a.length; d < c; d++)a[e++] = b[d]; return a.length = e, a; }, grep(a, b, c) { for (var d, e = [], f = 0, g = a.length, h = !c; f < g; f++)d = !b(a[f], f), d !== h && e.push(a[f]); return e; }, map(a, b, c) { let d; let e; let f = 0; const h = []; if (w(a)) for (d = a.length; f < d; f++)e = b(a[f], f, c), e != null && h.push(e); else for (f in a)e = b(a[f], f, c), e != null && h.push(e); return g.apply([], h); }, guid: 1, proxy(a, b) { let c; let d; let e; if (typeof b === 'string' && (c = a[b], b = a, a = c), r.isFunction(a)) return d = f.call(arguments, 2), e = function () { return a.apply(b || this, d.concat(f.call(arguments))); }, e.guid = a.guid = a.guid || r.guid++, e; }, now: Date.now, support: o,
    }), typeof Symbol === 'function' && (r.fn[Symbol.iterator] = c[Symbol.iterator]), r.each('Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' '), (a, b) => { j[`[object ${b}]`] = b.toLowerCase(); }); function w(a) { const b = !!a && 'length' in a && a.length; const c = r.type(a); return c !== 'function' && !r.isWindow(a) && (c === 'array' || b === 0 || typeof b === 'number' && b > 0 && b - 1 in a); } const x = (function (a) {
        let b; let c; let d; let e; let f; let g; let h; let i; let j; let k; let l; let m; let n; let o; let p; let q; let r; let s; let t; const u = `sizzle${1 * new Date()}`; const v = a.document; let w = 0; let x = 0; const y = ha(); const z = ha(); const A = ha(); let B = function (a, b) { return a === b && (l = !0), 0; }; const C = {}.hasOwnProperty; let D = []; const E = D.pop; const F = D.push; let G = D.push; const H = D.slice; const I = function (a, b) { for (let c = 0, d = a.length; c < d; c++) if (a[c] === b) return c; return -1; }; const J = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped'; const K = '[\\x20\\t\\r\\n\\f]'; const L = '(?:\\\\.|[\\w-]|[^\0-\\xa0])+'; const M = `\\[${K}*(${L})(?:${K}*([*^$|!~]?=)${K}*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(${L}))|)${K}*\\]`; const N = `:(${L})(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|${M})*)|.*)\\)|)`; const O = new RegExp(`${K}+`, 'g'); const P = new RegExp(`^${K}+|((?:^|[^\\\\])(?:\\\\.)*)${K}+$`, 'g'); const Q = new RegExp(`^${K}*,${K}*`); const R = new RegExp(`^${K}*([>+~]|${K})${K}*`); const S = new RegExp(`=${K}*([^\\]'"]*?)${K}*\\]`, 'g'); const T = new RegExp(N); const U = new RegExp(`^${L}$`); const V = {
            ID: new RegExp(`^#(${L})`), CLASS: new RegExp(`^\\.(${L})`), TAG: new RegExp(`^(${L}|[*])`), ATTR: new RegExp(`^${M}`), PSEUDO: new RegExp(`^${N}`), CHILD: new RegExp(`^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(${K}*(even|odd|(([+-]|)(\\d*)n|)${K}*(?:([+-]|)${K}*(\\d+)|))${K}*\\)|)`, 'i'), bool: new RegExp(`^(?:${J})$`, 'i'), needsContext: new RegExp(`^${K}*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(${K}*((?:-\\d)?\\d*)${K}*\\)|)(?=[^-]|$)`, 'i'),
        }; const W = /^(?:input|select|textarea|button)$/i; const X = /^h\d$/i; const Y = /^[^{]+\{\s*\[native \w/; const Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/; const $ = /[+~]/; const _ = new RegExp(`\\\\([\\da-f]{1,6}${K}?|(${K})|.)`, 'ig'); const aa = function (a, b, c) { const d = `0x${b}` - 65536; return d !== d || c ? b : d < 0 ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320); }; const ba = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g; const ca = function (a, b) { return b ? a === '\0' ? '\ufffd' : `${a.slice(0, -1)}\\${a.charCodeAt(a.length - 1).toString(16)} ` : `\\${a}`; }; const da = function () { m(); }; const ea = ta((a) => a.disabled === !0 && ('form' in a || 'label' in a), { dir: 'parentNode', next: 'legend' }); try { G.apply(D = H.call(v.childNodes), v.childNodes), D[v.childNodes.length].nodeType; } catch (fa) { G = { apply: D.length ? function (a, b) { F.apply(a, H.call(b)); } : function (a, b) { let c = a.length; let d = 0; while (a[c++] = b[d++]);a.length = c - 1; } }; } function ga(a, b, d, e) { let f; let h; let j; let k; let l; let o; let r; let s = b && b.ownerDocument; const w = b ? b.nodeType : 9; if (d = d || [], typeof a !== 'string' || !a || w !== 1 && w !== 9 && w !== 11) return d; if (!e && ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, p)) { if (w !== 11 && (l = Z.exec(a))) if (f = l[1]) { if (w === 9) { if (!(j = b.getElementById(f))) return d; if (j.id === f) return d.push(j), d; } else if (s && (j = s.getElementById(f)) && t(b, j) && j.id === f) return d.push(j), d; } else { if (l[2]) return G.apply(d, b.getElementsByTagName(a)), d; if ((f = l[3]) && c.getElementsByClassName && b.getElementsByClassName) return G.apply(d, b.getElementsByClassName(f)), d; } if (c.qsa && !A[`${a} `] && (!q || !q.test(a))) { if (w !== 1)s = b, r = a; else if (b.nodeName.toLowerCase() !== 'object') { (k = b.getAttribute('id')) ? k = k.replace(ba, ca) : b.setAttribute('id', k = u), o = g(a), h = o.length; while (h--)o[h] = `#${k} ${sa(o[h])}`; r = o.join(','), s = $.test(a) && qa(b.parentNode) || b; } if (r) try { return G.apply(d, s.querySelectorAll(r)), d; } catch (x) {} finally { k === u && b.removeAttribute('id'); } } } return i(a.replace(P, '$1'), b, d, e); } function ha() { const a = []; function b(c, e) { return a.push(`${c} `) > d.cacheLength && delete b[a.shift()], b[`${c} `] = e; } return b; } function ia(a) { return a[u] = !0, a; } function ja(a) { let b = n.createElement('fieldset'); try { return !!a(b); } catch (c) { return !1; } finally { b.parentNode && b.parentNode.removeChild(b), b = null; } } function ka(a, b) { const c = a.split('|'); let e = c.length; while (e--)d.attrHandle[c[e]] = b; } function la(a, b) { let c = b && a; const d = c && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; if (d) return d; if (c) while (c = c.nextSibling) if (c === b) return -1; return a ? 1 : -1; } function ma(a) { return function (b) { const c = b.nodeName.toLowerCase(); return c === 'input' && b.type === a; }; } function na(a) { return function (b) { const c = b.nodeName.toLowerCase(); return (c === 'input' || c === 'button') && b.type === a; }; } function oa(a) { return function (b) { return 'form' in b ? b.parentNode && b.disabled === !1 ? 'label' in b ? 'label' in b.parentNode ? b.parentNode.disabled === a : b.disabled === a : b.isDisabled === a || b.isDisabled !== !a && ea(b) === a : b.disabled === a : 'label' in b && b.disabled === a; }; } function pa(a) { return ia((b) => (b = +b, ia((c, d) => { let e; const f = a([], c.length, b); let g = f.length; while (g--)c[e = f[g]] && (c[e] = !(d[e] = c[e])); }))); } function qa(a) { return a && typeof a.getElementsByTagName !== 'undefined' && a; }c = ga.support = {}, f = ga.isXML = function (a) { const b = a && (a.ownerDocument || a).documentElement; return !!b && b.nodeName !== 'HTML'; }, m = ga.setDocument = function (a) { let b; let e; const g = a ? a.ownerDocument || a : v; return g !== n && g.nodeType === 9 && g.documentElement ? (n = g, o = n.documentElement, p = !f(n), v !== n && (e = n.defaultView) && e.top !== e && (e.addEventListener ? e.addEventListener('unload', da, !1) : e.attachEvent && e.attachEvent('onunload', da)), c.attributes = ja((a) => (a.className = 'i', !a.getAttribute('className'))), c.getElementsByTagName = ja((a) => (a.appendChild(n.createComment('')), !a.getElementsByTagName('*').length)), c.getElementsByClassName = Y.test(n.getElementsByClassName), c.getById = ja((a) => (o.appendChild(a).id = u, !n.getElementsByName || !n.getElementsByName(u).length)), c.getById ? (d.filter.ID = function (a) { const b = a.replace(_, aa); return function (a) { return a.getAttribute('id') === b; }; }, d.find.ID = function (a, b) { if (typeof b.getElementById !== 'undefined' && p) { const c = b.getElementById(a); return c ? [c] : []; } }) : (d.filter.ID = function (a) { const b = a.replace(_, aa); return function (a) { const c = typeof a.getAttributeNode !== 'undefined' && a.getAttributeNode('id'); return c && c.value === b; }; }, d.find.ID = function (a, b) { if (typeof b.getElementById !== 'undefined' && p) { let c; let d; let e; let f = b.getElementById(a); if (f) { if (c = f.getAttributeNode('id'), c && c.value === a) return [f]; e = b.getElementsByName(a), d = 0; while (f = e[d++]) if (c = f.getAttributeNode('id'), c && c.value === a) return [f]; } return []; } }), d.find.TAG = c.getElementsByTagName ? function (a, b) { return typeof b.getElementsByTagName !== 'undefined' ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0; } : function (a, b) { let c; const d = []; let e = 0; const f = b.getElementsByTagName(a); if (a === '*') { while (c = f[e++])c.nodeType === 1 && d.push(c); return d; } return f; }, d.find.CLASS = c.getElementsByClassName && function (a, b) { if (typeof b.getElementsByClassName !== 'undefined' && p) return b.getElementsByClassName(a); }, r = [], q = [], (c.qsa = Y.test(n.querySelectorAll)) && (ja((a) => { o.appendChild(a).innerHTML = `<a id='${u}'></a><select id='${u}-\r\\' msallowcapture=''><option selected=''></option></select>`, a.querySelectorAll('[msallowcapture^=\'\']').length && q.push(`[*^$]=${K}*(?:''|"")`), a.querySelectorAll('[selected]').length || q.push(`\\[${K}*(?:value|${J})`), a.querySelectorAll(`[id~=${u}-]`).length || q.push('~='), a.querySelectorAll(':checked').length || q.push(':checked'), a.querySelectorAll(`a#${u}+*`).length || q.push('.#.+[+~]'); }), ja((a) => { a.innerHTML = '<a href=\'\' disabled=\'disabled\'></a><select disabled=\'disabled\'><option/></select>'; const b = n.createElement('input'); b.setAttribute('type', 'hidden'), a.appendChild(b).setAttribute('name', 'D'), a.querySelectorAll('[name=d]').length && q.push(`name${K}*[*^$|!~]?=`), a.querySelectorAll(':enabled').length !== 2 && q.push(':enabled', ':disabled'), o.appendChild(a).disabled = !0, a.querySelectorAll(':disabled').length !== 2 && q.push(':enabled', ':disabled'), a.querySelectorAll('*,:x'), q.push(',.*:'); })), (c.matchesSelector = Y.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ja((a) => { c.disconnectedMatch = s.call(a, '*'), s.call(a, '[s!=\'\']:x'), r.push('!=', N); }), q = q.length && new RegExp(q.join('|')), r = r.length && new RegExp(r.join('|')), b = Y.test(o.compareDocumentPosition), t = b || Y.test(o.contains) ? function (a, b) { const c = a.nodeType === 9 ? a.documentElement : a; const d = b && b.parentNode; return a === d || !(!d || d.nodeType !== 1 || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d))); } : function (a, b) { if (b) while (b = b.parentNode) if (b === a) return !0; return !1; }, B = b ? function (a, b) { if (a === b) return l = !0, 0; let d = !a.compareDocumentPosition - !b.compareDocumentPosition; return d || (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === n || a.ownerDocument === v && t(v, a) ? -1 : b === n || b.ownerDocument === v && t(v, b) ? 1 : k ? I(k, a) - I(k, b) : 0 : 4 & d ? -1 : 1); } : function (a, b) { if (a === b) return l = !0, 0; let c; let d = 0; const e = a.parentNode; const f = b.parentNode; const g = [a]; const h = [b]; if (!e || !f) return a === n ? -1 : b === n ? 1 : e ? -1 : f ? 1 : k ? I(k, a) - I(k, b) : 0; if (e === f) return la(a, b); c = a; while (c = c.parentNode)g.unshift(c); c = b; while (c = c.parentNode)h.unshift(c); while (g[d] === h[d])d++; return d ? la(g[d], h[d]) : g[d] === v ? -1 : h[d] === v ? 1 : 0; }, n) : n; }, ga.matches = function (a, b) { return ga(a, null, null, b); }, ga.matchesSelector = function (a, b) { if ((a.ownerDocument || a) !== n && m(a), b = b.replace(S, '=\'$1\']'), c.matchesSelector && p && !A[`${b} `] && (!r || !r.test(b)) && (!q || !q.test(b))) try { const d = s.call(a, b); if (d || c.disconnectedMatch || a.document && a.document.nodeType !== 11) return d; } catch (e) {} return ga(b, n, null, [a]).length > 0; }, ga.contains = function (a, b) { return (a.ownerDocument || a) !== n && m(a), t(a, b); }, ga.attr = function (a, b) { (a.ownerDocument || a) !== n && m(a); const e = d.attrHandle[b.toLowerCase()]; let f = e && C.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0; return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null; }, ga.escape = function (a) { return (`${a}`).replace(ba, ca); }, ga.error = function (a) { throw new Error(`Syntax error, unrecognized expression: ${a}`); }, ga.uniqueSort = function (a) { let b; const d = []; let e = 0; let f = 0; if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) { while (b = a[f++])b === a[f] && (e = d.push(f)); while (e--)a.splice(d[e], 1); } return k = null, a; }, e = ga.getText = function (a) { let b; let c = ''; let d = 0; const f = a.nodeType; if (f) { if (f === 1 || f === 9 || f === 11) { if (typeof a.textContent === 'string') return a.textContent; for (a = a.firstChild; a; a = a.nextSibling)c += e(a); } else if (f === 3 || f === 4) return a.nodeValue; } else while (b = a[d++])c += e(b); return c; }, d = ga.selectors = {
            cacheLength: 50,
            createPseudo: ia,
            match: V,
            attrHandle: {},
            find: {},
            relative: {
                '>': { dir: 'parentNode', first: !0 }, ' ': { dir: 'parentNode' }, '+': { dir: 'previousSibling', first: !0 }, '~': { dir: 'previousSibling' },
            },
            preFilter: { ATTR(a) { return a[1] = a[1].replace(_, aa), a[3] = (a[3] || a[4] || a[5] || '').replace(_, aa), a[2] === '~=' && (a[3] = ` ${a[3]} `), a.slice(0, 4); }, CHILD(a) { return a[1] = a[1].toLowerCase(), a[1].slice(0, 3) === 'nth' ? (a[3] || ga.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * (a[3] === 'even' || a[3] === 'odd')), a[5] = +(a[7] + a[8] || a[3] === 'odd')) : a[3] && ga.error(a[0]), a; }, PSEUDO(a) { let b; const c = !a[6] && a[2]; return V.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || '' : c && T.test(c) && (b = g(c, !0)) && (b = c.indexOf(')', c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3)); } },
            filter: {
                TAG(a) { const b = a.replace(_, aa).toLowerCase(); return a === '*' ? function () { return !0; } : function (a) { return a.nodeName && a.nodeName.toLowerCase() === b; }; }, CLASS(a) { let b = y[`${a} `]; return b || (b = new RegExp(`(^|${K})${a}(${K}|$)`)) && y(a, (a) => b.test(typeof a.className === 'string' && a.className || typeof a.getAttribute !== 'undefined' && a.getAttribute('class') || '')); }, ATTR(a, b, c) { return function (d) { let e = ga.attr(d, a); return e == null ? b === '!=' : !b || (e += '', b === '=' ? e === c : b === '!=' ? e !== c : b === '^=' ? c && e.indexOf(c) === 0 : b === '*=' ? c && e.indexOf(c) > -1 : b === '$=' ? c && e.slice(-c.length) === c : b === '~=' ? (` ${e.replace(O, ' ')} `).indexOf(c) > -1 : b === '|=' && (e === c || e.slice(0, c.length + 1) === `${c}-`)); }; }, CHILD(a, b, c, d, e) { const f = a.slice(0, 3) !== 'nth'; const g = a.slice(-4) !== 'last'; const h = b === 'of-type'; return d === 1 && e === 0 ? function (a) { return !!a.parentNode; } : function (b, c, i) { let j; let k; let l; let m; let n; let o; let p = f !== g ? 'nextSibling' : 'previousSibling'; const q = b.parentNode; const r = h && b.nodeName.toLowerCase(); const s = !i && !h; let t = !1; if (q) { if (f) { while (p) { m = b; while (m = m[p]) if (h ? m.nodeName.toLowerCase() === r : m.nodeType === 1) return !1; o = p = a === 'only' && !o && 'nextSibling'; } return !0; } if (o = [g ? q.firstChild : q.lastChild], g && s) { m = q, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n && j[2], m = n && q.childNodes[n]; while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) if (m.nodeType === 1 && ++t && m === b) { k[a] = [w, n, t]; break; } } else if (s && (m = b, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n), t === !1) while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) if ((h ? m.nodeName.toLowerCase() === r : m.nodeType === 1) && ++t && (s && (l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), k[a] = [w, t]), m === b)) break; return t -= e, t === d || t % d === 0 && t / d >= 0; } }; }, PSEUDO(a, b) { let c; const e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || ga.error(`unsupported pseudo: ${a}`); return e[u] ? e(b) : e.length > 1 ? (c = [a, a, '', b], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ia((a, c) => { let d; const f = e(a, b); let g = f.length; while (g--)d = I(a, f[g]), a[d] = !(c[d] = f[g]); }) : function (a) { return e(a, 0, c); }) : e; },
            },
            pseudos: {
                not: ia((a) => { const b = []; const c = []; const d = h(a.replace(P, '$1')); return d[u] ? ia((a, b, c, e) => { let f; const g = d(a, null, e, []); let h = a.length; while (h--)(f = g[h]) && (a[h] = !(b[h] = f)); }) : function (a, e, f) { return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop(); }; }), has: ia((a) => function (b) { return ga(a, b).length > 0; }), contains: ia((a) => (a = a.replace(_, aa), function (b) { return (b.textContent || b.innerText || e(b)).indexOf(a) > -1; })), lang: ia((a) => (U.test(a || '') || ga.error(`unsupported lang: ${a}`), a = a.replace(_, aa).toLowerCase(), function (b) { let c; do if (c = p ? b.lang : b.getAttribute('xml:lang') || b.getAttribute('lang')) return c = c.toLowerCase(), c === a || c.indexOf(`${a}-`) === 0; while ((b = b.parentNode) && b.nodeType === 1); return !1; })), target(b) { const c = a.location && a.location.hash; return c && c.slice(1) === b.id; }, root(a) { return a === o; }, focus(a) { return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex); }, enabled: oa(!1), disabled: oa(!0), checked(a) { const b = a.nodeName.toLowerCase(); return b === 'input' && !!a.checked || b === 'option' && !!a.selected; }, selected(a) { return a.parentNode && a.parentNode.selectedIndex, a.selected === !0; }, empty(a) { for (a = a.firstChild; a; a = a.nextSibling) if (a.nodeType < 6) return !1; return !0; }, parent(a) { return !d.pseudos.empty(a); }, header(a) { return X.test(a.nodeName); }, input(a) { return W.test(a.nodeName); }, button(a) { const b = a.nodeName.toLowerCase(); return b === 'input' && a.type === 'button' || b === 'button'; }, text(a) { let b; return a.nodeName.toLowerCase() === 'input' && a.type === 'text' && ((b = a.getAttribute('type')) == null || b.toLowerCase() === 'text'); }, first: pa(() => [0]), last: pa((a, b) => [b - 1]), eq: pa((a, b, c) => [c < 0 ? c + b : c]), even: pa((a, b) => { for (let c = 0; c < b; c += 2)a.push(c); return a; }), odd: pa((a, b) => { for (let c = 1; c < b; c += 2)a.push(c); return a; }), lt: pa((a, b, c) => { for (let d = c < 0 ? c + b : c; --d >= 0;)a.push(d); return a; }), gt: pa((a, b, c) => { for (let d = c < 0 ? c + b : c; ++d < b;)a.push(d); return a; }),
            },
        }, d.pseudos.nth = d.pseudos.eq; for (b in {
            radio: !0, checkbox: !0, file: !0, password: !0, image: !0,
        })d.pseudos[b] = ma(b); for (b in { submit: !0, reset: !0 })d.pseudos[b] = na(b); function ra() {}ra.prototype = d.filters = d.pseudos, d.setFilters = new ra(), g = ga.tokenize = function (a, b) { let c; let e; let f; let g; let h; let i; let j; const k = z[`${a} `]; if (k) return b ? 0 : k.slice(0); h = a, i = [], j = d.preFilter; while (h) { c && !(e = Q.exec(h)) || (e && (h = h.slice(e[0].length) || h), i.push(f = [])), c = !1, (e = R.exec(h)) && (c = e.shift(), f.push({ value: c, type: e[0].replace(P, ' ') }), h = h.slice(c.length)); for (g in d.filter)!(e = V[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), f.push({ value: c, type: g, matches: e }), h = h.slice(c.length)); if (!c) break; } return b ? h.length : h ? ga.error(a) : z(a, i).slice(0); }; function sa(a) { for (var b = 0, c = a.length, d = ''; b < c; b++)d += a[b].value; return d; } function ta(a, b, c) { const d = b.dir; const e = b.next; const f = e || d; const g = c && f === 'parentNode'; const h = x++; return b.first ? function (b, c, e) { while (b = b[d]) if (b.nodeType === 1 || g) return a(b, c, e); return !1; } : function (b, c, i) { let j; let k; let l; const m = [w, h]; if (i) { while (b = b[d]) if ((b.nodeType === 1 || g) && a(b, c, i)) return !0; } else while (b = b[d]) if (b.nodeType === 1 || g) if (l = b[u] || (b[u] = {}), k = l[b.uniqueID] || (l[b.uniqueID] = {}), e && e === b.nodeName.toLowerCase())b = b[d] || b; else { if ((j = k[f]) && j[0] === w && j[1] === h) return m[2] = j[2]; if (k[f] = m, m[2] = a(b, c, i)) return !0; } return !1; }; } function ua(a) { return a.length > 1 ? function (b, c, d) { let e = a.length; while (e--) if (!a[e](b, c, d)) return !1; return !0; } : a[0]; } function va(a, b, c) { for (let d = 0, e = b.length; d < e; d++)ga(a, b[d], c); return c; } function wa(a, b, c, d, e) { for (var f, g = [], h = 0, i = a.length, j = b != null; h < i; h++)(f = a[h]) && (c && !c(f, d, e) || (g.push(f), j && b.push(h))); return g; } function xa(a, b, c, d, e, f) { return d && !d[u] && (d = xa(d)), e && !e[u] && (e = xa(e, f)), ia((f, g, h, i) => { let j; let k; let l; const m = []; const n = []; const o = g.length; const p = f || va(b || '*', h.nodeType ? [h] : h, []); const q = !a || !f && b ? p : wa(p, m, a, h, i); let r = c ? e || (f ? a : o || d) ? [] : g : q; if (c && c(q, r, h, i), d) { j = wa(r, n), d(j, [], h, i), k = j.length; while (k--)(l = j[k]) && (r[n[k]] = !(q[n[k]] = l)); } if (f) { if (e || a) { if (e) { j = [], k = r.length; while (k--)(l = r[k]) && j.push(q[k] = l); e(null, r = [], j, i); }k = r.length; while (k--)(l = r[k]) && (j = e ? I(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l)); } } else r = wa(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : G.apply(g, r); }); } function ya(a) { for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[' '], i = g ? 1 : 0, k = ta((a) => a === b, h, !0), l = ta((a) => I(b, a) > -1, h, !0), m = [function (a, c, d) { const e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d)); return b = null, e; }]; i < f; i++) if (c = d.relative[a[i].type])m = [ta(ua(m), c)]; else { if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) { for (e = ++i; e < f; e++) if (d.relative[a[e].type]) break; return xa(i > 1 && ua(m), i > 1 && sa(a.slice(0, i - 1).concat({ value: a[i - 2].type === ' ' ? '*' : '' })).replace(P, '$1'), c, i < e && ya(a.slice(i, e)), e < f && ya(a = a.slice(e)), e < f && sa(a)); }m.push(c); } return ua(m); } function za(a, b) { const c = b.length > 0; const e = a.length > 0; const f = function (f, g, h, i, k) { let l; let o; let q; let r = 0; let s = '0'; const t = f && []; let u = []; const v = j; const x = f || e && d.find.TAG('*', k); const y = w += v == null ? 1 : Math.random() || 0.1; const z = x.length; for (k && (j = g === n || g || k); s !== z && (l = x[s]) != null; s++) { if (e && l) { o = 0, g || l.ownerDocument === n || (m(l), h = !p); while (q = a[o++]) if (q(l, g || n, h)) { i.push(l); break; }k && (w = y); }c && ((l = !q && l) && r--, f && t.push(l)); } if (r += s, c && s !== r) { o = 0; while (q = b[o++])q(t, u, g, h); if (f) { if (r > 0) while (s--)t[s] || u[s] || (u[s] = E.call(i)); u = wa(u); }G.apply(i, u), k && !f && u.length > 0 && r + b.length > 1 && ga.uniqueSort(i); } return k && (w = y, j = v), t; }; return c ? ia(f) : f; } return h = ga.compile = function (a, b) { let c; const d = []; const e = []; let f = A[`${a} `]; if (!f) { b || (b = g(a)), c = b.length; while (c--)f = ya(b[c]), f[u] ? d.push(f) : e.push(f); f = A(a, za(e, d)), f.selector = a; } return f; }, i = ga.select = function (a, b, c, e) { let f; let i; let j; let k; let l; const m = typeof a === 'function' && a; const n = !e && g(a = m.selector || a); if (c = c || [], n.length === 1) { if (i = n[0] = n[0].slice(0), i.length > 2 && (j = i[0]).type === 'ID' && b.nodeType === 9 && p && d.relative[i[1].type]) { if (b = (d.find.ID(j.matches[0].replace(_, aa), b) || [])[0], !b) return c; m && (b = b.parentNode), a = a.slice(i.shift().value.length); }f = V.needsContext.test(a) ? 0 : i.length; while (f--) { if (j = i[f], d.relative[k = j.type]) break; if ((l = d.find[k]) && (e = l(j.matches[0].replace(_, aa), $.test(i[0].type) && qa(b.parentNode) || b))) { if (i.splice(f, 1), a = e.length && sa(i), !a) return G.apply(c, e), c; break; } } } return (m || h(a, n))(e, b, !p, c, !b || $.test(a) && qa(b.parentNode) || b), c; }, c.sortStable = u.split('').sort(B).join('') === u, c.detectDuplicates = !!l, m(), c.sortDetached = ja((a) => 1 & a.compareDocumentPosition(n.createElement('fieldset'))), ja((a) => (a.innerHTML = '<a href=\'#\'></a>', a.firstChild.getAttribute('href') === '#')) || ka('type|href|height|width', (a, b, c) => { if (!c) return a.getAttribute(b, b.toLowerCase() === 'type' ? 1 : 2); }), c.attributes && ja((a) => (a.innerHTML = '<input/>', a.firstChild.setAttribute('value', ''), a.firstChild.getAttribute('value') === '')) || ka('value', (a, b, c) => { if (!c && a.nodeName.toLowerCase() === 'input') return a.defaultValue; }), ja((a) => a.getAttribute('disabled') == null) || ka(J, (a, b, c) => { let d; if (!c) return a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null; }), ga;
    }(a)); r.find = x, r.expr = x.selectors, r.expr[':'] = r.expr.pseudos, r.uniqueSort = r.unique = x.uniqueSort, r.text = x.getText, r.isXMLDoc = x.isXML, r.contains = x.contains, r.escapeSelector = x.escape; const y = function (a, b, c) { const d = []; const e = void 0 !== c; while ((a = a[b]) && a.nodeType !== 9) if (a.nodeType === 1) { if (e && r(a).is(c)) break; d.push(a); } return d; }; const z = function (a, b) { for (var c = []; a; a = a.nextSibling)a.nodeType === 1 && a !== b && c.push(a); return c; }; const A = r.expr.match.needsContext; function B(a, b) { return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase(); } const C = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i; const D = /^.[^:#\[\.,]*$/; function E(a, b, c) { return r.isFunction(b) ? r.grep(a, (a, d) => !!b.call(a, d, a) !== c) : b.nodeType ? r.grep(a, (a) => a === b !== c) : typeof b !== 'string' ? r.grep(a, (a) => i.call(b, a) > -1 !== c) : D.test(b) ? r.filter(b, a, c) : (b = r.filter(b, a), r.grep(a, (a) => i.call(b, a) > -1 !== c && a.nodeType === 1)); }r.filter = function (a, b, c) { const d = b[0]; return c && (a = `:not(${a})`), b.length === 1 && d.nodeType === 1 ? r.find.matchesSelector(d, a) ? [d] : [] : r.find.matches(a, r.grep(b, (a) => a.nodeType === 1)); }, r.fn.extend({
        find(a) { let b; let c; const d = this.length; const e = this; if (typeof a !== 'string') return this.pushStack(r(a).filter(function () { for (b = 0; b < d; b++) if (r.contains(e[b], this)) return !0; })); for (c = this.pushStack([]), b = 0; b < d; b++)r.find(a, e[b], c); return d > 1 ? r.uniqueSort(c) : c; }, filter(a) { return this.pushStack(E(this, a || [], !1)); }, not(a) { return this.pushStack(E(this, a || [], !0)); }, is(a) { return !!E(this, typeof a === 'string' && A.test(a) ? r(a) : a || [], !1).length; },
    }); let F; const G = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/; const H = r.fn.init = function (a, b, c) { let e; let f; if (!a) return this; if (c = c || F, typeof a === 'string') { if (e = a[0] === '<' && a[a.length - 1] === '>' && a.length >= 3 ? [null, a, null] : G.exec(a), !e || !e[1] && b) return !b || b.jquery ? (b || c).find(a) : this.constructor(b).find(a); if (e[1]) { if (b = b instanceof r ? b[0] : b, r.merge(this, r.parseHTML(e[1], b && b.nodeType ? b.ownerDocument || b : d, !0)), C.test(e[1]) && r.isPlainObject(b)) for (e in b)r.isFunction(this[e]) ? this[e](b[e]) : this.attr(e, b[e]); return this; } return f = d.getElementById(e[2]), f && (this[0] = f, this.length = 1), this; } return a.nodeType ? (this[0] = a, this.length = 1, this) : r.isFunction(a) ? void 0 !== c.ready ? c.ready(a) : a(r) : r.makeArray(a, this); }; H.prototype = r.fn, F = r(d); const I = /^(?:parents|prev(?:Until|All))/; const J = {
        children: !0, contents: !0, next: !0, prev: !0,
    }; r.fn.extend({
        has(a) { const b = r(a, this); const c = b.length; return this.filter(function () { for (let a = 0; a < c; a++) if (r.contains(this, b[a])) return !0; }); }, closest(a, b) { let c; let d = 0; const e = this.length; const f = []; const g = typeof a !== 'string' && r(a); if (!A.test(a)) for (;d < e; d++) for (c = this[d]; c && c !== b; c = c.parentNode) if (c.nodeType < 11 && (g ? g.index(c) > -1 : c.nodeType === 1 && r.find.matchesSelector(c, a))) { f.push(c); break; } return this.pushStack(f.length > 1 ? r.uniqueSort(f) : f); }, index(a) { return a ? typeof a === 'string' ? i.call(r(a), this[0]) : i.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1; }, add(a, b) { return this.pushStack(r.uniqueSort(r.merge(this.get(), r(a, b)))); }, addBack(a) { return this.add(a == null ? this.prevObject : this.prevObject.filter(a)); },
    }); function K(a, b) { while ((a = a[b]) && a.nodeType !== 1);return a; }r.each({
        parent(a) { const b = a.parentNode; return b && b.nodeType !== 11 ? b : null; }, parents(a) { return y(a, 'parentNode'); }, parentsUntil(a, b, c) { return y(a, 'parentNode', c); }, next(a) { return K(a, 'nextSibling'); }, prev(a) { return K(a, 'previousSibling'); }, nextAll(a) { return y(a, 'nextSibling'); }, prevAll(a) { return y(a, 'previousSibling'); }, nextUntil(a, b, c) { return y(a, 'nextSibling', c); }, prevUntil(a, b, c) { return y(a, 'previousSibling', c); }, siblings(a) { return z((a.parentNode || {}).firstChild, a); }, children(a) { return z(a.firstChild); }, contents(a) { return B(a, 'iframe') ? a.contentDocument : (B(a, 'template') && (a = a.content || a), r.merge([], a.childNodes)); },
    }, (a, b) => { r.fn[a] = function (c, d) { let e = r.map(this, b, c); return a.slice(-5) !== 'Until' && (d = c), d && typeof d === 'string' && (e = r.filter(d, e)), this.length > 1 && (J[a] || r.uniqueSort(e), I.test(a) && e.reverse()), this.pushStack(e); }; }); const L = /[^\x20\t\r\n\f]+/g; function M(a) { const b = {}; return r.each(a.match(L) || [], (a, c) => { b[c] = !0; }), b; }r.Callbacks = function (a) {
        a = typeof a === 'string' ? M(a) : r.extend({}, a); let b; let c; let d; let e; let f = []; let g = []; let h = -1; const i = function () { for (e = e || a.once, d = b = !0; g.length; h = -1) { c = g.shift(); while (++h < f.length)f[h].apply(c[0], c[1]) === !1 && a.stopOnFalse && (h = f.length, c = !1); }a.memory || (c = !1), b = !1, e && (f = c ? [] : ''); }; var j = {
            add() { return f && (c && !b && (h = f.length - 1, g.push(c)), (function d(b) { r.each(b, (b, c) => { r.isFunction(c) ? a.unique && j.has(c) || f.push(c) : c && c.length && r.type(c) !== 'string' && d(c); }); }(arguments)), c && !b && i()), this; }, remove() { return r.each(arguments, (a, b) => { let c; while ((c = r.inArray(b, f, c)) > -1)f.splice(c, 1), c <= h && h--; }), this; }, has(a) { return a ? r.inArray(a, f) > -1 : f.length > 0; }, empty() { return f && (f = []), this; }, disable() { return e = g = [], f = c = '', this; }, disabled() { return !f; }, lock() { return e = g = [], c || b || (f = c = ''), this; }, locked() { return !!e; }, fireWith(a, c) { return e || (c = c || [], c = [a, c.slice ? c.slice() : c], g.push(c), b || i()), this; }, fire() { return j.fireWith(this, arguments), this; }, fired() { return !!d; },
        }; return j;
    }; function N(a) { return a; } function O(a) { throw a; } function P(a, b, c, d) { let e; try { a && r.isFunction(e = a.promise) ? e.call(a).done(b).fail(c) : a && r.isFunction(e = a.then) ? e.call(a, b, c) : b.apply(void 0, [a].slice(d)); } catch (a) { c.apply(void 0, [a]); } }r.extend({
        Deferred(b) {
            const c = [['notify', 'progress', r.Callbacks('memory'), r.Callbacks('memory'), 2], ['resolve', 'done', r.Callbacks('once memory'), r.Callbacks('once memory'), 0, 'resolved'], ['reject', 'fail', r.Callbacks('once memory'), r.Callbacks('once memory'), 1, 'rejected']]; let d = 'pending'; var e = {
                state() { return d; }, always() { return f.done(arguments).fail(arguments), this; }, catch(a) { return e.then(null, a); }, pipe() { let a = arguments; return r.Deferred((b) => { r.each(c, (c, d) => { const e = r.isFunction(a[d[4]]) && a[d[4]]; f[d[1]](function () { const a = e && e.apply(this, arguments); a && r.isFunction(a.promise) ? a.promise().progress(b.notify).done(b.resolve).fail(b.reject) : b[`${d[0]}With`](this, e ? [a] : arguments); }); }), a = null; }).promise(); }, then(b, d, e) { let f = 0; function g(b, c, d, e) { return function () { let h = this; let i = arguments; const j = function () { let a; let j; if (!(b < f)) { if (a = d.apply(h, i), a === c.promise()) throw new TypeError('Thenable self-resolution'); j = a && (typeof a === 'object' || typeof a === 'function') && a.then, r.isFunction(j) ? e ? j.call(a, g(f, c, N, e), g(f, c, O, e)) : (f++, j.call(a, g(f, c, N, e), g(f, c, O, e), g(f, c, N, c.notifyWith))) : (d !== N && (h = void 0, i = [a]), (e || c.resolveWith)(h, i)); } }; var k = e ? j : function () { try { j(); } catch (a) { r.Deferred.exceptionHook && r.Deferred.exceptionHook(a, k.stackTrace), b + 1 >= f && (d !== O && (h = void 0, i = [a]), c.rejectWith(h, i)); } }; b ? k() : (r.Deferred.getStackHook && (k.stackTrace = r.Deferred.getStackHook()), a.setTimeout(k)); }; } return r.Deferred((a) => { c[0][3].add(g(0, a, r.isFunction(e) ? e : N, a.notifyWith)), c[1][3].add(g(0, a, r.isFunction(b) ? b : N)), c[2][3].add(g(0, a, r.isFunction(d) ? d : O)); }).promise(); }, promise(a) { return a != null ? r.extend(a, e) : e; },
            }; var f = {}; return r.each(c, (a, b) => { const g = b[2]; const h = b[5]; e[b[1]] = g.add, h && g.add(() => { d = h; }, c[3 - a][2].disable, c[0][2].lock), g.add(b[3].fire), f[b[0]] = function () { return f[`${b[0]}With`](this === f ? void 0 : this, arguments), this; }, f[`${b[0]}With`] = g.fireWith; }), e.promise(f), b && b.call(f, f), f;
        },
        when(a) { let b = arguments.length; let c = b; const d = Array(c); const e = f.call(arguments); const g = r.Deferred(); const h = function (a) { return function (c) { d[a] = this, e[a] = arguments.length > 1 ? f.call(arguments) : c, --b || g.resolveWith(d, e); }; }; if (b <= 1 && (P(a, g.done(h(c)).resolve, g.reject, !b), g.state() === 'pending' || r.isFunction(e[c] && e[c].then))) return g.then(); while (c--)P(e[c], h(c), g.reject); return g.promise(); },
    }); const Q = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/; r.Deferred.exceptionHook = function (b, c) { a.console && a.console.warn && b && Q.test(b.name) && a.console.warn(`jQuery.Deferred exception: ${b.message}`, b.stack, c); }, r.readyException = function (b) { a.setTimeout(() => { throw b; }); }; const R = r.Deferred(); r.fn.ready = function (a) { return R.then(a).catch((a) => { r.readyException(a); }), this; }, r.extend({ isReady: !1, readyWait: 1, ready(a) { (a === !0 ? --r.readyWait : r.isReady) || (r.isReady = !0, a !== !0 && --r.readyWait > 0 || R.resolveWith(d, [r])); } }), r.ready.then = R.then; function S() {
        d.removeEventListener('DOMContentLoaded', S),
        a.removeEventListener('load', S), r.ready();
    }d.readyState === 'complete' || d.readyState !== 'loading' && !d.documentElement.doScroll ? a.setTimeout(r.ready) : (d.addEventListener('DOMContentLoaded', S), a.addEventListener('load', S)); var T = function (a, b, c, d, e, f, g) { let h = 0; const i = a.length; let j = c == null; if (r.type(c) === 'object') { e = !0; for (h in c)T(a, b, h, c[h], !0, f, g); } else if (void 0 !== d && (e = !0, r.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function (a, b, c) { return j.call(r(a), c); })), b)) for (;h < i; h++)b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c))); return e ? a : j ? b.call(a) : i ? b(a[0], c) : f; }; const U = function (a) { return a.nodeType === 1 || a.nodeType === 9 || !+a.nodeType; }; function V() { this.expando = r.expando + V.uid++; }V.uid = 1, V.prototype = {
        cache(a) { let b = a[this.expando]; return b || (b = {}, U(a) && (a.nodeType ? a[this.expando] = b : Object.defineProperty(a, this.expando, { value: b, configurable: !0 }))), b; }, set(a, b, c) { let d; const e = this.cache(a); if (typeof b === 'string')e[r.camelCase(b)] = c; else for (d in b)e[r.camelCase(d)] = b[d]; return e; }, get(a, b) { return void 0 === b ? this.cache(a) : a[this.expando] && a[this.expando][r.camelCase(b)]; }, access(a, b, c) { return void 0 === b || b && typeof b === 'string' && void 0 === c ? this.get(a, b) : (this.set(a, b, c), void 0 !== c ? c : b); }, remove(a, b) { let c; const d = a[this.expando]; if (void 0 !== d) { if (void 0 !== b) { Array.isArray(b) ? b = b.map(r.camelCase) : (b = r.camelCase(b), b = b in d ? [b] : b.match(L) || []), c = b.length; while (c--) delete d[b[c]]; }(void 0 === b || r.isEmptyObject(d)) && (a.nodeType ? a[this.expando] = void 0 : delete a[this.expando]); } }, hasData(a) { const b = a[this.expando]; return void 0 !== b && !r.isEmptyObject(b); },
    }; const W = new V(); const X = new V(); const Y = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/; const
        Z = /[A-Z]/g; function $(a) { return a === 'true' || a !== 'false' && (a === 'null' ? null : a === `${+a}` ? +a : Y.test(a) ? JSON.parse(a) : a); } function _(a, b, c) { let d; if (void 0 === c && a.nodeType === 1) if (d = `data-${b.replace(Z, '-$&').toLowerCase()}`, c = a.getAttribute(d), typeof c === 'string') { try { c = $(c); } catch (e) {}X.set(a, b, c); } else c = void 0; return c; }r.extend({
        hasData(a) { return X.hasData(a) || W.hasData(a); }, data(a, b, c) { return X.access(a, b, c); }, removeData(a, b) { X.remove(a, b); }, _data(a, b, c) { return W.access(a, b, c); }, _removeData(a, b) { W.remove(a, b); },
    }), r.fn.extend({ data(a, b) { let c; let d; let e; const f = this[0]; const g = f && f.attributes; if (void 0 === a) { if (this.length && (e = X.get(f), f.nodeType === 1 && !W.get(f, 'hasDataAttrs'))) { c = g.length; while (c--)g[c] && (d = g[c].name, d.indexOf('data-') === 0 && (d = r.camelCase(d.slice(5)), _(f, d, e[d]))); W.set(f, 'hasDataAttrs', !0); } return e; } return typeof a === 'object' ? this.each(function () { X.set(this, a); }) : T(this, function (b) { let c; if (f && void 0 === b) { if (c = X.get(f, a), void 0 !== c) return c; if (c = _(f, a), void 0 !== c) return c; } else this.each(function () { X.set(this, a, b); }); }, null, b, arguments.length > 1, null, !0); }, removeData(a) { return this.each(function () { X.remove(this, a); }); } }), r.extend({ queue(a, b, c) { let d; if (a) return b = `${b || 'fx'}queue`, d = W.get(a, b), c && (!d || Array.isArray(c) ? d = W.access(a, b, r.makeArray(c)) : d.push(c)), d || []; }, dequeue(a, b) { b = b || 'fx'; const c = r.queue(a, b); let d = c.length; let e = c.shift(); const f = r._queueHooks(a, b); const g = function () { r.dequeue(a, b); }; e === 'inprogress' && (e = c.shift(), d--), e && (b === 'fx' && c.unshift('inprogress'), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire(); }, _queueHooks(a, b) { const c = `${b}queueHooks`; return W.get(a, c) || W.access(a, c, { empty: r.Callbacks('once memory').add(() => { W.remove(a, [`${b}queue`, c]); }) }); } }), r.fn.extend({
        queue(a, b) { let c = 2; return typeof a !== 'string' && (b = a, a = 'fx', c--), arguments.length < c ? r.queue(this[0], a) : void 0 === b ? this : this.each(function () { const c = r.queue(this, a, b); r._queueHooks(this, a), a === 'fx' && c[0] !== 'inprogress' && r.dequeue(this, a); }); }, dequeue(a) { return this.each(function () { r.dequeue(this, a); }); }, clearQueue(a) { return this.queue(a || 'fx', []); }, promise(a, b) { let c; let d = 1; const e = r.Deferred(); const f = this; let g = this.length; const h = function () { --d || e.resolveWith(f, [f]); }; typeof a !== 'string' && (b = a, a = void 0), a = a || 'fx'; while (g--)c = W.get(f[g], `${a}queueHooks`), c && c.empty && (d++, c.empty.add(h)); return h(), e.promise(b); },
    }); const aa = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source; const ba = new RegExp(`^(?:([+-])=|)(${aa})([a-z%]*)$`, 'i'); const ca = ['Top', 'Right', 'Bottom', 'Left']; const da = function (a, b) { return a = b || a, a.style.display === 'none' || a.style.display === '' && r.contains(a.ownerDocument, a) && r.css(a, 'display') === 'none'; }; const ea = function (a, b, c, d) { let e; let f; const g = {}; for (f in b)g[f] = a.style[f], a.style[f] = b[f]; e = c.apply(a, d || []); for (f in b)a.style[f] = g[f]; return e; }; function fa(a, b, c, d) { let e; let f = 1; let g = 20; const h = d ? function () { return d.cur(); } : function () { return r.css(a, b, ''); }; const i = h(); let j = c && c[3] || (r.cssNumber[b] ? '' : 'px'); let k = (r.cssNumber[b] || j !== 'px' && +i) && ba.exec(r.css(a, b)); if (k && k[3] !== j) { j = j || k[3], c = c || [], k = +i || 1; do f = f || '.5', k /= f, r.style(a, b, k + j); while (f !== (f = h() / i) && f !== 1 && --g); } return c && (k = +k || +i || 0, e = c[1] ? k + (c[1] + 1) * c[2] : +c[2], d && (d.unit = j, d.start = k, d.end = e)), e; } const ga = {}; function ha(a) { let b; const c = a.ownerDocument; const d = a.nodeName; let e = ga[d]; return e || (b = c.body.appendChild(c.createElement(d)), e = r.css(b, 'display'), b.parentNode.removeChild(b), e === 'none' && (e = 'block'), ga[d] = e, e); } function ia(a, b) { for (var c, d, e = [], f = 0, g = a.length; f < g; f++)d = a[f], d.style && (c = d.style.display, b ? (c === 'none' && (e[f] = W.get(d, 'display') || null, e[f] || (d.style.display = '')), d.style.display === '' && da(d) && (e[f] = ha(d))) : c !== 'none' && (e[f] = 'none', W.set(d, 'display', c))); for (f = 0; f < g; f++)e[f] != null && (a[f].style.display = e[f]); return a; }r.fn.extend({ show() { return ia(this, !0); }, hide() { return ia(this); }, toggle(a) { return typeof a === 'boolean' ? a ? this.show() : this.hide() : this.each(function () { da(this) ? r(this).show() : r(this).hide(); }); } }); const ja = /^(?:checkbox|radio)$/i; const ka = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i; const la = /^$|\/(?:java|ecma)script/i; const ma = {
        option: [1, '<select multiple=\'multiple\'>', '</select>'], thead: [1, '<table>', '</table>'], col: [2, '<table><colgroup>', '</colgroup></table>'], tr: [2, '<table><tbody>', '</tbody></table>'], td: [3, '<table><tbody><tr>', '</tr></tbody></table>'], _default: [0, '', ''],
    }; ma.optgroup = ma.option, ma.tbody = ma.tfoot = ma.colgroup = ma.caption = ma.thead, ma.th = ma.td; function na(a, b) { let c; return c = typeof a.getElementsByTagName !== 'undefined' ? a.getElementsByTagName(b || '*') : typeof a.querySelectorAll !== 'undefined' ? a.querySelectorAll(b || '*') : [], void 0 === b || b && B(a, b) ? r.merge([a], c) : c; } function oa(a, b) { for (let c = 0, d = a.length; c < d; c++)W.set(a[c], 'globalEval', !b || W.get(b[c], 'globalEval')); } const pa = /<|&#?\w+;/; function qa(a, b, c, d, e) { for (var f, g, h, i, j, k, l = b.createDocumentFragment(), m = [], n = 0, o = a.length; n < o; n++) if (f = a[n], f || f === 0) if (r.type(f) === 'object')r.merge(m, f.nodeType ? [f] : f); else if (pa.test(f)) { g = g || l.appendChild(b.createElement('div')), h = (ka.exec(f) || ['', ''])[1].toLowerCase(), i = ma[h] || ma._default, g.innerHTML = i[1] + r.htmlPrefilter(f) + i[2], k = i[0]; while (k--)g = g.lastChild; r.merge(m, g.childNodes), g = l.firstChild, g.textContent = ''; } else m.push(b.createTextNode(f)); l.textContent = '', n = 0; while (f = m[n++]) if (d && r.inArray(f, d) > -1)e && e.push(f); else if (j = r.contains(f.ownerDocument, f), g = na(l.appendChild(f), 'script'), j && oa(g), c) { k = 0; while (f = g[k++])la.test(f.type || '') && c.push(f); } return l; }!(function () { const a = d.createDocumentFragment(); const b = a.appendChild(d.createElement('div')); const c = d.createElement('input'); c.setAttribute('type', 'radio'), c.setAttribute('checked', 'checked'), c.setAttribute('name', 't'), b.appendChild(c), o.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = '<textarea>x</textarea>', o.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue; }()); const ra = d.documentElement; const sa = /^key/; const ta = /^(?:mouse|pointer|contextmenu|drag|drop)|click/; const ua = /^([^.]*)(?:\.(.+)|)/; function va() { return !0; } function wa() { return !1; } function xa() { try { return d.activeElement; } catch (a) {} } function ya(a, b, c, d, e, f) { let g; let h; if (typeof b === 'object') { typeof c !== 'string' && (d = d || c, c = void 0); for (h in b)ya(a, h, c, d, b[h], f); return a; } if (d == null && e == null ? (e = c, d = c = void 0) : e == null && (typeof c === 'string' ? (e = d, d = void 0) : (e = d, d = c, c = void 0)), e === !1)e = wa; else if (!e) return a; return f === 1 && (g = e, e = function (a) { return r().off(a), g.apply(this, arguments); }, e.guid = g.guid || (g.guid = r.guid++)), a.each(function () { r.event.add(this, b, e, d, c); }); }r.event = {
        global: {},
        add(a, b, c, d, e) {
            let f; let g; let h; let i; let j; let k; let l; let m; let n; let o; let p; const q = W.get(a); if (q) {
                c.handler && (f = c, c = f.handler, e = f.selector), e && r.find.matchesSelector(ra, e), c.guid || (c.guid = r.guid++), (i = q.events) || (i = q.events = {}), (g = q.handle) || (g = q.handle = function (b) { return typeof r !== 'undefined' && r.event.triggered !== b.type ? r.event.dispatch.apply(a, arguments) : void 0; }), b = (b || '').match(L) || [''], j = b.length; while (j--) {
                    h = ua.exec(b[j]) || [], n = p = h[1], o = (h[2] || '').split('.').sort(), n && (l = r.event.special[n] || {}, n = (e ? l.delegateType : l.bindType) || n, l = r.event.special[n] || {}, k = r.extend({
                        type: n, origType: p, data: d, handler: c, guid: c.guid, selector: e, needsContext: e && r.expr.match.needsContext.test(e), namespace: o.join('.'),
                    }, f), (m = i[n]) || (m = i[n] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, o, g) !== !1 || a.addEventListener && a.addEventListener(n, g)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), r.event.global[n] = !0);
                }
            }
        },
        remove(a, b, c, d, e) { let f; let g; let h; let i; let j; let k; let l; let m; let n; let o; let p; const q = W.hasData(a) && W.get(a); if (q && (i = q.events)) { b = (b || '').match(L) || [''], j = b.length; while (j--) if (h = ua.exec(b[j]) || [], n = p = h[1], o = (h[2] || '').split('.').sort(), n) { l = r.event.special[n] || {}, n = (d ? l.delegateType : l.bindType) || n, m = i[n] || [], h = h[2] && new RegExp(`(^|\\.)${o.join('\\.(?:.*\\.|)')}(\\.|$)`), g = f = m.length; while (f--)k = m[f], !e && p !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && (d !== '**' || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k)); g && !m.length && (l.teardown && l.teardown.call(a, o, q.handle) !== !1 || r.removeEvent(a, n, q.handle), delete i[n]); } else for (n in i)r.event.remove(a, n + b[j], c, d, !0); r.isEmptyObject(i) && W.remove(a, 'handle events'); } },
        dispatch(a) { const b = r.event.fix(a); let c; let d; let e; let f; let g; let h; const i = new Array(arguments.length); const j = (W.get(this, 'events') || {})[b.type] || []; const k = r.event.special[b.type] || {}; for (i[0] = b, c = 1; c < arguments.length; c++)i[c] = arguments[c]; if (b.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, b) !== !1) { h = r.event.handlers.call(this, b, j), c = 0; while ((f = h[c++]) && !b.isPropagationStopped()) { b.currentTarget = f.elem, d = 0; while ((g = f.handlers[d++]) && !b.isImmediatePropagationStopped())b.rnamespace && !b.rnamespace.test(g.namespace) || (b.handleObj = g, b.data = g.data, e = ((r.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), void 0 !== e && (b.result = e) === !1 && (b.preventDefault(), b.stopPropagation())); } return k.postDispatch && k.postDispatch.call(this, b), b.result; } },
        handlers(a, b) { let c; let d; let e; let f; let g; const h = []; const i = b.delegateCount; let j = a.target; if (i && j.nodeType && !(a.type === 'click' && a.button >= 1)) for (;j !== this; j = j.parentNode || this) if (j.nodeType === 1 && (a.type !== 'click' || j.disabled !== !0)) { for (f = [], g = {}, c = 0; c < i; c++)d = b[c], e = `${d.selector} `, void 0 === g[e] && (g[e] = d.needsContext ? r(e, this).index(j) > -1 : r.find(e, this, null, [j]).length), g[e] && f.push(d); f.length && h.push({ elem: j, handlers: f }); } return j = this, i < b.length && h.push({ elem: j, handlers: b.slice(i) }), h; },
        addProp(a, b) {
            Object.defineProperty(r.Event.prototype, a, {
                enumerable: !0,
                configurable: !0,
                get: r.isFunction(b) ? function () { if (this.originalEvent) return b(this.originalEvent); } : function () { if (this.originalEvent) return this.originalEvent[a]; },
                set(b) {
                    Object.defineProperty(this, a, {
                        enumerable: !0, configurable: !0, writable: !0, value: b,
                    });
                },
            });
        },
        fix(a) { return a[r.expando] ? a : new r.Event(a); },
        special: {
            load: { noBubble: !0 }, focus: { trigger() { if (this !== xa() && this.focus) return this.focus(), !1; }, delegateType: 'focusin' }, blur: { trigger() { if (this === xa() && this.blur) return this.blur(), !1; }, delegateType: 'focusout' }, click: { trigger() { if (this.type === 'checkbox' && this.click && B(this, 'input')) return this.click(), !1; }, _default(a) { return B(a.target, 'a'); } }, beforeunload: { postDispatch(a) { void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result); } },
        },
    }, r.removeEvent = function (a, b, c) { a.removeEventListener && a.removeEventListener(b, c); }, r.Event = function (a, b) { return this instanceof r.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? va : wa, this.target = a.target && a.target.nodeType === 3 ? a.target.parentNode : a.target, this.currentTarget = a.currentTarget, this.relatedTarget = a.relatedTarget) : this.type = a, b && r.extend(this, b), this.timeStamp = a && a.timeStamp || r.now(), void (this[r.expando] = !0)) : new r.Event(a, b); }, r.Event.prototype = {
        constructor: r.Event, isDefaultPrevented: wa, isPropagationStopped: wa, isImmediatePropagationStopped: wa, isSimulated: !1, preventDefault() { const a = this.originalEvent; this.isDefaultPrevented = va, a && !this.isSimulated && a.preventDefault(); }, stopPropagation() { const a = this.originalEvent; this.isPropagationStopped = va, a && !this.isSimulated && a.stopPropagation(); }, stopImmediatePropagation() { const a = this.originalEvent; this.isImmediatePropagationStopped = va, a && !this.isSimulated && a.stopImmediatePropagation(), this.stopPropagation(); },
    }, r.each({
        altKey: !0, bubbles: !0, cancelable: !0, changedTouches: !0, ctrlKey: !0, detail: !0, eventPhase: !0, metaKey: !0, pageX: !0, pageY: !0, shiftKey: !0, view: !0, char: !0, charCode: !0, key: !0, keyCode: !0, button: !0, buttons: !0, clientX: !0, clientY: !0, offsetX: !0, offsetY: !0, pointerId: !0, pointerType: !0, screenX: !0, screenY: !0, targetTouches: !0, toElement: !0, touches: !0, which(a) { const b = a.button; return a.which == null && sa.test(a.type) ? a.charCode != null ? a.charCode : a.keyCode : !a.which && void 0 !== b && ta.test(a.type) ? 1 & b ? 1 : 2 & b ? 3 : 4 & b ? 2 : 0 : a.which; },
    }, r.event.addProp), r.each({
        mouseenter: 'mouseover', mouseleave: 'mouseout', pointerenter: 'pointerover', pointerleave: 'pointerout',
    }, (a, b) => { r.event.special[a] = { delegateType: b, bindType: b, handle(a) { let c; const d = this; const e = a.relatedTarget; const f = a.handleObj; return e && (e === d || r.contains(d, e)) || (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c; } }; }), r.fn.extend({ on(a, b, c, d) { return ya(this, a, b, c, d); }, one(a, b, c, d) { return ya(this, a, b, c, d, 1); }, off(a, b, c) { let d; let e; if (a && a.preventDefault && a.handleObj) return d = a.handleObj, r(a.delegateTarget).off(d.namespace ? `${d.origType}.${d.namespace}` : d.origType, d.selector, d.handler), this; if (typeof a === 'object') { for (e in a) this.off(e, b, a[e]); return this; } return b !== !1 && typeof b !== 'function' || (c = b, b = void 0), c === !1 && (c = wa), this.each(function () { r.event.remove(this, a, c, b); }); } }); const za = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi; const Aa = /<script|<style|<link/i; const Ba = /checked\s*(?:[^=]|=\s*.checked.)/i; const Ca = /^true\/(.*)/; const Da = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g; function Ea(a, b) { return B(a, 'table') && B(b.nodeType !== 11 ? b : b.firstChild, 'tr') ? r('>tbody', a)[0] || a : a; } function Fa(a) { return a.type = `${a.getAttribute('type') !== null}/${a.type}`, a; } function Ga(a) { const b = Ca.exec(a.type); return b ? a.type = b[1] : a.removeAttribute('type'), a; } function Ha(a, b) { let c; let d; let e; let f; let g; let h; let i; let j; if (b.nodeType === 1) { if (W.hasData(a) && (f = W.access(a), g = W.set(b, f), j = f.events)) { delete g.handle, g.events = {}; for (e in j) for (c = 0, d = j[e].length; c < d; c++)r.event.add(b, e, j[e][c]); }X.hasData(a) && (h = X.access(a), i = r.extend({}, h), X.set(b, i)); } } function Ia(a, b) { const c = b.nodeName.toLowerCase(); c === 'input' && ja.test(a.type) ? b.checked = a.checked : c !== 'input' && c !== 'textarea' || (b.defaultValue = a.defaultValue); } function Ja(a, b, c, d) { b = g.apply([], b); let e; let f; let h; let i; let j; let k; let l = 0; const m = a.length; const n = m - 1; const q = b[0]; const s = r.isFunction(q); if (s || m > 1 && typeof q === 'string' && !o.checkClone && Ba.test(q)) return a.each(function (e) { const f = a.eq(e); s && (b[0] = q.call(this, e, f.html())), Ja(f, b, c, d); }); if (m && (e = qa(b, a[0].ownerDocument, !1, a, d), f = e.firstChild, e.childNodes.length === 1 && (e = f), f || d)) { for (h = r.map(na(e, 'script'), Fa), i = h.length; l < m; l++)j = e, l !== n && (j = r.clone(j, !0, !0), i && r.merge(h, na(j, 'script'))), c.call(a[l], j, l); if (i) for (k = h[h.length - 1].ownerDocument, r.map(h, Ga), l = 0; l < i; l++)j = h[l], la.test(j.type || '') && !W.access(j, 'globalEval') && r.contains(k, j) && (j.src ? r._evalUrl && r._evalUrl(j.src) : p(j.textContent.replace(Da, ''), k)); } return a; } function Ka(a, b, c) { for (var d, e = b ? r.filter(b, a) : a, f = 0; (d = e[f]) != null; f++)c || d.nodeType !== 1 || r.cleanData(na(d)), d.parentNode && (c && r.contains(d.ownerDocument, d) && oa(na(d, 'script')), d.parentNode.removeChild(d)); return a; }r.extend({ htmlPrefilter(a) { return a.replace(za, '<$1></$2>'); }, clone(a, b, c) { let d; let e; let f; let g; const h = a.cloneNode(!0); const i = r.contains(a.ownerDocument, a); if (!(o.noCloneChecked || a.nodeType !== 1 && a.nodeType !== 11 || r.isXMLDoc(a))) for (g = na(h), f = na(a), d = 0, e = f.length; d < e; d++)Ia(f[d], g[d]); if (b) if (c) for (f = f || na(a), g = g || na(h), d = 0, e = f.length; d < e; d++)Ha(f[d], g[d]); else Ha(a, h); return g = na(h, 'script'), g.length > 0 && oa(g, !i && na(a, 'script')), h; }, cleanData(a) { for (var b, c, d, e = r.event.special, f = 0; void 0 !== (c = a[f]); f++) if (U(c)) { if (b = c[W.expando]) { if (b.events) for (d in b.events)e[d] ? r.event.remove(c, d) : r.removeEvent(c, d, b.handle); c[W.expando] = void 0; }c[X.expando] && (c[X.expando] = void 0); } } }), r.fn.extend({
        detach(a) { return Ka(this, a, !0); }, remove(a) { return Ka(this, a); }, text(a) { return T(this, function (a) { return void 0 === a ? r.text(this) : this.empty().each(function () { this.nodeType !== 1 && this.nodeType !== 11 && this.nodeType !== 9 || (this.textContent = a); }); }, null, a, arguments.length); }, append() { return Ja(this, arguments, function (a) { if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) { const b = Ea(this, a); b.appendChild(a); } }); }, prepend() { return Ja(this, arguments, function (a) { if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) { const b = Ea(this, a); b.insertBefore(a, b.firstChild); } }); }, before() { return Ja(this, arguments, function (a) { this.parentNode && this.parentNode.insertBefore(a, this); }); }, after() { return Ja(this, arguments, function (a) { this.parentNode && this.parentNode.insertBefore(a, this.nextSibling); }); }, empty() { for (var a, b = 0; (a = this[b]) != null; b++)a.nodeType === 1 && (r.cleanData(na(a, !1)), a.textContent = ''); return this; }, clone(a, b) { return a = a != null && a, b = b == null ? a : b, this.map(function () { return r.clone(this, a, b); }); }, html(a) { return T(this, function (a) { let b = this[0] || {}; let c = 0; const d = this.length; if (void 0 === a && b.nodeType === 1) return b.innerHTML; if (typeof a === 'string' && !Aa.test(a) && !ma[(ka.exec(a) || ['', ''])[1].toLowerCase()]) { a = r.htmlPrefilter(a); try { for (;c < d; c++)b = this[c] || {}, b.nodeType === 1 && (r.cleanData(na(b, !1)), b.innerHTML = a); b = 0; } catch (e) {} }b && this.empty().append(a); }, null, a, arguments.length); }, replaceWith() { const a = []; return Ja(this, arguments, function (b) { const c = this.parentNode; r.inArray(this, a) < 0 && (r.cleanData(na(this)), c && c.replaceChild(b, this)); }, a); },
    }), r.each({
        appendTo: 'append', prependTo: 'prepend', insertBefore: 'before', insertAfter: 'after', replaceAll: 'replaceWith',
    }, (a, b) => { r.fn[a] = function (a) { for (var c, d = [], e = r(a), f = e.length - 1, g = 0; g <= f; g++)c = g === f ? this : this.clone(!0), r(e[g])[b](c), h.apply(d, c.get()); return this.pushStack(d); }; }); const La = /^margin/; const Ma = new RegExp(`^(${aa})(?!px)[a-z%]+$`, 'i'); const Na = function (b) { let c = b.ownerDocument.defaultView; return c && c.opener || (c = a), c.getComputedStyle(b); }; !(function () {
        function b() { if (i) { i.style.cssText = 'box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%', i.innerHTML = '', ra.appendChild(h); const b = a.getComputedStyle(i); c = b.top !== '1%', g = b.marginLeft === '2px', e = b.width === '4px', i.style.marginRight = '50%', f = b.marginRight === '4px', ra.removeChild(h), i = null; } } let c; let e; let f; let g; var h = d.createElement('div'); var i = d.createElement('div'); i.style && (i.style.backgroundClip = 'content-box', i.cloneNode(!0).style.backgroundClip = '', o.clearCloneStyle = i.style.backgroundClip === 'content-box', h.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute', h.appendChild(i), r.extend(o, {
            pixelPosition() { return b(), c; }, boxSizingReliable() { return b(), e; }, pixelMarginRight() { return b(), f; }, reliableMarginLeft() { return b(), g; },
        }));
    }()); function Oa(a, b, c) { let d; let e; let f; let g; const h = a.style; return c = c || Na(a), c && (g = c.getPropertyValue(b) || c[b], g !== '' || r.contains(a.ownerDocument, a) || (g = r.style(a, b)), !o.pixelMarginRight() && Ma.test(g) && La.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 !== g ? `${g}` : g; } function Pa(a, b) { return { get() { return a() ? void delete this.get : (this.get = b).apply(this, arguments); } }; } const Qa = /^(none|table(?!-c[ea]).+)/; const Ra = /^--/; const Sa = { position: 'absolute', visibility: 'hidden', display: 'block' }; const Ta = { letterSpacing: '0', fontWeight: '400' }; const Ua = ['Webkit', 'Moz', 'ms']; const Va = d.createElement('div').style; function Wa(a) { if (a in Va) return a; const b = a[0].toUpperCase() + a.slice(1); let c = Ua.length; while (c--) if (a = Ua[c] + b, a in Va) return a; } function Xa(a) { let b = r.cssProps[a]; return b || (b = r.cssProps[a] = Wa(a) || a), b; } function Ya(a, b, c) { const d = ba.exec(b); return d ? Math.max(0, d[2] - (c || 0)) + (d[3] || 'px') : b; } function Za(a, b, c, d, e) { let f; let g = 0; for (f = c === (d ? 'border' : 'content') ? 4 : b === 'width' ? 1 : 0; f < 4; f += 2)c === 'margin' && (g += r.css(a, c + ca[f], !0, e)), d ? (c === 'content' && (g -= r.css(a, `padding${ca[f]}`, !0, e)), c !== 'margin' && (g -= r.css(a, `border${ca[f]}Width`, !0, e))) : (g += r.css(a, `padding${ca[f]}`, !0, e), c !== 'padding' && (g += r.css(a, `border${ca[f]}Width`, !0, e))); return g; } function $a(a, b, c) { let d; const e = Na(a); let f = Oa(a, b, e); const g = r.css(a, 'boxSizing', !1, e) === 'border-box'; return Ma.test(f) ? f : (d = g && (o.boxSizingReliable() || f === a.style[b]), f === 'auto' && (f = a[`offset${b[0].toUpperCase()}${b.slice(1)}`]), f = parseFloat(f) || 0, `${f + Za(a, b, c || (g ? 'border' : 'content'), d, e)}px`); }r.extend({
        cssHooks: { opacity: { get(a, b) { if (b) { const c = Oa(a, 'opacity'); return c === '' ? '1' : c; } } } },
        cssNumber: {
            animationIterationCount: !0, columnCount: !0, fillOpacity: !0, flexGrow: !0, flexShrink: !0, fontWeight: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0,
        },
        cssProps: { float: 'cssFloat' },
        style(a, b, c, d) { if (a && a.nodeType !== 3 && a.nodeType !== 8 && a.style) { let e; let f; let g; const h = r.camelCase(b); const i = Ra.test(b); const j = a.style; return i || (b = Xa(h)), g = r.cssHooks[b] || r.cssHooks[h], void 0 === c ? g && 'get' in g && void 0 !== (e = g.get(a, !1, d)) ? e : j[b] : (f = typeof c, f === 'string' && (e = ba.exec(c)) && e[1] && (c = fa(a, b, e), f = 'number'), c != null && c === c && (f === 'number' && (c += e && e[3] || (r.cssNumber[h] ? '' : 'px')), o.clearCloneStyle || c !== '' || b.indexOf('background') !== 0 || (j[b] = 'inherit'), g && 'set' in g && void 0 === (c = g.set(a, c, d)) || (i ? j.setProperty(b, c) : j[b] = c)), void 0); } },
        css(a, b, c, d) { let e; let f; let g; const h = r.camelCase(b); const i = Ra.test(b); return i || (b = Xa(h)), g = r.cssHooks[b] || r.cssHooks[h], g && 'get' in g && (e = g.get(a, !0, c)), void 0 === e && (e = Oa(a, b, d)), e === 'normal' && b in Ta && (e = Ta[b]), c === '' || c ? (f = parseFloat(e), c === !0 || isFinite(f) ? f || 0 : e) : e; },
    }), r.each(['height', 'width'], (a, b) => { r.cssHooks[b] = { get(a, c, d) { if (c) return !Qa.test(r.css(a, 'display')) || a.getClientRects().length && a.getBoundingClientRect().width ? $a(a, b, d) : ea(a, Sa, () => $a(a, b, d)); }, set(a, c, d) { let e; const f = d && Na(a); const g = d && Za(a, b, d, r.css(a, 'boxSizing', !1, f) === 'border-box', f); return g && (e = ba.exec(c)) && (e[3] || 'px') !== 'px' && (a.style[b] = c, c = r.css(a, b)), Ya(a, c, g); } }; }), r.cssHooks.marginLeft = Pa(o.reliableMarginLeft, (a, b) => { if (b) return `${parseFloat(Oa(a, 'marginLeft')) || a.getBoundingClientRect().left - ea(a, { marginLeft: 0 }, () => a.getBoundingClientRect().left)}px`; }), r.each({ margin: '', padding: '', border: 'Width' }, (a, b) => { r.cssHooks[a + b] = { expand(c) { for (var d = 0, e = {}, f = typeof c === 'string' ? c.split(' ') : [c]; d < 4; d++)e[a + ca[d] + b] = f[d] || f[d - 2] || f[0]; return e; } }, La.test(a) || (r.cssHooks[a + b].set = Ya); }), r.fn.extend({ css(a, b) { return T(this, (a, b, c) => { let d; let e; const f = {}; let g = 0; if (Array.isArray(b)) { for (d = Na(a), e = b.length; g < e; g++)f[b[g]] = r.css(a, b[g], !1, d); return f; } return void 0 !== c ? r.style(a, b, c) : r.css(a, b); }, a, b, arguments.length > 1); } }); function _a(a, b, c, d, e) { return new _a.prototype.init(a, b, c, d, e); }r.Tween = _a, _a.prototype = {
        constructor: _a, init(a, b, c, d, e, f) { this.elem = a, this.prop = c, this.easing = e || r.easing._default, this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (r.cssNumber[c] ? '' : 'px'); }, cur() { const a = _a.propHooks[this.prop]; return a && a.get ? a.get(this) : _a.propHooks._default.get(this); }, run(a) { let b; const c = _a.propHooks[this.prop]; return this.options.duration ? this.pos = b = r.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : _a.propHooks._default.set(this), this; },
    }, _a.prototype.init.prototype = _a.prototype, _a.propHooks = { _default: { get(a) { let b; return a.elem.nodeType !== 1 || a.elem[a.prop] != null && a.elem.style[a.prop] == null ? a.elem[a.prop] : (b = r.css(a.elem, a.prop, ''), b && b !== 'auto' ? b : 0); }, set(a) { r.fx.step[a.prop] ? r.fx.step[a.prop](a) : a.elem.nodeType !== 1 || a.elem.style[r.cssProps[a.prop]] == null && !r.cssHooks[a.prop] ? a.elem[a.prop] = a.now : r.style(a.elem, a.prop, a.now + a.unit); } } }, _a.propHooks.scrollTop = _a.propHooks.scrollLeft = { set(a) { a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now); } }, r.easing = { linear(a) { return a; }, swing(a) { return 0.5 - Math.cos(a * Math.PI) / 2; }, _default: 'swing' }, r.fx = _a.prototype.init, r.fx.step = {}; let ab; let bb; const cb = /^(?:toggle|show|hide)$/; const db = /queueHooks$/; function eb() { bb && (d.hidden === !1 && a.requestAnimationFrame ? a.requestAnimationFrame(eb) : a.setTimeout(eb, r.fx.interval), r.fx.tick()); } function fb() { return a.setTimeout(() => { ab = void 0; }), ab = r.now(); } function gb(a, b) { let c; let d = 0; const e = { height: a }; for (b = b ? 1 : 0; d < 4; d += 2 - b)c = ca[d], e[`margin${c}`] = e[`padding${c}`] = a; return b && (e.opacity = e.width = a), e; } function hb(a, b, c) { for (var d, e = (kb.tweeners[b] || []).concat(kb.tweeners['*']), f = 0, g = e.length; f < g; f++) if (d = e[f].call(c, b, a)) return d; } function ib(a, b, c) { let d; let e; let f; let g; let h; let i; let j; let k; const l = 'width' in b || 'height' in b; const m = this; const n = {}; const o = a.style; let p = a.nodeType && da(a); let q = W.get(a, 'fxshow'); c.queue || (g = r._queueHooks(a, 'fx'), g.unqueued == null && (g.unqueued = 0, h = g.empty.fire, g.empty.fire = function () { g.unqueued || h(); }), g.unqueued++, m.always(() => { m.always(() => { g.unqueued--, r.queue(a, 'fx').length || g.empty.fire(); }); })); for (d in b) if (e = b[d], cb.test(e)) { if (delete b[d], f = f || e === 'toggle', e === (p ? 'hide' : 'show')) { if (e !== 'show' || !q || void 0 === q[d]) continue; p = !0; }n[d] = q && q[d] || r.style(a, d); } if (i = !r.isEmptyObject(b), i || !r.isEmptyObject(n)) { l && a.nodeType === 1 && (c.overflow = [o.overflow, o.overflowX, o.overflowY], j = q && q.display, j == null && (j = W.get(a, 'display')), k = r.css(a, 'display'), k === 'none' && (j ? k = j : (ia([a], !0), j = a.style.display || j, k = r.css(a, 'display'), ia([a]))), (k === 'inline' || k === 'inline-block' && j != null) && r.css(a, 'float') === 'none' && (i || (m.done(() => { o.display = j; }), j == null && (k = o.display, j = k === 'none' ? '' : k)), o.display = 'inline-block')), c.overflow && (o.overflow = 'hidden', m.always(() => { o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2]; })), i = !1; for (d in n)i || (q ? 'hidden' in q && (p = q.hidden) : q = W.access(a, 'fxshow', { display: j }), f && (q.hidden = !p), p && ia([a], !0), m.done(() => { p || ia([a]), W.remove(a, 'fxshow'); for (d in n)r.style(a, d, n[d]); })), i = hb(p ? q[d] : 0, d, m), d in q || (q[d] = i.start, p && (i.end = i.start, i.start = 0)); } } function jb(a, b) { let c; let d; let e; let f; let g; for (c in a) if (d = r.camelCase(c), e = b[d], f = a[c], Array.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = r.cssHooks[d], g && 'expand' in g) { f = g.expand(f), delete a[d]; for (c in f)c in a || (a[c] = f[c], b[c] = e); } else b[d] = e; } function kb(a, b, c) {
        let d; let e; let f = 0; const g = kb.prefilters.length; const h = r.Deferred().always(() => { delete i.elem; }); var i = function () { if (e) return !1; for (var b = ab || fb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; g < i; g++)j.tweens[g].run(f); return h.notifyWith(a, [j, f, c]), f < 1 && i ? c : (i || h.notifyWith(a, [j, 1, 0]), h.resolveWith(a, [j]), !1); }; var j = h.promise({
            elem: a, props: r.extend({}, b), opts: r.extend(!0, { specialEasing: {}, easing: r.easing._default }, c), originalProperties: b, originalOptions: c, startTime: ab || fb(), duration: c.duration, tweens: [], createTween(b, c) { const d = r.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing); return j.tweens.push(d), d; }, stop(b) { let c = 0; const d = b ? j.tweens.length : 0; if (e) return this; for (e = !0; c < d; c++)j.tweens[c].run(1); return b ? (h.notifyWith(a, [j, 1, 0]), h.resolveWith(a, [j, b])) : h.rejectWith(a, [j, b]), this; },
        }); const k = j.props; for (jb(k, j.opts.specialEasing); f < g; f++) if (d = kb.prefilters[f].call(j, a, k, j.opts)) return r.isFunction(d.stop) && (r._queueHooks(j.elem, j.opts.queue).stop = r.proxy(d.stop, d)), d; return r.map(k, hb, j), r.isFunction(j.opts.start) && j.opts.start.call(a, j), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always), r.fx.timer(r.extend(i, { elem: a, anim: j, queue: j.opts.queue })), j;
    }r.Animation = r.extend(kb, {
        tweeners: { '*': [function (a, b) { const c = this.createTween(a, b); return fa(c.elem, a, ba.exec(b), c), c; }] }, tweener(a, b) { r.isFunction(a) ? (b = a, a = ['*']) : a = a.match(L); for (var c, d = 0, e = a.length; d < e; d++)c = a[d], kb.tweeners[c] = kb.tweeners[c] || [], kb.tweeners[c].unshift(b); }, prefilters: [ib], prefilter(a, b) { b ? kb.prefilters.unshift(a) : kb.prefilters.push(a); },
    }), r.speed = function (a, b, c) { const d = a && typeof a === 'object' ? r.extend({}, a) : { complete: c || !c && b || r.isFunction(a) && a, duration: a, easing: c && b || b && !r.isFunction(b) && b }; return r.fx.off ? d.duration = 0 : typeof d.duration !== 'number' && (d.duration in r.fx.speeds ? d.duration = r.fx.speeds[d.duration] : d.duration = r.fx.speeds._default), d.queue != null && d.queue !== !0 || (d.queue = 'fx'), d.old = d.complete, d.complete = function () { r.isFunction(d.old) && d.old.call(this), d.queue && r.dequeue(this, d.queue); }, d; }, r.fn.extend({
        fadeTo(a, b, c, d) {
            return this.filter(da).css('opacity', 0).show().end()
                .animate({ opacity: b }, a, c, d);
        },
        animate(a, b, c, d) { const e = r.isEmptyObject(a); const f = r.speed(b, c, d); const g = function () { const b = kb(this, r.extend({}, a), f); (e || W.get(this, 'finish')) && b.stop(!0); }; return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g); },
        stop(a, b, c) { const d = function (a) { const b = a.stop; delete a.stop, b(c); }; return typeof a !== 'string' && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || 'fx', []), this.each(function () { let b = !0; let e = a != null && `${a}queueHooks`; const f = r.timers; const g = W.get(this); if (e)g[e] && g[e].stop && d(g[e]); else for (e in g)g[e] && g[e].stop && db.test(e) && d(g[e]); for (e = f.length; e--;)f[e].elem !== this || a != null && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1)); !b && c || r.dequeue(this, a); }); },
        finish(a) { return a !== !1 && (a = a || 'fx'), this.each(function () { let b; const c = W.get(this); const d = c[`${a}queue`]; const e = c[`${a}queueHooks`]; const f = r.timers; const g = d ? d.length : 0; for (c.finish = !0, r.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;)f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1)); for (b = 0; b < g; b++)d[b] && d[b].finish && d[b].finish.call(this); delete c.finish; }); },
    }), r.each(['toggle', 'show', 'hide'], (a, b) => { const c = r.fn[b]; r.fn[b] = function (a, d, e) { return a == null || typeof a === 'boolean' ? c.apply(this, arguments) : this.animate(gb(b, !0), a, d, e); }; }), r.each({
        slideDown: gb('show'), slideUp: gb('hide'), slideToggle: gb('toggle'), fadeIn: { opacity: 'show' }, fadeOut: { opacity: 'hide' }, fadeToggle: { opacity: 'toggle' },
    }, (a, b) => { r.fn[a] = function (a, c, d) { return this.animate(b, a, c, d); }; }), r.timers = [], r.fx.tick = function () { let a; let b = 0; const c = r.timers; for (ab = r.now(); b < c.length; b++)a = c[b], a() || c[b] !== a || c.splice(b--, 1); c.length || r.fx.stop(), ab = void 0; }, r.fx.timer = function (a) { r.timers.push(a), r.fx.start(); }, r.fx.interval = 13, r.fx.start = function () { bb || (bb = !0, eb()); }, r.fx.stop = function () { bb = null; }, r.fx.speeds = { slow: 600, fast: 200, _default: 400 }, r.fn.delay = function (b, c) { return b = r.fx ? r.fx.speeds[b] || b : b, c = c || 'fx', this.queue(c, (c, d) => { const e = a.setTimeout(c, b); d.stop = function () { a.clearTimeout(e); }; }); }, (function () { let a = d.createElement('input'); const b = d.createElement('select'); const c = b.appendChild(d.createElement('option')); a.type = 'checkbox', o.checkOn = a.value !== '', o.optSelected = c.selected, a = d.createElement('input'), a.value = 't', a.type = 'radio', o.radioValue = a.value === 't'; }()); let lb; const mb = r.expr.attrHandle; r.fn.extend({ attr(a, b) { return T(this, r.attr, a, b, arguments.length > 1); }, removeAttr(a) { return this.each(function () { r.removeAttr(this, a); }); } }), r.extend({
        attr(a, b, c) {
            let d; let e; const f = a.nodeType; if (f !== 3 && f !== 8 && f !== 2) {
                return typeof a.getAttribute === 'undefined' ? r.prop(a, b, c) : (f === 1 && r.isXMLDoc(a) || (e = r.attrHooks[b.toLowerCase()] || (r.expr.match.bool.test(b) ? lb : void 0)), void 0 !== c ? c === null ? void r.removeAttr(a, b) : e && 'set' in e && void 0 !== (d = e.set(a, c, b)) ? d : (a.setAttribute(b, `${c}`), c) : e && 'get' in e && (d = e.get(a, b)) !== null ? d : (d = r.find.attr(a, b),
                d == null ? void 0 : d));
            }
        },
        attrHooks: { type: { set(a, b) { if (!o.radioValue && b === 'radio' && B(a, 'input')) { const c = a.value; return a.setAttribute('type', b), c && (a.value = c), b; } } } },
        removeAttr(a, b) { let c; let d = 0; const e = b && b.match(L); if (e && a.nodeType === 1) while (c = e[d++])a.removeAttribute(c); },
    }), lb = { set(a, b, c) { return b === !1 ? r.removeAttr(a, c) : a.setAttribute(c, c), c; } }, r.each(r.expr.match.bool.source.match(/\w+/g), (a, b) => { const c = mb[b] || r.find.attr; mb[b] = function (a, b, d) { let e; let f; const g = b.toLowerCase(); return d || (f = mb[g], mb[g] = e, e = c(a, b, d) != null ? g : null, mb[g] = f), e; }; }); const nb = /^(?:input|select|textarea|button)$/i; const ob = /^(?:a|area)$/i; r.fn.extend({ prop(a, b) { return T(this, r.prop, a, b, arguments.length > 1); }, removeProp(a) { return this.each(function () { delete this[r.propFix[a] || a]; }); } }), r.extend({ prop(a, b, c) { let d; let e; const f = a.nodeType; if (f !== 3 && f !== 8 && f !== 2) return f === 1 && r.isXMLDoc(a) || (b = r.propFix[b] || b, e = r.propHooks[b]), void 0 !== c ? e && 'set' in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && 'get' in e && (d = e.get(a, b)) !== null ? d : a[b]; }, propHooks: { tabIndex: { get(a) { const b = r.find.attr(a, 'tabindex'); return b ? parseInt(b, 10) : nb.test(a.nodeName) || ob.test(a.nodeName) && a.href ? 0 : -1; } } }, propFix: { for: 'htmlFor', class: 'className' } }), o.optSelected || (r.propHooks.selected = { get(a) { const b = a.parentNode; return b && b.parentNode && b.parentNode.selectedIndex, null; }, set(a) { const b = a.parentNode; b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex); } }), r.each(['tabIndex', 'readOnly', 'maxLength', 'cellSpacing', 'cellPadding', 'rowSpan', 'colSpan', 'useMap', 'frameBorder', 'contentEditable'], function () { r.propFix[this.toLowerCase()] = this; }); function pb(a) { const b = a.match(L) || []; return b.join(' '); } function qb(a) { return a.getAttribute && a.getAttribute('class') || ''; }r.fn.extend({
        addClass(a) { let b; let c; let d; let e; let f; let g; let h; let i = 0; if (r.isFunction(a)) return this.each(function (b) { r(this).addClass(a.call(this, b, qb(this))); }); if (typeof a === 'string' && a) { b = a.match(L) || []; while (c = this[i++]) if (e = qb(c), d = c.nodeType === 1 && ` ${pb(e)} `) { g = 0; while (f = b[g++])d.indexOf(` ${f} `) < 0 && (d += `${f} `); h = pb(d), e !== h && c.setAttribute('class', h); } } return this; }, removeClass(a) { let b; let c; let d; let e; let f; let g; let h; let i = 0; if (r.isFunction(a)) return this.each(function (b) { r(this).removeClass(a.call(this, b, qb(this))); }); if (!arguments.length) return this.attr('class', ''); if (typeof a === 'string' && a) { b = a.match(L) || []; while (c = this[i++]) if (e = qb(c), d = c.nodeType === 1 && ` ${pb(e)} `) { g = 0; while (f = b[g++]) while (d.indexOf(` ${f} `) > -1)d = d.replace(` ${f} `, ' '); h = pb(d), e !== h && c.setAttribute('class', h); } } return this; }, toggleClass(a, b) { const c = typeof a; return typeof b === 'boolean' && c === 'string' ? b ? this.addClass(a) : this.removeClass(a) : r.isFunction(a) ? this.each(function (c) { r(this).toggleClass(a.call(this, c, qb(this), b), b); }) : this.each(function () { let b; let d; let e; let f; if (c === 'string') { d = 0, e = r(this), f = a.match(L) || []; while (b = f[d++])e.hasClass(b) ? e.removeClass(b) : e.addClass(b); } else void 0 !== a && c !== 'boolean' || (b = qb(this), b && W.set(this, '__className__', b), this.setAttribute && this.setAttribute('class', b || a === !1 ? '' : W.get(this, '__className__') || '')); }); }, hasClass(a) { let b; let c; let d = 0; b = ` ${a} `; while (c = this[d++]) if (c.nodeType === 1 && (` ${pb(qb(c))} `).indexOf(b) > -1) return !0; return !1; },
    }); const rb = /\r/g; r.fn.extend({ val(a) { let b; let c; let d; const e = this[0]; { if (arguments.length) return d = r.isFunction(a), this.each(function (c) { let e; this.nodeType === 1 && (e = d ? a.call(this, c, r(this).val()) : a, e == null ? e = '' : typeof e === 'number' ? e += '' : Array.isArray(e) && (e = r.map(e, (a) => (a == null ? '' : `${a}`))), b = r.valHooks[this.type] || r.valHooks[this.nodeName.toLowerCase()], b && 'set' in b && void 0 !== b.set(this, e, 'value') || (this.value = e)); }); if (e) return b = r.valHooks[e.type] || r.valHooks[e.nodeName.toLowerCase()], b && 'get' in b && void 0 !== (c = b.get(e, 'value')) ? c : (c = e.value, typeof c === 'string' ? c.replace(rb, '') : c == null ? '' : c); } } }), r.extend({ valHooks: { option: { get(a) { const b = r.find.attr(a, 'value'); return b != null ? b : pb(r.text(a)); } }, select: { get(a) { let b; let c; let d; const e = a.options; const f = a.selectedIndex; const g = a.type === 'select-one'; const h = g ? null : []; const i = g ? f + 1 : e.length; for (d = f < 0 ? i : g ? f : 0; d < i; d++) if (c = e[d], (c.selected || d === f) && !c.disabled && (!c.parentNode.disabled || !B(c.parentNode, 'optgroup'))) { if (b = r(c).val(), g) return b; h.push(b); } return h; }, set(a, b) { let c; let d; const e = a.options; const f = r.makeArray(b); let g = e.length; while (g--)d = e[g], (d.selected = r.inArray(r.valHooks.option.get(d), f) > -1) && (c = !0); return c || (a.selectedIndex = -1), f; } } } }), r.each(['radio', 'checkbox'], function () { r.valHooks[this] = { set(a, b) { if (Array.isArray(b)) return a.checked = r.inArray(r(a).val(), b) > -1; } }, o.checkOn || (r.valHooks[this].get = function (a) { return a.getAttribute('value') === null ? 'on' : a.value; }); }); const sb = /^(?:focusinfocus|focusoutblur)$/; r.extend(r.event, { trigger(b, c, e, f) { let g; let h; let i; let j; let k; let m; let n; const o = [e || d]; let p = l.call(b, 'type') ? b.type : b; let q = l.call(b, 'namespace') ? b.namespace.split('.') : []; if (h = i = e = e || d, e.nodeType !== 3 && e.nodeType !== 8 && !sb.test(p + r.event.triggered) && (p.indexOf('.') > -1 && (q = p.split('.'), p = q.shift(), q.sort()), k = p.indexOf(':') < 0 && `on${p}`, b = b[r.expando] ? b : new r.Event(p, typeof b === 'object' && b), b.isTrigger = f ? 2 : 3, b.namespace = q.join('.'), b.rnamespace = b.namespace ? new RegExp(`(^|\\.)${q.join('\\.(?:.*\\.|)')}(\\.|$)`) : null, b.result = void 0, b.target || (b.target = e), c = c == null ? [b] : r.makeArray(c, [b]), n = r.event.special[p] || {}, f || !n.trigger || n.trigger.apply(e, c) !== !1)) { if (!f && !n.noBubble && !r.isWindow(e)) { for (j = n.delegateType || p, sb.test(j + p) || (h = h.parentNode); h; h = h.parentNode)o.push(h), i = h; i === (e.ownerDocument || d) && o.push(i.defaultView || i.parentWindow || a); }g = 0; while ((h = o[g++]) && !b.isPropagationStopped())b.type = g > 1 ? j : n.bindType || p, m = (W.get(h, 'events') || {})[b.type] && W.get(h, 'handle'), m && m.apply(h, c), m = k && h[k], m && m.apply && U(h) && (b.result = m.apply(h, c), b.result === !1 && b.preventDefault()); return b.type = p, f || b.isDefaultPrevented() || n._default && n._default.apply(o.pop(), c) !== !1 || !U(e) || k && r.isFunction(e[p]) && !r.isWindow(e) && (i = e[k], i && (e[k] = null), r.event.triggered = p, e[p](), r.event.triggered = void 0, i && (e[k] = i)), b.result; } }, simulate(a, b, c) { const d = r.extend(new r.Event(), c, { type: a, isSimulated: !0 }); r.event.trigger(d, null, b); } }), r.fn.extend({ trigger(a, b) { return this.each(function () { r.event.trigger(a, b, this); }); }, triggerHandler(a, b) { const c = this[0]; if (c) return r.event.trigger(a, b, c, !0); } }), r.each('blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu'.split(' '), (a, b) => { r.fn[b] = function (a, c) { return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b); }; }), r.fn.extend({ hover(a, b) { return this.mouseenter(a).mouseleave(b || a); } }), o.focusin = 'onfocusin' in a, o.focusin || r.each({ focus: 'focusin', blur: 'focusout' }, (a, b) => { const c = function (a) { r.event.simulate(b, a.target, r.event.fix(a)); }; r.event.special[b] = { setup() { const d = this.ownerDocument || this; const e = W.access(d, b); e || d.addEventListener(a, c, !0), W.access(d, b, (e || 0) + 1); }, teardown() { const d = this.ownerDocument || this; const e = W.access(d, b) - 1; e ? W.access(d, b, e) : (d.removeEventListener(a, c, !0), W.remove(d, b)); } }; }); const tb = a.location; let ub = r.now(); const vb = /\?/; r.parseXML = function (b) { let c; if (!b || typeof b !== 'string') return null; try { c = (new a.DOMParser()).parseFromString(b, 'text/xml'); } catch (d) { c = void 0; } return c && !c.getElementsByTagName('parsererror').length || r.error(`Invalid XML: ${b}`), c; }; const wb = /\[\]$/; const xb = /\r?\n/g; const yb = /^(?:submit|button|image|reset|file)$/i; const zb = /^(?:input|select|textarea|keygen)/i; function Ab(a, b, c, d) { let e; if (Array.isArray(b))r.each(b, (b, e) => { c || wb.test(a) ? d(a, e) : Ab(`${a}[${typeof e === 'object' && e != null ? b : ''}]`, e, c, d); }); else if (c || r.type(b) !== 'object')d(a, b); else for (e in b)Ab(`${a}[${e}]`, b[e], c, d); }r.param = function (a, b) { let c; const d = []; const e = function (a, b) { const c = r.isFunction(b) ? b() : b; d[d.length] = `${encodeURIComponent(a)}=${encodeURIComponent(c == null ? '' : c)}`; }; if (Array.isArray(a) || a.jquery && !r.isPlainObject(a))r.each(a, function () { e(this.name, this.value); }); else for (c in a)Ab(c, a[c], b, e); return d.join('&'); }, r.fn.extend({ serialize() { return r.param(this.serializeArray()); }, serializeArray() { return this.map(function () { const a = r.prop(this, 'elements'); return a ? r.makeArray(a) : this; }).filter(function () { const a = this.type; return this.name && !r(this).is(':disabled') && zb.test(this.nodeName) && !yb.test(a) && (this.checked || !ja.test(a)); }).map(function (a, b) { const c = r(this).val(); return c == null ? null : Array.isArray(c) ? r.map(c, (a) => ({ name: b.name, value: a.replace(xb, '\r\n') })) : { name: b.name, value: c.replace(xb, '\r\n') }; }).get(); } }); const Bb = /%20/g; const Cb = /#.*$/; const Db = /([?&])_=[^&]*/; const Eb = /^(.*?):[ \t]*([^\r\n]*)$/gm; const Fb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/; const Gb = /^(?:GET|HEAD)$/; const Hb = /^\/\//; const Ib = {}; const Jb = {}; const Kb = '*/'.concat('*'); const Lb = d.createElement('a'); Lb.href = tb.href; function Mb(a) { return function (b, c) { typeof b !== 'string' && (c = b, b = '*'); let d; let e = 0; const f = b.toLowerCase().match(L) || []; if (r.isFunction(c)) while (d = f[e++])d[0] === '+' ? (d = d.slice(1) || '*', (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c); }; } function Nb(a, b, c, d) { const e = {}; const f = a === Jb; function g(h) { let i; return e[h] = !0, r.each(a[h] || [], (a, h) => { const j = h(b, c, d); return typeof j !== 'string' || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1); }), i; } return g(b.dataTypes[0]) || !e['*'] && g('*'); } function Ob(a, b) { let c; let d; const e = r.ajaxSettings.flatOptions || {}; for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]); return d && r.extend(!0, a, d), a; } function Pb(a, b, c) { let d; let e; let f; let g; const h = a.contents; const i = a.dataTypes; while (i[0] === '*')i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader('Content-Type')); if (d) for (e in h) if (h[e] && h[e].test(d)) { i.unshift(e); break; } if (i[0] in c)f = i[0]; else { for (e in c) { if (!i[0] || a.converters[`${e} ${i[0]}`]) { f = e; break; }g || (g = e); }f = f || g; } if (f) return f !== i[0] && i.unshift(f), c[f]; } function Qb(a, b, c, d) { let e; let f; let g; let h; let i; const j = {}; const k = a.dataTypes.slice(); if (k[1]) for (g in a.converters)j[g.toLowerCase()] = a.converters[g]; f = k.shift(); while (f) if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift()) if (f === '*')f = i; else if (i !== '*' && i !== f) { if (g = j[`${i} ${f}`] || j[`* ${f}`], !g) for (e in j) if (h = e.split(' '), h[1] === f && (g = j[`${i} ${h[0]}`] || j[`* ${h[0]}`])) { g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1])); break; } if (g !== !0) if (g && a.throws)b = g(b); else try { b = g(b); } catch (l) { return { state: 'parsererror', error: g ? l : `No conversion from ${i} to ${f}` }; } } return { state: 'success', data: b }; }r.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: tb.href,
            type: 'GET',
            isLocal: Fb.test(tb.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            accepts: {
                '*': Kb, text: 'text/plain', html: 'text/html', xml: 'application/xml, text/xml', json: 'application/json, text/javascript',
            },
            contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
            responseFields: { xml: 'responseXML', text: 'responseText', json: 'responseJSON' },
            converters: {
                '* text': String, 'text html': !0, 'text json': JSON.parse, 'text xml': r.parseXML,
            },
            flatOptions: { url: !0, context: !0 },
        },
        ajaxSetup(a, b) { return b ? Ob(Ob(a, r.ajaxSettings), b) : Ob(r.ajaxSettings, a); },
        ajaxPrefilter: Mb(Ib),
        ajaxTransport: Mb(Jb),
        ajax(b, c) {
            typeof b === 'object' && (c = b, b = void 0), c = c || {}; let e; let f; let g; let h; let i; let j; let k; let l; let m; let n; const o = r.ajaxSetup({}, c); const p = o.context || o; const q = o.context && (p.nodeType || p.jquery) ? r(p) : r.event; const s = r.Deferred(); const t = r.Callbacks('once memory'); let u = o.statusCode || {}; const v = {}; const w = {}; let x = 'canceled'; var y = {
                readyState: 0, getResponseHeader(a) { let b; if (k) { if (!h) { h = {}; while (b = Eb.exec(g))h[b[1].toLowerCase()] = b[2]; }b = h[a.toLowerCase()]; } return b == null ? null : b; }, getAllResponseHeaders() { return k ? g : null; }, setRequestHeader(a, b) { return k == null && (a = w[a.toLowerCase()] = w[a.toLowerCase()] || a, v[a] = b), this; }, overrideMimeType(a) { return k == null && (o.mimeType = a), this; }, statusCode(a) { let b; if (a) if (k)y.always(a[y.status]); else for (b in a)u[b] = [u[b], a[b]]; return this; }, abort(a) { const b = a || x; return e && e.abort(b), A(0, b), this; },
            }; if (s.promise(y), o.url = (`${b || o.url || tb.href}`).replace(Hb, `${tb.protocol}//`), o.type = c.method || c.type || o.method || o.type, o.dataTypes = (o.dataType || '*').toLowerCase().match(L) || [''], o.crossDomain == null) { j = d.createElement('a'); try { j.href = o.url, j.href = j.href, o.crossDomain = `${Lb.protocol}//${Lb.host}` != `${j.protocol}//${j.host}`; } catch (z) { o.crossDomain = !0; } } if (o.data && o.processData && typeof o.data !== 'string' && (o.data = r.param(o.data, o.traditional)), Nb(Ib, o, c, y), k) return y; l = r.event && o.global, l && r.active++ === 0 && r.event.trigger('ajaxStart'), o.type = o.type.toUpperCase(), o.hasContent = !Gb.test(o.type), f = o.url.replace(Cb, ''), o.hasContent ? o.data && o.processData && (o.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 && (o.data = o.data.replace(Bb, '+')) : (n = o.url.slice(f.length), o.data && (f += (vb.test(f) ? '&' : '?') + o.data, delete o.data), o.cache === !1 && (f = f.replace(Db, '$1'), n = `${vb.test(f) ? '&' : '?'}_=${ub++}${n}`), o.url = f + n), o.ifModified && (r.lastModified[f] && y.setRequestHeader('If-Modified-Since', r.lastModified[f]), r.etag[f] && y.setRequestHeader('If-None-Match', r.etag[f])), (o.data && o.hasContent && o.contentType !== !1 || c.contentType) && y.setRequestHeader('Content-Type', o.contentType), y.setRequestHeader('Accept', o.dataTypes[0] && o.accepts[o.dataTypes[0]] ? o.accepts[o.dataTypes[0]] + (o.dataTypes[0] !== '*' ? `, ${Kb}; q=0.01` : '') : o.accepts['*']); for (m in o.headers)y.setRequestHeader(m, o.headers[m]); if (o.beforeSend && (o.beforeSend.call(p, y, o) === !1 || k)) return y.abort(); if (x = 'abort', t.add(o.complete), y.done(o.success), y.fail(o.error), e = Nb(Jb, o, c, y)) { if (y.readyState = 1, l && q.trigger('ajaxSend', [y, o]), k) return y; o.async && o.timeout > 0 && (i = a.setTimeout(() => { y.abort('timeout'); }, o.timeout)); try { k = !1, e.send(v, A); } catch (z) { if (k) throw z; A(-1, z); } } else A(-1, 'No Transport'); function A(b, c, d, h) { let j; let m; let n; let v; let w; let x = c; k || (k = !0, i && a.clearTimeout(i), e = void 0, g = h || '', y.readyState = b > 0 ? 4 : 0, j = b >= 200 && b < 300 || b === 304, d && (v = Pb(o, y, d)), v = Qb(o, v, y, j), j ? (o.ifModified && (w = y.getResponseHeader('Last-Modified'), w && (r.lastModified[f] = w), w = y.getResponseHeader('etag'), w && (r.etag[f] = w)), b === 204 || o.type === 'HEAD' ? x = 'nocontent' : b === 304 ? x = 'notmodified' : (x = v.state, m = v.data, n = v.error, j = !n)) : (n = x, !b && x || (x = 'error', b < 0 && (b = 0))), y.status = b, y.statusText = `${c || x}`, j ? s.resolveWith(p, [m, x, y]) : s.rejectWith(p, [y, x, n]), y.statusCode(u), u = void 0, l && q.trigger(j ? 'ajaxSuccess' : 'ajaxError', [y, o, j ? m : n]), t.fireWith(p, [y, x]), l && (q.trigger('ajaxComplete', [y, o]), --r.active || r.event.trigger('ajaxStop'))); } return y;
        },
        getJSON(a, b, c) { return r.get(a, b, c, 'json'); },
        getScript(a, b) { return r.get(a, void 0, b, 'script'); },
    }), r.each(['get', 'post'], (a, b) => {
        r[b] = function (a, c, d, e) {
            return r.isFunction(c) && (e = e || d, d = c, c = void 0), r.ajax(r.extend({
                url: a, type: b, dataType: e, data: c, success: d,
            }, r.isPlainObject(a) && a));
        };
    }), r._evalUrl = function (a) {
        return r.ajax({
            url: a, type: 'GET', dataType: 'script', cache: !0, async: !1, global: !1, throws: !0,
        });
    }, r.fn.extend({
        wrapAll(a) { let b; return this[0] && (r.isFunction(a) && (a = a.call(this[0])), b = r(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), b.map(function () { let a = this; while (a.firstElementChild)a = a.firstElementChild; return a; }).append(this)), this; }, wrapInner(a) { return r.isFunction(a) ? this.each(function (b) { r(this).wrapInner(a.call(this, b)); }) : this.each(function () { const b = r(this); const c = b.contents(); c.length ? c.wrapAll(a) : b.append(a); }); }, wrap(a) { const b = r.isFunction(a); return this.each(function (c) { r(this).wrapAll(b ? a.call(this, c) : a); }); }, unwrap(a) { return this.parent(a).not('body').each(function () { r(this).replaceWith(this.childNodes); }), this; },
    }), r.expr.pseudos.hidden = function (a) { return !r.expr.pseudos.visible(a); }, r.expr.pseudos.visible = function (a) { return !!(a.offsetWidth || a.offsetHeight || a.getClientRects().length); }, r.ajaxSettings.xhr = function () { try { return new a.XMLHttpRequest(); } catch (b) {} }; const Rb = { 0: 200, 1223: 204 }; let Sb = r.ajaxSettings.xhr(); o.cors = !!Sb && 'withCredentials' in Sb, o.ajax = Sb = !!Sb, r.ajaxTransport((b) => { let c; let d; if (o.cors || Sb && !b.crossDomain) return { send(e, f) { let g; const h = b.xhr(); if (h.open(b.type, b.url, b.async, b.username, b.password), b.xhrFields) for (g in b.xhrFields)h[g] = b.xhrFields[g]; b.mimeType && h.overrideMimeType && h.overrideMimeType(b.mimeType), b.crossDomain || e['X-Requested-With'] || (e['X-Requested-With'] = 'XMLHttpRequest'); for (g in e)h.setRequestHeader(g, e[g]); c = function (a) { return function () { c && (c = d = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, a === 'abort' ? h.abort() : a === 'error' ? typeof h.status !== 'number' ? f(0, 'error') : f(h.status, h.statusText) : f(Rb[h.status] || h.status, h.statusText, (h.responseType || 'text') !== 'text' || typeof h.responseText !== 'string' ? { binary: h.response } : { text: h.responseText }, h.getAllResponseHeaders())); }; }, h.onload = c(), d = h.onerror = c('error'), void 0 !== h.onabort ? h.onabort = d : h.onreadystatechange = function () { h.readyState === 4 && a.setTimeout(() => { c && d(); }); }, c = c('abort'); try { h.send(b.hasContent && b.data || null); } catch (i) { if (c) throw i; } }, abort() { c && c(); } }; }), r.ajaxPrefilter((a) => { a.crossDomain && (a.contents.script = !1); }), r.ajaxSetup({ accepts: { script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript' }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { 'text script': function (a) { return r.globalEval(a), a; } } }), r.ajaxPrefilter('script', (a) => { void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = 'GET'); }), r.ajaxTransport('script', (a) => { if (a.crossDomain) { let b; let c; return { send(e, f) { b = r('<script>').prop({ charset: a.scriptCharset, src: a.url }).on('load error', c = function (a) { b.remove(), c = null, a && f(a.type === 'error' ? 404 : 200, a.type); }), d.head.appendChild(b[0]); }, abort() { c && c(); } }; } }); const Tb = []; const Ub = /(=)\?(?=&|$)|\?\?/; r.ajaxSetup({ jsonp: 'callback', jsonpCallback() { const a = Tb.pop() || `${r.expando}_${ub++}`; return this[a] = !0, a; } }), r.ajaxPrefilter('json jsonp', (b, c, d) => { let e; let f; let g; const h = b.jsonp !== !1 && (Ub.test(b.url) ? 'url' : typeof b.data === 'string' && (b.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 && Ub.test(b.data) && 'data'); if (h || b.dataTypes[0] === 'jsonp') return e = b.jsonpCallback = r.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(Ub, `$1${e}`) : b.jsonp !== !1 && (b.url += `${(vb.test(b.url) ? '&' : '?') + b.jsonp}=${e}`), b.converters['script json'] = function () { return g || r.error(`${e} was not called`), g[0]; }, b.dataTypes[0] = 'json', f = a[e], a[e] = function () { g = arguments; }, d.always(() => { void 0 === f ? r(a).removeProp(e) : a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Tb.push(e)), g && r.isFunction(f) && f(g[0]), g = f = void 0; }), 'script'; }), o.createHTMLDocument = (function () { const a = d.implementation.createHTMLDocument('').body; return a.innerHTML = '<form></form><form></form>', a.childNodes.length === 2; }()), r.parseHTML = function (a, b, c) { if (typeof a !== 'string') return []; typeof b === 'boolean' && (c = b, b = !1); let e; let f; let g; return b || (o.createHTMLDocument ? (b = d.implementation.createHTMLDocument(''), e = b.createElement('base'), e.href = d.location.href, b.head.appendChild(e)) : b = d), f = C.exec(a), g = !c && [], f ? [b.createElement(f[1])] : (f = qa([a], b, g), g && g.length && r(g).remove(), r.merge([], f.childNodes)); }, r.fn.load = function (a, b, c) {
        let d; let e; let f; const g = this; const h = a.indexOf(' '); return h > -1 && (d = pb(a.slice(h)), a = a.slice(0, h)), r.isFunction(b) ? (c = b, b = void 0) : b && typeof b === 'object' && (e = 'POST'), g.length > 0 && r.ajax({
            url: a, type: e || 'GET', dataType: 'html', data: b,
        }).done(function (a) { f = arguments, g.html(d ? r('<div>').append(r.parseHTML(a)).find(d) : a); }).always(c && ((a, b) => { g.each(function () { c.apply(this, f || [a.responseText, b, a]); }); })), this;
    }, r.each(['ajaxStart', 'ajaxStop', 'ajaxComplete', 'ajaxError', 'ajaxSuccess', 'ajaxSend'], (a, b) => { r.fn[b] = function (a) { return this.on(b, a); }; }), r.expr.pseudos.animated = function (a) { return r.grep(r.timers, (b) => a === b.elem).length; }, r.offset = { setOffset(a, b, c) { let d; let e; let f; let g; let h; let i; let j; const k = r.css(a, 'position'); const l = r(a); const m = {}; k === 'static' && (a.style.position = 'relative'), h = l.offset(), f = r.css(a, 'top'), i = r.css(a, 'left'), j = (k === 'absolute' || k === 'fixed') && (f + i).indexOf('auto') > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), r.isFunction(b) && (b = b.call(a, c, r.extend({}, h))), b.top != null && (m.top = b.top - h.top + g), b.left != null && (m.left = b.left - h.left + e), 'using' in b ? b.using.call(a, m) : l.css(m); } }, r.fn.extend({ offset(a) { if (arguments.length) return void 0 === a ? this : this.each(function (b) { r.offset.setOffset(this, a, b); }); let b; let c; let d; let e; const f = this[0]; if (f) return f.getClientRects().length ? (d = f.getBoundingClientRect(), b = f.ownerDocument, c = b.documentElement, e = b.defaultView, { top: d.top + e.pageYOffset - c.clientTop, left: d.left + e.pageXOffset - c.clientLeft }) : { top: 0, left: 0 }; }, position() { if (this[0]) { let a; let b; const c = this[0]; let d = { top: 0, left: 0 }; return r.css(c, 'position') === 'fixed' ? b = c.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), B(a[0], 'html') || (d = a.offset()), d = { top: d.top + r.css(a[0], 'borderTopWidth', !0), left: d.left + r.css(a[0], 'borderLeftWidth', !0) }), { top: b.top - d.top - r.css(c, 'marginTop', !0), left: b.left - d.left - r.css(c, 'marginLeft', !0) }; } }, offsetParent() { return this.map(function () { let a = this.offsetParent; while (a && r.css(a, 'position') === 'static')a = a.offsetParent; return a || ra; }); } }), r.each({ scrollLeft: 'pageXOffset', scrollTop: 'pageYOffset' }, (a, b) => { const c = b === 'pageYOffset'; r.fn[a] = function (d) { return T(this, (a, d, e) => { let f; return r.isWindow(a) ? f = a : a.nodeType === 9 && (f = a.defaultView), void 0 === e ? f ? f[b] : a[d] : void (f ? f.scrollTo(c ? f.pageXOffset : e, c ? e : f.pageYOffset) : a[d] = e); }, a, d, arguments.length); }; }), r.each(['top', 'left'], (a, b) => { r.cssHooks[b] = Pa(o.pixelPosition, (a, c) => { if (c) return c = Oa(a, b), Ma.test(c) ? `${r(a).position()[b]}px` : c; }); }), r.each({ Height: 'height', Width: 'width' }, (a, b) => { r.each({ padding: `inner${a}`, content: b, '': `outer${a}` }, (c, d) => { r.fn[d] = function (e, f) { const g = arguments.length && (c || typeof e !== 'boolean'); const h = c || (e === !0 || f === !0 ? 'margin' : 'border'); return T(this, (b, c, e) => { let f; return r.isWindow(b) ? d.indexOf('outer') === 0 ? b[`inner${a}`] : b.document.documentElement[`client${a}`] : b.nodeType === 9 ? (f = b.documentElement, Math.max(b.body[`scroll${a}`], f[`scroll${a}`], b.body[`offset${a}`], f[`offset${a}`], f[`client${a}`])) : void 0 === e ? r.css(b, c, h) : r.style(b, c, e, h); }, b, g ? e : void 0, g); }; }); }), r.fn.extend({
        bind(a, b, c) { return this.on(a, null, b, c); }, unbind(a, b) { return this.off(a, null, b); }, delegate(a, b, c, d) { return this.on(b, a, c, d); }, undelegate(a, b, c) { return arguments.length === 1 ? this.off(a, '**') : this.off(b, a || '**', c); },
    }), r.holdReady = function (a) { a ? r.readyWait++ : r.ready(!0); }, r.isArray = Array.isArray, r.parseJSON = JSON.parse, r.nodeName = B, typeof define === 'function' && define.amd && define('jquery', [], () => r); const Vb = a.jQuery; const Wb = a.$; return r.noConflict = function (b) { return a.$ === r && (a.$ = Wb), b && a.jQuery === r && (a.jQuery = Vb), r; }, b || (a.jQuery = a.$ = r), r;
}));

/*
 Copyright (C) Federico Zivolo 2019
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */(function (e, t) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t() : typeof define === 'function' && define.amd ? define(t) : e.Popper = t(); }(this, () => {
    function e(e) { return e && {}.toString.call(e) === '[object Function]'; } function t(e, t) { if (e.nodeType !== 1) return []; const o = e.ownerDocument.defaultView; const n = o.getComputedStyle(e, null); return t ? n[t] : n; } function o(e) { return e.nodeName === 'HTML' ? e : e.parentNode || e.host; } function n(e) { if (!e) return document.body; switch (e.nodeName) { case 'HTML': case 'BODY': return e.ownerDocument.body; case '#document': return e.body; } const i = t(e); const r = i.overflow; const p = i.overflowX; const s = i.overflowY; return /(auto|scroll|overlay)/.test(r + s + p) ? e : n(o(e)); } function r(e) { return e === 11 ? pe : e === 10 ? se : pe || se; } function p(e) { if (!e) return document.documentElement; for (var o = r(10) ? document.body : null, n = e.offsetParent || null; n === o && e.nextElementSibling;)n = (e = e.nextElementSibling).offsetParent; const i = n && n.nodeName; return i && i !== 'BODY' && i !== 'HTML' ? ['TH', 'TD', 'TABLE'].indexOf(n.nodeName) !== -1 && t(n, 'position') === 'static' ? p(n) : n : e ? e.ownerDocument.documentElement : document.documentElement; } function s(e) { const t = e.nodeName; return t !== 'BODY' && (t === 'HTML' || p(e.firstElementChild) === e); } function d(e) { return e.parentNode === null ? e : d(e.parentNode); } function a(e, t) { if (!e || !e.nodeType || !t || !t.nodeType) return document.documentElement; const o = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING; const n = o ? e : t; const i = o ? t : e; const r = document.createRange(); r.setStart(n, 0), r.setEnd(i, 0); const l = r.commonAncestorContainer; if (e !== l && t !== l || n.contains(i)) return s(l) ? l : p(l); const f = d(e); return f.host ? a(f.host, t) : a(e, d(t).host); } function l(e) { const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'top'; const o = t === 'top' ? 'scrollTop' : 'scrollLeft'; const n = e.nodeName; if (n === 'BODY' || n === 'HTML') { const i = e.ownerDocument.documentElement; const r = e.ownerDocument.scrollingElement || i; return r[o]; } return e[o]; } function f(e, t) { const o = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]; const n = l(t, 'top'); const i = l(t, 'left'); const r = o ? -1 : 1; return e.top += n * r, e.bottom += n * r, e.left += i * r, e.right += i * r, e; } function m(e, t) { const o = t === 'x' ? 'Left' : 'Top'; const n = o == 'Left' ? 'Right' : 'Bottom'; return parseFloat(e[`border${o}Width`], 10) + parseFloat(e[`border${n}Width`], 10); } function h(e, t, o, n) { return ee(t[`offset${e}`], t[`scroll${e}`], o[`client${e}`], o[`offset${e}`], o[`scroll${e}`], r(10) ? parseInt(o[`offset${e}`]) + parseInt(n[`margin${e === 'Height' ? 'Top' : 'Left'}`]) + parseInt(n[`margin${e === 'Height' ? 'Bottom' : 'Right'}`]) : 0); } function c(e) { const t = e.body; const o = e.documentElement; const n = r(10) && getComputedStyle(o); return { height: h('Height', t, o, n), width: h('Width', t, o, n) }; } function g(e) { return { ...e, right: e.left + e.width, bottom: e.top + e.height }; } function u(e) {
        let o = {}; try { if (r(10)) { o = e.getBoundingClientRect(); const n = l(e, 'top'); const i = l(e, 'left'); o.top += n, o.left += i, o.bottom += n, o.right += i; } else o = e.getBoundingClientRect(); } catch (t) {} const p = {
            left: o.left, top: o.top, width: o.right - o.left, height: o.bottom - o.top,
        }; const s = e.nodeName === 'HTML' ? c(e.ownerDocument) : {}; const d = s.width || e.clientWidth || p.right - p.left; const a = s.height || e.clientHeight || p.bottom - p.top; let f = e.offsetWidth - d; let h = e.offsetHeight - a; if (f || h) { const u = t(e); f -= m(u, 'x'), h -= m(u, 'y'), p.width -= f, p.height -= h; } return g(p);
    } function b(e, o) {
        const i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]; const p = r(10); const s = o.nodeName === 'HTML'; const d = u(e); const a = u(o); const l = n(e); const m = t(o); const h = parseFloat(m.borderTopWidth, 10); const c = parseFloat(m.borderLeftWidth, 10); i && s && (a.top = ee(a.top, 0), a.left = ee(a.left, 0)); let b = g({
            top: d.top - a.top - h, left: d.left - a.left - c, width: d.width, height: d.height,
        }); if (b.marginTop = 0, b.marginLeft = 0, !p && s) { const w = parseFloat(m.marginTop, 10); const y = parseFloat(m.marginLeft, 10); b.top -= h - w, b.bottom -= h - w, b.left -= c - y, b.right -= c - y, b.marginTop = w, b.marginLeft = y; } return (p && !i ? o.contains(l) : o === l && l.nodeName !== 'BODY') && (b = f(b, o)), b;
    } function w(e) {
        const t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; const o = e.ownerDocument.documentElement; const n = b(e, o); const i = ee(o.clientWidth, window.innerWidth || 0); const r = ee(o.clientHeight, window.innerHeight || 0); const p = t ? 0 : l(o); const s = t ? 0 : l(o, 'left'); const d = {
            top: p - n.top + n.marginTop, left: s - n.left + n.marginLeft, width: i, height: r,
        }; return g(d);
    } function y(e) { const n = e.nodeName; if (n === 'BODY' || n === 'HTML') return !1; if (t(e, 'position') === 'fixed') return !0; const i = o(e); return !!i && y(i); } function E(e) { if (!e || !e.parentElement || r()) return document.documentElement; for (var o = e.parentElement; o && t(o, 'transform') === 'none';)o = o.parentElement; return o || document.documentElement; } function v(e, t, i, r) { const p = arguments.length > 4 && void 0 !== arguments[4] && arguments[4]; let s = { top: 0, left: 0 }; const d = p ? E(e) : a(e, t); if (r === 'viewport')s = w(d, p); else { let l; r === 'scrollParent' ? (l = n(o(t)), l.nodeName === 'BODY' && (l = e.ownerDocument.documentElement)) : r === 'window' ? l = e.ownerDocument.documentElement : l = r; const f = b(l, d, p); if (l.nodeName === 'HTML' && !y(d)) { const m = c(e.ownerDocument); const h = m.height; const g = m.width; s.top += f.top - f.marginTop, s.bottom = h + f.top, s.left += f.left - f.marginLeft, s.right = g + f.left; } else s = f; }i = i || 0; const u = typeof i === 'number'; return s.left += u ? i : i.left || 0, s.top += u ? i : i.top || 0, s.right -= u ? i : i.right || 0, s.bottom -= u ? i : i.bottom || 0, s; } function x(e) { const t = e.width; const o = e.height; return t * o; } function O(e, t, o, n, i) {
        const r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0; if (e.indexOf('auto') === -1) return e; const p = v(o, n, r, i); const s = {
            top: { width: p.width, height: t.top - p.top }, right: { width: p.right - t.right, height: p.height }, bottom: { width: p.width, height: p.bottom - t.bottom }, left: { width: t.left - p.left, height: p.height },
        }; const d = Object.keys(s).map((e) => ({ key: e, ...s[e], area: x(s[e]) })).sort((e, t) => t.area - e.area); const a = d.filter((e) => { const t = e.width; const n = e.height; return t >= o.clientWidth && n >= o.clientHeight; }); const l = a.length > 0 ? a[0].key : d[0].key; const f = e.split('-')[1]; return l + (f ? `-${f}` : '');
    } function L(e, t, o) { const n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null; const i = n ? E(t) : a(t, o); return b(o, i, n); } function S(e) { const t = e.ownerDocument.defaultView; const o = t.getComputedStyle(e); const n = parseFloat(o.marginTop || 0) + parseFloat(o.marginBottom || 0); const i = parseFloat(o.marginLeft || 0) + parseFloat(o.marginRight || 0); const r = { width: e.offsetWidth + i, height: e.offsetHeight + n }; return r; } function T(e) {
        const t = {
            left: 'right', right: 'left', bottom: 'top', top: 'bottom',
        }; return e.replace(/left|right|bottom|top/g, (e) => t[e]);
    } function D(e, t, o) { o = o.split('-')[0]; const n = S(e); const i = { width: n.width, height: n.height }; const r = ['right', 'left'].indexOf(o) !== -1; const p = r ? 'top' : 'left'; const s = r ? 'left' : 'top'; const d = r ? 'height' : 'width'; const a = r ? 'width' : 'height'; return i[p] = t[p] + t[d] / 2 - n[d] / 2, i[s] = o === s ? t[s] - n[a] : t[T(s)], i; } function C(e, t) { return Array.prototype.find ? e.find(t) : e.filter(t)[0]; } function N(e, t, o) { if (Array.prototype.findIndex) return e.findIndex((e) => e[t] === o); const n = C(e, (e) => e[t] === o); return e.indexOf(n); } function P(t, o, n) { const i = void 0 === n ? t : t.slice(0, N(t, 'name', n)); return i.forEach((t) => { t.function && console.warn('`modifier.function` is deprecated, use `modifier.fn`!'); const n = t.function || t.fn; t.enabled && e(n) && (o.offsets.popper = g(o.offsets.popper), o.offsets.reference = g(o.offsets.reference), o = n(o, t)); }), o; } function k() {
        if (!this.state.isDestroyed) {
            let e = {
                instance: this, styles: {}, arrowStyles: {}, attributes: {}, flipped: !1, offsets: {},
            }; e.offsets.reference = L(this.state, this.popper, this.reference, this.options.positionFixed), e.placement = O(this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e.originalPlacement = e.placement, e.positionFixed = this.options.positionFixed, e.offsets.popper = D(this.popper, e.offsets.reference, e.placement), e.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute', e = P(this.modifiers, e), this.state.isCreated ? this.options.onUpdate(e) : (this.state.isCreated = !0, this.options.onCreate(e));
        }
    } function W(e, t) { return e.some((e) => { const o = e.name; const n = e.enabled; return n && o === t; }); } function H(e) { for (let t = [!1, 'ms', 'Webkit', 'Moz', 'O'], o = e.charAt(0).toUpperCase() + e.slice(1), n = 0; n < t.length; n++) { const i = t[n]; const r = i ? `${i}${o}` : e; if (typeof document.body.style[r] !== 'undefined') return r; } return null; } function B() { return this.state.isDestroyed = !0, W(this.modifiers, 'applyStyle') && (this.popper.removeAttribute('x-placement'), this.popper.style.position = '', this.popper.style.top = '', this.popper.style.left = '', this.popper.style.right = '', this.popper.style.bottom = '', this.popper.style.willChange = '', this.popper.style[H('transform')] = ''), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this; } function A(e) { const t = e.ownerDocument; return t ? t.defaultView : window; } function M(e, t, o, i) { const r = e.nodeName === 'BODY'; const p = r ? e.ownerDocument.defaultView : e; p.addEventListener(t, o, { passive: !0 }), r || M(n(p.parentNode), t, o, i), i.push(p); } function F(e, t, o, i) { o.updateBound = i, A(e).addEventListener('resize', o.updateBound, { passive: !0 }); const r = n(e); return M(r, 'scroll', o.updateBound, o.scrollParents), o.scrollElement = r, o.eventsEnabled = !0, o; } function I() { this.state.eventsEnabled || (this.state = F(this.reference, this.options, this.state, this.scheduleUpdate)); } function R(e, t) { return A(e).removeEventListener('resize', t.updateBound), t.scrollParents.forEach((e) => { e.removeEventListener('scroll', t.updateBound); }), t.updateBound = null, t.scrollParents = [], t.scrollElement = null, t.eventsEnabled = !1, t; } function U() { this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = R(this.reference, this.state)); } function Y(e) { return e !== '' && !isNaN(parseFloat(e)) && isFinite(e); } function j(e, t) { Object.keys(t).forEach((o) => { let n = ''; ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(o) !== -1 && Y(t[o]) && (n = 'px'), e.style[o] = t[o] + n; }); } function V(e, t) { Object.keys(t).forEach((o) => { const n = t[o]; !1 === n ? e.removeAttribute(o) : e.setAttribute(o, t[o]); }); } function q(e, t) {
        const o = e.offsets; const n = o.popper; const i = o.reference; const r = $; const p = function (e) { return e; }; const s = r(i.width); const d = r(n.width); const a = ['left', 'right'].indexOf(e.placement) !== -1; const l = e.placement.indexOf('-') !== -1; const f = t ? a || l || s % 2 == d % 2 ? r : Z : p; const m = t ? r : p; return {
            left: f(s % 2 == 1 && d % 2 == 1 && !l && t ? n.left - 1 : n.left), top: m(n.top), bottom: m(n.bottom), right: f(n.right),
        };
    } function K(e, t, o) { const n = C(e, (e) => { const o = e.name; return o === t; }); const i = !!n && e.some((e) => e.name === o && e.enabled && e.order < n.order); if (!i) { const r = `\`${t}\``; console.warn(`\`${o}\`` + ` modifier is required by ${r} modifier in order to work, be sure to include it before ${r}!`); } return i; } function z(e) { return e === 'end' ? 'start' : e === 'start' ? 'end' : e; } function G(e) { const t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; const o = ce.indexOf(e); const n = ce.slice(o + 1).concat(ce.slice(0, o)); return t ? n.reverse() : n; } function _(e, t, o, n) { const i = e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/); const r = +i[1]; const p = i[2]; if (!r) return e; if (p.indexOf('%') === 0) { let s; switch (p) { case '%p': s = o; break; case '%': case '%r': default: s = n; } const d = g(s); return d[t] / 100 * r; } if (p === 'vh' || p === 'vw') { let a; return a = p === 'vh' ? ee(document.documentElement.clientHeight, window.innerHeight || 0) : ee(document.documentElement.clientWidth, window.innerWidth || 0), a / 100 * r; } return r; } function X(e, t, o, n) { const i = [0, 0]; const r = ['right', 'left'].indexOf(n) !== -1; const p = e.split(/(\+|\-)/).map((e) => e.trim()); const s = p.indexOf(C(p, (e) => e.search(/,|\s/) !== -1)); p[s] && p[s].indexOf(',') === -1 && console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.'); const d = /\s*,\s*|\s+/; let a = s === -1 ? [p] : [p.slice(0, s).concat([p[s].split(d)[0]]), [p[s].split(d)[1]].concat(p.slice(s + 1))]; return a = a.map((e, n) => { const i = (n === 1 ? !r : r) ? 'height' : 'width'; let p = !1; return e.reduce((e, t) => (e[e.length - 1] === '' && ['+', '-'].indexOf(t) !== -1 ? (e[e.length - 1] = t, p = !0, e) : p ? (e[e.length - 1] += t, p = !1, e) : e.concat(t)), []).map((e) => _(e, i, t, o)); }), a.forEach((e, t) => { e.forEach((o, n) => { Y(o) && (i[t] += o * (e[n - 1] === '-' ? -1 : 1)); }); }), i; } function J(e, t) { let o; const n = t.offset; const i = e.placement; const r = e.offsets; const p = r.popper; const s = r.reference; const d = i.split('-')[0]; return o = Y(+n) ? [+n, 0] : X(n, p, s, d), d === 'left' ? (p.top += o[0], p.left -= o[1]) : d === 'right' ? (p.top += o[0], p.left += o[1]) : d === 'top' ? (p.left += o[0], p.top -= o[1]) : d === 'bottom' && (p.left += o[0], p.top += o[1]), e.popper = p, e; } for (var Q = Math.min, Z = Math.floor, $ = Math.round, ee = Math.max, te = typeof window !== 'undefined' && typeof document !== 'undefined', oe = ['Edge', 'Trident', 'Firefox'], ne = 0, ie = 0; ie < oe.length; ie += 1) if (te && navigator.userAgent.indexOf(oe[ie]) >= 0) { ne = 1; break; } const i = te && window.Promise; const re = i ? function (e) { let t = !1; return function () { t || (t = !0, window.Promise.resolve().then(() => { t = !1, e(); })); }; } : function (e) { let t = !1; return function () { t || (t = !0, setTimeout(() => { t = !1, e(); }, ne)); }; }; var pe = te && !!(window.MSInputMethodContext && document.documentMode); var se = te && /MSIE 10/.test(navigator.userAgent); const de = function (e, t) { if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function'); }; const ae = (function () { function e(e, t) { for (var o, n = 0; n < t.length; n++)o = t[n], o.enumerable = o.enumerable || !1, o.configurable = !0, 'value' in o && (o.writable = !0), Object.defineProperty(e, o.key, o); } return function (t, o, n) { return o && e(t.prototype, o), n && e(t, n), t; }; }()); const le = function (e, t, o) {
        return t in e ? Object.defineProperty(e, t, {
            value: o, enumerable: !0, configurable: !0, writable: !0,
        }) : e[t] = o, e;
    }; const fe = Object.assign || function (e) { for (var t, o = 1; o < arguments.length; o++) for (const n in t = arguments[o], t)Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]); return e; }; const me = te && /Firefox/i.test(navigator.userAgent); const he = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; var ce = he.slice(3); const ge = { FLIP: 'flip', CLOCKWISE: 'clockwise', COUNTERCLOCKWISE: 'counterclockwise' }; const ue = (function () { function t(o, n) { const i = this; const r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}; de(this, t), this.scheduleUpdate = function () { return requestAnimationFrame(i.update); }, this.update = re(this.update.bind(this)), this.options = { ...t.Defaults, ...r }, this.state = { isDestroyed: !1, isCreated: !1, scrollParents: [] }, this.reference = o && o.jquery ? o[0] : o, this.popper = n && n.jquery ? n[0] : n, this.options.modifiers = {}, Object.keys({ ...t.Defaults.modifiers, ...r.modifiers }).forEach((e) => { i.options.modifiers[e] = { ...t.Defaults.modifiers[e] || {}, ...(r.modifiers ? r.modifiers[e] : {}) }; }), this.modifiers = Object.keys(this.options.modifiers).map((e) => ({ name: e, ...i.options.modifiers[e] })).sort((e, t) => e.order - t.order), this.modifiers.forEach((t) => { t.enabled && e(t.onLoad) && t.onLoad(i.reference, i.popper, i.options, t, i.state); }), this.update(); const p = this.options.eventsEnabled; p && this.enableEventListeners(), this.state.eventsEnabled = p; } return ae(t, [{ key: 'update', value() { return k.call(this); } }, { key: 'destroy', value() { return B.call(this); } }, { key: 'enableEventListeners', value() { return I.call(this); } }, { key: 'disableEventListeners', value() { return U.call(this); } }]), t; }()); return ue.Utils = (typeof window === 'undefined' ? global : window).PopperUtils, ue.placements = he, ue.Defaults = {
        placement: 'bottom',
        positionFixed: !1,
        eventsEnabled: !0,
        removeOnDestroy: !1,
        onCreate() {},
        onUpdate() {},
        modifiers: {
            shift: { order: 100, enabled: !0, fn(e) { const t = e.placement; const o = t.split('-')[0]; const n = t.split('-')[1]; if (n) { const i = e.offsets; const r = i.reference; const p = i.popper; const s = ['bottom', 'top'].indexOf(o) !== -1; const d = s ? 'left' : 'top'; const a = s ? 'width' : 'height'; const l = { start: le({}, d, r[d]), end: le({}, d, r[d] + r[a] - p[a]) }; e.offsets.popper = { ...p, ...l[n] }; } return e; } },
            offset: {
                order: 200, enabled: !0, fn: J, offset: 0,
            },
            preventOverflow: {
                order: 300, enabled: !0, fn(e, t) { let o = t.boundariesElement || p(e.instance.popper); e.instance.reference === o && (o = p(o)); const n = H('transform'); const i = e.instance.popper.style; const r = i.top; const s = i.left; const d = i[n]; i.top = '', i.left = '', i[n] = ''; const a = v(e.instance.popper, e.instance.reference, t.padding, o, e.positionFixed); i.top = r, i.left = s, i[n] = d, t.boundaries = a; const l = t.priority; let f = e.offsets.popper; const m = { primary(e) { let o = f[e]; return f[e] < a[e] && !t.escapeWithReference && (o = ee(f[e], a[e])), le({}, e, o); }, secondary(e) { const o = e === 'right' ? 'left' : 'top'; let n = f[o]; return f[e] > a[e] && !t.escapeWithReference && (n = Q(f[o], a[e] - (e === 'right' ? f.width : f.height))), le({}, o, n); } }; return l.forEach((e) => { const t = ['left', 'top'].indexOf(e) === -1 ? 'secondary' : 'primary'; f = { ...f, ...m[t](e) }; }), e.offsets.popper = f, e; }, priority: ['left', 'right', 'top', 'bottom'], padding: 5, boundariesElement: 'scrollParent',
            },
            keepTogether: { order: 400, enabled: !0, fn(e) { const t = e.offsets; const o = t.popper; const n = t.reference; const i = e.placement.split('-')[0]; const r = Z; const p = ['top', 'bottom'].indexOf(i) !== -1; const s = p ? 'right' : 'bottom'; const d = p ? 'left' : 'top'; const a = p ? 'width' : 'height'; return o[s] < r(n[d]) && (e.offsets.popper[d] = r(n[d]) - o[a]), o[d] > r(n[s]) && (e.offsets.popper[d] = r(n[s])), e; } },
            arrow: {
                order: 500, enabled: !0, fn(e, o) { let n; if (!K(e.instance.modifiers, 'arrow', 'keepTogether')) return e; let i = o.element; if (typeof i === 'string') { if (i = e.instance.popper.querySelector(i), !i) return e; } else if (!e.instance.popper.contains(i)) return console.warn('WARNING: `arrow.element` must be child of its popper element!'), e; const r = e.placement.split('-')[0]; const p = e.offsets; const s = p.popper; const d = p.reference; const a = ['left', 'right'].indexOf(r) !== -1; const l = a ? 'height' : 'width'; const f = a ? 'Top' : 'Left'; const m = f.toLowerCase(); const h = a ? 'left' : 'top'; const c = a ? 'bottom' : 'right'; const u = S(i)[l]; d[c] - u < s[m] && (e.offsets.popper[m] -= s[m] - (d[c] - u)), d[m] + u > s[c] && (e.offsets.popper[m] += d[m] + u - s[c]), e.offsets.popper = g(e.offsets.popper); const b = d[m] + d[l] / 2 - u / 2; const w = t(e.instance.popper); const y = parseFloat(w[`margin${f}`], 10); const E = parseFloat(w[`border${f}Width`], 10); let v = b - e.offsets.popper[m] - y - E; return v = ee(Q(s[l] - u, v), 0), e.arrowElement = i, e.offsets.arrow = (n = {}, le(n, m, $(v)), le(n, h, ''), n), e; }, element: '[x-arrow]',
            },
            flip: {
                order: 600, enabled: !0, fn(e, t) { if (W(e.instance.modifiers, 'inner')) return e; if (e.flipped && e.placement === e.originalPlacement) return e; const o = v(e.instance.popper, e.instance.reference, t.padding, t.boundariesElement, e.positionFixed); let n = e.placement.split('-')[0]; let i = T(n); let r = e.placement.split('-')[1] || ''; let p = []; switch (t.behavior) { case ge.FLIP: p = [n, i]; break; case ge.CLOCKWISE: p = G(n); break; case ge.COUNTERCLOCKWISE: p = G(n, !0); break; default: p = t.behavior; } return p.forEach((s, d) => { if (n !== s || p.length === d + 1) return e; n = e.placement.split('-')[0], i = T(n); const a = e.offsets.popper; const l = e.offsets.reference; const f = Z; const m = n === 'left' && f(a.right) > f(l.left) || n === 'right' && f(a.left) < f(l.right) || n === 'top' && f(a.bottom) > f(l.top) || n === 'bottom' && f(a.top) < f(l.bottom); const h = f(a.left) < f(o.left); const c = f(a.right) > f(o.right); const g = f(a.top) < f(o.top); const u = f(a.bottom) > f(o.bottom); const b = n === 'left' && h || n === 'right' && c || n === 'top' && g || n === 'bottom' && u; const w = ['top', 'bottom'].indexOf(n) !== -1; const y = !!t.flipVariations && (w && r === 'start' && h || w && r === 'end' && c || !w && r === 'start' && g || !w && r === 'end' && u); (m || b || y) && (e.flipped = !0, (m || b) && (n = p[d + 1]), y && (r = z(r)), e.placement = n + (r ? `-${r}` : ''), e.offsets.popper = { ...e.offsets.popper, ...D(e.instance.popper, e.offsets.reference, e.placement) }, e = P(e.instance.modifiers, e, 'flip')); }), e; }, behavior: 'flip', padding: 5, boundariesElement: 'viewport',
            },
            inner: { order: 700, enabled: !1, fn(e) { const t = e.placement; const o = t.split('-')[0]; const n = e.offsets; const i = n.popper; const r = n.reference; const p = ['left', 'right'].indexOf(o) !== -1; const s = ['top', 'left'].indexOf(o) === -1; return i[p ? 'left' : 'top'] = r[o] - (s ? i[p ? 'width' : 'height'] : 0), e.placement = T(t), e.offsets.popper = g(i), e; } },
            hide: { order: 800, enabled: !0, fn(e) { if (!K(e.instance.modifiers, 'hide', 'preventOverflow')) return e; const t = e.offsets.reference; const o = C(e.instance.modifiers, (e) => e.name === 'preventOverflow').boundaries; if (t.bottom < o.top || t.left > o.right || t.top > o.bottom || t.right < o.left) { if (!0 === e.hide) return e; e.hide = !0, e.attributes['x-out-of-boundaries'] = ''; } else { if (!1 === e.hide) return e; e.hide = !1, e.attributes['x-out-of-boundaries'] = !1; } return e; } },
            computeStyle: {
                order: 850, enabled: !0, fn(e, t) { const o = t.x; const n = t.y; const i = e.offsets.popper; const r = C(e.instance.modifiers, (e) => e.name === 'applyStyle').gpuAcceleration; void 0 !== r && console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'); let s; let d; const a = void 0 === r ? t.gpuAcceleration : r; const l = p(e.instance.popper); const f = u(l); const m = { position: i.position }; const h = q(e, window.devicePixelRatio < 2 || !me); const c = o === 'bottom' ? 'top' : 'bottom'; const g = n === 'right' ? 'left' : 'right'; const b = H('transform'); if (d = c == 'bottom' ? l.nodeName === 'HTML' ? -l.clientHeight + h.bottom : -f.height + h.bottom : h.top, s = g == 'right' ? l.nodeName === 'HTML' ? -l.clientWidth + h.right : -f.width + h.right : h.left, a && b)m[b] = `translate3d(${s}px, ${d}px, 0)`, m[c] = 0, m[g] = 0, m.willChange = 'transform'; else { const w = c == 'bottom' ? -1 : 1; const y = g == 'right' ? -1 : 1; m[c] = d * w, m[g] = s * y, m.willChange = `${c}, ${g}`; } const E = { 'x-placement': e.placement }; return e.attributes = { ...E, ...e.attributes }, e.styles = { ...m, ...e.styles }, e.arrowStyles = { ...e.offsets.arrow, ...e.arrowStyles }, e; }, gpuAcceleration: !0, x: 'bottom', y: 'right',
            },
            applyStyle: {
                order: 900, enabled: !0, fn(e) { return j(e.instance.popper, e.styles), V(e.instance.popper, e.attributes), e.arrowElement && Object.keys(e.arrowStyles).length && j(e.arrowElement, e.arrowStyles), e; }, onLoad(e, t, o, n, i) { const r = L(i, t, e, o.positionFixed); const p = O(o.placement, r, t, e, o.modifiers.flip.boundariesElement, o.modifiers.flip.padding); return t.setAttribute('x-placement', p), j(t, { position: o.positionFixed ? 'fixed' : 'absolute' }), o; }, gpuAcceleration: void 0,
            },
        },
    }, ue;
}));
// # sourceMappingURL=popper.min.js.map

/*!
  * Bootstrap v4.3.1 (https://getbootstrap.com/)
  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!(function (t, e) { typeof exports === 'object' && typeof module !== 'undefined' ? e(exports, require('jquery'), require('popper.js')) : typeof define === 'function' && define.amd ? define(['exports', 'jquery', 'popper.js'], e) : e((t = t || self).bootstrap = {}, t.jQuery, t.Popper); }(this, (t, g, u) => {
    function i(t, e) { for (let n = 0; n < e.length; n++) { const i = e[n]; i.enumerable = i.enumerable || !1, i.configurable = !0, 'value' in i && (i.writable = !0), Object.defineProperty(t, i.key, i); } } function s(t, e, n) { return e && i(t.prototype, e), n && i(t, n), t; } function l(o) {
        for (let t = 1; t < arguments.length; t++) {
            var r = arguments[t] != null ? arguments[t] : {}; let e = Object.keys(r); typeof Object.getOwnPropertySymbols === 'function' && (e = e.concat(Object.getOwnPropertySymbols(r).filter((t) => Object.getOwnPropertyDescriptor(r, t).enumerable))), e.forEach((t) => {
                let e; let n; let i; e = o, i = r[n = t], n in e ? Object.defineProperty(e, n, {
                    value: i, enumerable: !0, configurable: !0, writable: !0,
                }) : e[n] = i;
            });
        } return o;
    }g = g && g.hasOwnProperty('default') ? g.default : g, u = u && u.hasOwnProperty('default') ? u.default : u; const e = 'transitionend'; function n(t) { const e = this; let n = !1; return g(this).one(_.TRANSITION_END, () => { n = !0; }), setTimeout(() => { n || _.triggerTransitionEnd(e); }, t), this; } var _ = {
        TRANSITION_END: 'bsTransitionEnd', getUID(t) { for (;t += ~~(1e6 * Math.random()), document.getElementById(t););return t; }, getSelectorFromElement(t) { let e = t.getAttribute('data-target'); if (!e || e === '#') { const n = t.getAttribute('href'); e = n && n !== '#' ? n.trim() : ''; } try { return document.querySelector(e) ? e : null; } catch (t) { return null; } }, getTransitionDurationFromElement(t) { if (!t) return 0; let e = g(t).css('transition-duration'); let n = g(t).css('transition-delay'); const i = parseFloat(e); const o = parseFloat(n); return i || o ? (e = e.split(',')[0], n = n.split(',')[0], 1e3 * (parseFloat(e) + parseFloat(n))) : 0; }, reflow(t) { return t.offsetHeight; }, triggerTransitionEnd(t) { g(t).trigger(e); }, supportsTransitionEnd() { return Boolean(e); }, isElement(t) { return (t[0] || t).nodeType; }, typeCheckConfig(t, e, n) { for (const i in n) if (Object.prototype.hasOwnProperty.call(n, i)) { const o = n[i]; const r = e[i]; const s = r && _.isElement(r) ? 'element' : (a = r, {}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase()); if (!new RegExp(o).test(s)) throw new Error(`${t.toUpperCase()}: Option "${i}" provided type "${s}" but expected type "${o}".`); } let a; }, findShadowRoot(t) { if (!document.documentElement.attachShadow) return null; if (typeof t.getRootNode !== 'function') return t instanceof ShadowRoot ? t : t.parentNode ? _.findShadowRoot(t.parentNode) : null; const e = t.getRootNode(); return e instanceof ShadowRoot ? e : null; },
    }; g.fn.emulateTransitionEnd = n, g.event.special[_.TRANSITION_END] = { bindType: e, delegateType: e, handle(t) { if (g(t.target).is(this)) return t.handleObj.handler.apply(this, arguments); } }; const o = 'alert'; const r = 'bs.alert'; const a = `.${r}`; const c = g.fn[o]; const h = { CLOSE: `close${a}`, CLOSED: `closed${a}`, CLICK_DATA_API: `click${a}.data-api` }; const f = 'alert'; const d = 'fade'; const m = 'show'; const p = (function () { function i(t) { this._element = t; } const t = i.prototype; return t.close = function (t) { let e = this._element; t && (e = this._getRootElement(t)), this._triggerCloseEvent(e).isDefaultPrevented() || this._removeElement(e); }, t.dispose = function () { g.removeData(this._element, r), this._element = null; }, t._getRootElement = function (t) { const e = _.getSelectorFromElement(t); let n = !1; return e && (n = document.querySelector(e)), n || (n = g(t).closest(`.${f}`)[0]), n; }, t._triggerCloseEvent = function (t) { const e = g.Event(h.CLOSE); return g(t).trigger(e), e; }, t._removeElement = function (e) { const n = this; if (g(e).removeClass(m), g(e).hasClass(d)) { const t = _.getTransitionDurationFromElement(e); g(e).one(_.TRANSITION_END, (t) => n._destroyElement(e, t)).emulateTransitionEnd(t); } else this._destroyElement(e); }, t._destroyElement = function (t) { g(t).detach().trigger(h.CLOSED).remove(); }, i._jQueryInterface = function (n) { return this.each(function () { const t = g(this); let e = t.data(r); e || (e = new i(this), t.data(r, e)), n === 'close' && e[n](this); }); }, i._handleDismiss = function (e) { return function (t) { t && t.preventDefault(), e.close(this); }; }, s(i, null, [{ key: 'VERSION', get() { return '4.3.1'; } }]), i; }()); g(document).on(h.CLICK_DATA_API, '[data-dismiss="alert"]', p._handleDismiss(new p())), g.fn[o] = p._jQueryInterface, g.fn[o].Constructor = p, g.fn[o].noConflict = function () { return g.fn[o] = c, p._jQueryInterface; }; const v = 'button'; const y = 'bs.button'; const E = `.${y}`; const C = '.data-api'; const T = g.fn[v]; const S = 'active'; const b = 'btn'; const I = 'focus'; const D = '[data-toggle^="button"]'; const w = '[data-toggle="buttons"]'; const A = 'input:not([type="hidden"])'; const N = '.active'; const O = '.btn'; const k = { CLICK_DATA_API: `click${E}${C}`, FOCUS_BLUR_DATA_API: `focus${E}${C} blur${E}${C}` }; const P = (function () { function n(t) { this._element = t; } const t = n.prototype; return t.toggle = function () { let t = !0; let e = !0; const n = g(this._element).closest(w)[0]; if (n) { const i = this._element.querySelector(A); if (i) { if (i.type === 'radio') if (i.checked && this._element.classList.contains(S))t = !1; else { const o = n.querySelector(N); o && g(o).removeClass(S); } if (t) { if (i.hasAttribute('disabled') || n.hasAttribute('disabled') || i.classList.contains('disabled') || n.classList.contains('disabled')) return; i.checked = !this._element.classList.contains(S), g(i).trigger('change'); }i.focus(), e = !1; } }e && this._element.setAttribute('aria-pressed', !this._element.classList.contains(S)), t && g(this._element).toggleClass(S); }, t.dispose = function () { g.removeData(this._element, y), this._element = null; }, n._jQueryInterface = function (e) { return this.each(function () { let t = g(this).data(y); t || (t = new n(this), g(this).data(y, t)), e === 'toggle' && t[e](); }); }, s(n, null, [{ key: 'VERSION', get() { return '4.3.1'; } }]), n; }()); g(document).on(k.CLICK_DATA_API, D, (t) => { t.preventDefault(); let e = t.target; g(e).hasClass(b) || (e = g(e).closest(O)), P._jQueryInterface.call(g(e), 'toggle'); }).on(k.FOCUS_BLUR_DATA_API, D, (t) => { const e = g(t.target).closest(O)[0]; g(e).toggleClass(I, /^focus(in)?$/.test(t.type)); }), g.fn[v] = P._jQueryInterface, g.fn[v].Constructor = P, g.fn[v].noConflict = function () { return g.fn[v] = T, P._jQueryInterface; }; const L = 'carousel'; const j = 'bs.carousel'; const H = `.${j}`; const R = '.data-api'; const x = g.fn[L]; const F = {
        interval: 5e3, keyboard: !0, slide: !1, pause: 'hover', wrap: !0, touch: !0,
    }; const U = {
        interval: '(number|boolean)', keyboard: 'boolean', slide: '(boolean|string)', pause: '(string|boolean)', wrap: 'boolean', touch: 'boolean',
    }; const W = 'next'; const q = 'prev'; const M = 'left'; const K = 'right'; const Q = {
        SLIDE: `slide${H}`, SLID: `slid${H}`, KEYDOWN: `keydown${H}`, MOUSEENTER: `mouseenter${H}`, MOUSELEAVE: `mouseleave${H}`, TOUCHSTART: `touchstart${H}`, TOUCHMOVE: `touchmove${H}`, TOUCHEND: `touchend${H}`, POINTERDOWN: `pointerdown${H}`, POINTERUP: `pointerup${H}`, DRAG_START: `dragstart${H}`, LOAD_DATA_API: `load${H}${R}`, CLICK_DATA_API: `click${H}${R}`,
    }; const B = 'carousel'; const V = 'active'; const Y = 'slide'; const z = 'carousel-item-right'; const X = 'carousel-item-left'; const $ = 'carousel-item-next'; const G = 'carousel-item-prev'; const J = 'pointer-event'; const Z = '.active'; const tt = '.active.carousel-item'; const et = '.carousel-item'; const nt = '.carousel-item img'; const it = '.carousel-item-next, .carousel-item-prev'; const ot = '.carousel-indicators'; const rt = '[data-slide], [data-slide-to]'; const st = '[data-ride="carousel"]'; const at = { TOUCH: 'touch', PEN: 'pen' }; const lt = (function () {
        function r(t, e) { this._items = null, this._interval = null, this._activeElement = null, this._isPaused = !1, this._isSliding = !1, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e), this._element = t, this._indicatorsElement = this._element.querySelector(ot), this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0, this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent), this._addEventListeners(); } const t = r.prototype; return t.next = function () { this._isSliding || this._slide(W); }, t.nextWhenVisible = function () { !document.hidden && g(this._element).is(':visible') && g(this._element).css('visibility') !== 'hidden' && this.next(); }, t.prev = function () { this._isSliding || this._slide(q); }, t.pause = function (t) { t || (this._isPaused = !0), this._element.querySelector(it) && (_.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), this._interval = null; }, t.cycle = function (t) { t || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval)); }, t.to = function (t) { const e = this; this._activeElement = this._element.querySelector(tt); const n = this._getItemIndex(this._activeElement); if (!(t > this._items.length - 1 || t < 0)) if (this._isSliding)g(this._element).one(Q.SLID, () => e.to(t)); else { if (n === t) return this.pause(), void this.cycle(); const i = n < t ? W : q; this._slide(i, this._items[t]); } }, t.dispose = function () { g(this._element).off(H), g.removeData(this._element, j), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null; }, t._getConfig = function (t) { return t = l({}, F, t), _.typeCheckConfig(L, t, U), t; }, t._handleSwipe = function () { const t = Math.abs(this.touchDeltaX); if (!(t <= 40)) { const e = t / this.touchDeltaX; e > 0 && this.prev(), e < 0 && this.next(); } }, t._addEventListeners = function () { const e = this; this._config.keyboard && g(this._element).on(Q.KEYDOWN, (t) => e._keydown(t)), this._config.pause === 'hover' && g(this._element).on(Q.MOUSEENTER, (t) => e.pause(t)).on(Q.MOUSELEAVE, (t) => e.cycle(t)), this._config.touch && this._addTouchEventListeners(); }, t._addTouchEventListeners = function () { const n = this; if (this._touchSupported) { const e = function (t) { n._pointerEvent && at[t.originalEvent.pointerType.toUpperCase()] ? n.touchStartX = t.originalEvent.clientX : n._pointerEvent || (n.touchStartX = t.originalEvent.touches[0].clientX); }; const i = function (t) { n._pointerEvent && at[t.originalEvent.pointerType.toUpperCase()] && (n.touchDeltaX = t.originalEvent.clientX - n.touchStartX), n._handleSwipe(), n._config.pause === 'hover' && (n.pause(), n.touchTimeout && clearTimeout(n.touchTimeout), n.touchTimeout = setTimeout((t) => n.cycle(t), 500 + n._config.interval)); }; g(this._element.querySelectorAll(nt)).on(Q.DRAG_START, (t) => t.preventDefault()), this._pointerEvent ? (g(this._element).on(Q.POINTERDOWN, (t) => e(t)), g(this._element).on(Q.POINTERUP, (t) => i(t)), this._element.classList.add(J)) : (g(this._element).on(Q.TOUCHSTART, (t) => e(t)), g(this._element).on(Q.TOUCHMOVE, (t) => { let e; (e = t).originalEvent.touches && e.originalEvent.touches.length > 1 ? n.touchDeltaX = 0 : n.touchDeltaX = e.originalEvent.touches[0].clientX - n.touchStartX; }), g(this._element).on(Q.TOUCHEND, (t) => i(t))); } }, t._keydown = function (t) { if (!/input|textarea/i.test(t.target.tagName)) switch (t.which) { case 37: t.preventDefault(), this.prev(); break; case 39: t.preventDefault(), this.next(); } }, t._getItemIndex = function (t) { return this._items = t && t.parentNode ? [].slice.call(t.parentNode.querySelectorAll(et)) : [], this._items.indexOf(t); }, t._getItemByDirection = function (t, e) { const n = t === W; const i = t === q; const o = this._getItemIndex(e); const r = this._items.length - 1; if ((i && o === 0 || n && o === r) && !this._config.wrap) return e; const s = (o + (t === q ? -1 : 1)) % this._items.length; return s === -1 ? this._items[this._items.length - 1] : this._items[s]; }, t._triggerSlideEvent = function (t, e) {
            const n = this._getItemIndex(t); const i = this._getItemIndex(this._element.querySelector(tt)); const o = g.Event(Q.SLIDE, {
                relatedTarget: t, direction: e, from: i, to: n,
            }); return g(this._element).trigger(o), o;
        }, t._setActiveIndicatorElement = function (t) { if (this._indicatorsElement) { const e = [].slice.call(this._indicatorsElement.querySelectorAll(Z)); g(e).removeClass(V); const n = this._indicatorsElement.children[this._getItemIndex(t)]; n && g(n).addClass(V); } }, t._slide = function (t, e) {
            let n; let i; let o; const r = this; const s = this._element.querySelector(tt); const a = this._getItemIndex(s); const l = e || s && this._getItemByDirection(t, s); const c = this._getItemIndex(l); const h = Boolean(this._interval); if (o = t === W ? (n = X, i = $, M) : (n = z, i = G, K), l && g(l).hasClass(V)) this._isSliding = !1; else if (!this._triggerSlideEvent(l, o).isDefaultPrevented() && s && l) {
                this._isSliding = !0, h && this.pause(), this._setActiveIndicatorElement(l); const u = g.Event(Q.SLID, {
                    relatedTarget: l, direction: o, from: a, to: c,
                }); if (g(this._element).hasClass(Y)) { g(l).addClass(i), _.reflow(l), g(s).addClass(n), g(l).addClass(n); const f = parseInt(l.getAttribute('data-interval'), 10); this._config.interval = f ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, f) : this._config.defaultInterval || this._config.interval; const d = _.getTransitionDurationFromElement(s); g(s).one(_.TRANSITION_END, () => { g(l).removeClass(`${n} ${i}`).addClass(V), g(s).removeClass(`${V} ${i} ${n}`), r._isSliding = !1, setTimeout(() => g(r._element).trigger(u), 0); }).emulateTransitionEnd(d); } else g(s).removeClass(V), g(l).addClass(V), this._isSliding = !1, g(this._element).trigger(u); h && this.cycle();
            }
        }, r._jQueryInterface = function (i) { return this.each(function () { let t = g(this).data(j); let e = l({}, F, g(this).data()); typeof i === 'object' && (e = l({}, e, i)); const n = typeof i === 'string' ? i : e.slide; if (t || (t = new r(this, e), g(this).data(j, t)), typeof i === 'number')t.to(i); else if (typeof n === 'string') { if (typeof t[n] === 'undefined') throw new TypeError(`No method named "${n}"`); t[n](); } else e.interval && e.ride && (t.pause(), t.cycle()); }); }, r._dataApiClickHandler = function (t) { const e = _.getSelectorFromElement(this); if (e) { const n = g(e)[0]; if (n && g(n).hasClass(B)) { const i = l({}, g(n).data(), g(this).data()); const o = this.getAttribute('data-slide-to'); o && (i.interval = !1), r._jQueryInterface.call(g(n), i), o && g(n).data(j).to(o), t.preventDefault(); } } }, s(r, null, [{ key: 'VERSION', get() { return '4.3.1'; } }, { key: 'Default', get() { return F; } }]), r;
    }()); g(document).on(Q.CLICK_DATA_API, rt, lt._dataApiClickHandler), g(window).on(Q.LOAD_DATA_API, () => { for (let t = [].slice.call(document.querySelectorAll(st)), e = 0, n = t.length; e < n; e++) { const i = g(t[e]); lt._jQueryInterface.call(i, i.data()); } }), g.fn[L] = lt._jQueryInterface, g.fn[L].Constructor = lt, g.fn[L].noConflict = function () { return g.fn[L] = x, lt._jQueryInterface; }; const ct = 'collapse'; const ht = 'bs.collapse'; const ut = `.${ht}`; const ft = g.fn[ct]; const dt = { toggle: !0, parent: '' }; const gt = { toggle: 'boolean', parent: '(string|element)' }; const _t = {
        SHOW: `show${ut}`, SHOWN: `shown${ut}`, HIDE: `hide${ut}`, HIDDEN: `hidden${ut}`, CLICK_DATA_API: `click${ut}.data-api`,
    }; const mt = 'show'; const pt = 'collapse'; const vt = 'collapsing'; const yt = 'collapsed'; const Et = 'width'; const Ct = 'height'; const Tt = '.show, .collapsing'; const St = '[data-toggle="collapse"]'; const bt = (function () { function a(e, t) { this._isTransitioning = !1, this._element = e, this._config = this._getConfig(t), this._triggerArray = [].slice.call(document.querySelectorAll(`[data-toggle="collapse"][href="#${e.id}"],[data-toggle="collapse"][data-target="#${e.id}"]`)); for (let n = [].slice.call(document.querySelectorAll(St)), i = 0, o = n.length; i < o; i++) { const r = n[i]; const s = _.getSelectorFromElement(r); const a = [].slice.call(document.querySelectorAll(s)).filter((t) => t === e); s !== null && a.length > 0 && (this._selector = s, this._triggerArray.push(r)); } this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle(); } const t = a.prototype; return t.toggle = function () { g(this._element).hasClass(mt) ? this.hide() : this.show(); }, t.show = function () { let t; let e; const n = this; if (!this._isTransitioning && !g(this._element).hasClass(mt) && (this._parent && (t = [].slice.call(this._parent.querySelectorAll(Tt)).filter((t) => (typeof n._config.parent === 'string' ? t.getAttribute('data-parent') === n._config.parent : t.classList.contains(pt)))).length === 0 && (t = null), !(t && (e = g(t).not(this._selector).data(ht)) && e._isTransitioning))) { const i = g.Event(_t.SHOW); if (g(this._element).trigger(i), !i.isDefaultPrevented()) { t && (a._jQueryInterface.call(g(t).not(this._selector), 'hide'), e || g(t).data(ht, null)); const o = this._getDimension(); g(this._element).removeClass(pt).addClass(vt), this._element.style[o] = 0, this._triggerArray.length && g(this._triggerArray).removeClass(yt).attr('aria-expanded', !0), this.setTransitioning(!0); const r = `scroll${o[0].toUpperCase() + o.slice(1)}`; const s = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, () => { g(n._element).removeClass(vt).addClass(pt).addClass(mt), n._element.style[o] = '', n.setTransitioning(!1), g(n._element).trigger(_t.SHOWN); }).emulateTransitionEnd(s), this._element.style[o] = `${this._element[r]}px`; } } }, t.hide = function () { const t = this; if (!this._isTransitioning && g(this._element).hasClass(mt)) { const e = g.Event(_t.HIDE); if (g(this._element).trigger(e), !e.isDefaultPrevented()) { const n = this._getDimension(); this._element.style[n] = `${this._element.getBoundingClientRect()[n]}px`, _.reflow(this._element), g(this._element).addClass(vt).removeClass(pt).removeClass(mt); const i = this._triggerArray.length; if (i > 0) for (let o = 0; o < i; o++) { const r = this._triggerArray[o]; const s = _.getSelectorFromElement(r); if (s !== null)g([].slice.call(document.querySelectorAll(s))).hasClass(mt) || g(r).addClass(yt).attr('aria-expanded', !1); } this.setTransitioning(!0); this._element.style[n] = ''; const a = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, () => { t.setTransitioning(!1), g(t._element).removeClass(vt).addClass(pt).trigger(_t.HIDDEN); }).emulateTransitionEnd(a); } } }, t.setTransitioning = function (t) { this._isTransitioning = t; }, t.dispose = function () { g.removeData(this._element, ht), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null; }, t._getConfig = function (t) { return (t = l({}, dt, t)).toggle = Boolean(t.toggle), _.typeCheckConfig(ct, t, gt), t; }, t._getDimension = function () { return g(this._element).hasClass(Et) ? Et : Ct; }, t._getParent = function () { let t; const n = this; _.isElement(this._config.parent) ? (t = this._config.parent, typeof this._config.parent.jquery !== 'undefined' && (t = this._config.parent[0])) : t = document.querySelector(this._config.parent); const e = `[data-toggle="collapse"][data-parent="${this._config.parent}"]`; const i = [].slice.call(t.querySelectorAll(e)); return g(i).each((t, e) => { n._addAriaAndCollapsedClass(a._getTargetFromElement(e), [e]); }), t; }, t._addAriaAndCollapsedClass = function (t, e) { const n = g(t).hasClass(mt); e.length && g(e).toggleClass(yt, !n).attr('aria-expanded', n); }, a._getTargetFromElement = function (t) { const e = _.getSelectorFromElement(t); return e ? document.querySelector(e) : null; }, a._jQueryInterface = function (i) { return this.each(function () { const t = g(this); let e = t.data(ht); const n = l({}, dt, t.data(), typeof i === 'object' && i ? i : {}); if (!e && n.toggle && /show|hide/.test(i) && (n.toggle = !1), e || (e = new a(this, n), t.data(ht, e)), typeof i === 'string') { if (typeof e[i] === 'undefined') throw new TypeError(`No method named "${i}"`); e[i](); } }); }, s(a, null, [{ key: 'VERSION', get() { return '4.3.1'; } }, { key: 'Default', get() { return dt; } }]), a; }()); g(document).on(_t.CLICK_DATA_API, St, function (t) { t.currentTarget.tagName === 'A' && t.preventDefault(); const n = g(this); const e = _.getSelectorFromElement(this); const i = [].slice.call(document.querySelectorAll(e)); g(i).each(function () { const t = g(this); const e = t.data(ht) ? 'toggle' : n.data(); bt._jQueryInterface.call(t, e); }); }), g.fn[ct] = bt._jQueryInterface, g.fn[ct].Constructor = bt, g.fn[ct].noConflict = function () { return g.fn[ct] = ft, bt._jQueryInterface; }; const It = 'dropdown'; const Dt = 'bs.dropdown'; const wt = `.${Dt}`; const At = '.data-api'; const Nt = g.fn[It]; const Ot = new RegExp('38|40|27'); const kt = {
        HIDE: `hide${wt}`, HIDDEN: `hidden${wt}`, SHOW: `show${wt}`, SHOWN: `shown${wt}`, CLICK: `click${wt}`, CLICK_DATA_API: `click${wt}${At}`, KEYDOWN_DATA_API: `keydown${wt}${At}`, KEYUP_DATA_API: `keyup${wt}${At}`,
    }; const Pt = 'disabled'; const Lt = 'show'; const jt = 'dropup'; const Ht = 'dropright'; const Rt = 'dropleft'; const xt = 'dropdown-menu-right'; const Ft = 'position-static'; const Ut = '[data-toggle="dropdown"]'; const Wt = '.dropdown form'; const qt = '.dropdown-menu'; const Mt = '.navbar-nav'; const Kt = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'; const Qt = 'top-start'; const Bt = 'top-end'; const Vt = 'bottom-start'; const Yt = 'bottom-end'; const zt = 'right-start'; const Xt = 'left-start'; const $t = {
        offset: 0, flip: !0, boundary: 'scrollParent', reference: 'toggle', display: 'dynamic',
    }; const Gt = {
        offset: '(number|string|function)', flip: 'boolean', boundary: '(string|element)', reference: '(string|element)', display: 'string',
    }; const Jt = (function () { function c(t, e) { this._element = t, this._popper = null, this._config = this._getConfig(e), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners(); } const t = c.prototype; return t.toggle = function () { if (!this._element.disabled && !g(this._element).hasClass(Pt)) { const t = c._getParentFromElement(this._element); const e = g(this._menu).hasClass(Lt); if (c._clearMenus(), !e) { const n = { relatedTarget: this._element }; const i = g.Event(kt.SHOW, n); if (g(t).trigger(i), !i.isDefaultPrevented()) { if (!this._inNavbar) { if (typeof u === 'undefined') throw new TypeError('Bootstrap\'s dropdowns require Popper.js (https://popper.js.org/)'); let o = this._element; this._config.reference === 'parent' ? o = t : _.isElement(this._config.reference) && (o = this._config.reference, typeof this._config.reference.jquery !== 'undefined' && (o = this._config.reference[0])), this._config.boundary !== 'scrollParent' && g(t).addClass(Ft), this._popper = new u(o, this._menu, this._getPopperConfig()); }'ontouchstart' in document.documentElement && g(t).closest(Mt).length === 0 && g(document.body).children().on('mouseover', null, g.noop), this._element.focus(), this._element.setAttribute('aria-expanded', !0), g(this._menu).toggleClass(Lt), g(t).toggleClass(Lt).trigger(g.Event(kt.SHOWN, n)); } } } }, t.show = function () { if (!(this._element.disabled || g(this._element).hasClass(Pt) || g(this._menu).hasClass(Lt))) { const t = { relatedTarget: this._element }; const e = g.Event(kt.SHOW, t); const n = c._getParentFromElement(this._element); g(n).trigger(e), e.isDefaultPrevented() || (g(this._menu).toggleClass(Lt), g(n).toggleClass(Lt).trigger(g.Event(kt.SHOWN, t))); } }, t.hide = function () { if (!this._element.disabled && !g(this._element).hasClass(Pt) && g(this._menu).hasClass(Lt)) { const t = { relatedTarget: this._element }; const e = g.Event(kt.HIDE, t); const n = c._getParentFromElement(this._element); g(n).trigger(e), e.isDefaultPrevented() || (g(this._menu).toggleClass(Lt), g(n).toggleClass(Lt).trigger(g.Event(kt.HIDDEN, t))); } }, t.dispose = function () { g.removeData(this._element, Dt), g(this._element).off(wt), this._element = null, (this._menu = null) !== this._popper && (this._popper.destroy(), this._popper = null); }, t.update = function () { this._inNavbar = this._detectNavbar(), this._popper !== null && this._popper.scheduleUpdate(); }, t._addEventListeners = function () { const e = this; g(this._element).on(kt.CLICK, (t) => { t.preventDefault(), t.stopPropagation(), e.toggle(); }); }, t._getConfig = function (t) { return t = l({}, this.constructor.Default, g(this._element).data(), t), _.typeCheckConfig(It, t, this.constructor.DefaultType), t; }, t._getMenuElement = function () { if (!this._menu) { const t = c._getParentFromElement(this._element); t && (this._menu = t.querySelector(qt)); } return this._menu; }, t._getPlacement = function () { const t = g(this._element.parentNode); let e = Vt; return t.hasClass(jt) ? (e = Qt, g(this._menu).hasClass(xt) && (e = Bt)) : t.hasClass(Ht) ? e = zt : t.hasClass(Rt) ? e = Xt : g(this._menu).hasClass(xt) && (e = Yt), e; }, t._detectNavbar = function () { return g(this._element).closest('.navbar').length > 0; }, t._getOffset = function () { const e = this; const t = {}; return typeof this._config.offset === 'function' ? t.fn = function (t) { return t.offsets = l({}, t.offsets, e._config.offset(t.offsets, e._element) || {}), t; } : t.offset = this._config.offset, t; }, t._getPopperConfig = function () { const t = { placement: this._getPlacement(), modifiers: { offset: this._getOffset(), flip: { enabled: this._config.flip }, preventOverflow: { boundariesElement: this._config.boundary } } }; return this._config.display === 'static' && (t.modifiers.applyStyle = { enabled: !1 }), t; }, c._jQueryInterface = function (e) { return this.each(function () { let t = g(this).data(Dt); if (t || (t = new c(this, typeof e === 'object' ? e : null), g(this).data(Dt, t)), typeof e === 'string') { if (typeof t[e] === 'undefined') throw new TypeError(`No method named "${e}"`); t[e](); } }); }, c._clearMenus = function (t) { if (!t || t.which !== 3 && (t.type !== 'keyup' || t.which === 9)) for (let e = [].slice.call(document.querySelectorAll(Ut)), n = 0, i = e.length; n < i; n++) { const o = c._getParentFromElement(e[n]); const r = g(e[n]).data(Dt); const s = { relatedTarget: e[n] }; if (t && t.type === 'click' && (s.clickEvent = t), r) { const a = r._menu; if (g(o).hasClass(Lt) && !(t && (t.type === 'click' && /input|textarea/i.test(t.target.tagName) || t.type === 'keyup' && t.which === 9) && g.contains(o, t.target))) { const l = g.Event(kt.HIDE, s); g(o).trigger(l), l.isDefaultPrevented() || ('ontouchstart' in document.documentElement && g(document.body).children().off('mouseover', null, g.noop), e[n].setAttribute('aria-expanded', 'false'), g(a).removeClass(Lt), g(o).removeClass(Lt).trigger(g.Event(kt.HIDDEN, s))); } } } }, c._getParentFromElement = function (t) { let e; const n = _.getSelectorFromElement(t); return n && (e = document.querySelector(n)), e || t.parentNode; }, c._dataApiKeydownHandler = function (t) { if ((/input|textarea/i.test(t.target.tagName) ? !(t.which === 32 || t.which !== 27 && (t.which !== 40 && t.which !== 38 || g(t.target).closest(qt).length)) : Ot.test(t.which)) && (t.preventDefault(), t.stopPropagation(), !this.disabled && !g(this).hasClass(Pt))) { const e = c._getParentFromElement(this); const n = g(e).hasClass(Lt); if (n && (!n || t.which !== 27 && t.which !== 32)) { const i = [].slice.call(e.querySelectorAll(Kt)); if (i.length !== 0) { let o = i.indexOf(t.target); t.which === 38 && o > 0 && o--, t.which === 40 && o < i.length - 1 && o++, o < 0 && (o = 0), i[o].focus(); } } else { if (t.which === 27) { const r = e.querySelector(Ut); g(r).trigger('focus'); }g(this).trigger('click'); } } }, s(c, null, [{ key: 'VERSION', get() { return '4.3.1'; } }, { key: 'Default', get() { return $t; } }, { key: 'DefaultType', get() { return Gt; } }]), c; }()); g(document).on(kt.KEYDOWN_DATA_API, Ut, Jt._dataApiKeydownHandler).on(kt.KEYDOWN_DATA_API, qt, Jt._dataApiKeydownHandler).on(`${kt.CLICK_DATA_API} ${kt.KEYUP_DATA_API}`, Jt._clearMenus)
        .on(kt.CLICK_DATA_API, Ut, function (t) { t.preventDefault(), t.stopPropagation(), Jt._jQueryInterface.call(g(this), 'toggle'); })
        .on(kt.CLICK_DATA_API, Wt, (t) => { t.stopPropagation(); }), g.fn[It] = Jt._jQueryInterface, g.fn[It].Constructor = Jt, g.fn[It].noConflict = function () { return g.fn[It] = Nt, Jt._jQueryInterface; }; const Zt = 'modal'; const te = 'bs.modal'; const ee = `.${te}`; const ne = g.fn[Zt]; const ie = {
        backdrop: !0, keyboard: !0, focus: !0, show: !0,
    }; const oe = {
        backdrop: '(boolean|string)', keyboard: 'boolean', focus: 'boolean', show: 'boolean',
    }; const re = {
        HIDE: `hide${ee}`, HIDDEN: `hidden${ee}`, SHOW: `show${ee}`, SHOWN: `shown${ee}`, FOCUSIN: `focusin${ee}`, RESIZE: `resize${ee}`, CLICK_DISMISS: `click.dismiss${ee}`, KEYDOWN_DISMISS: `keydown.dismiss${ee}`, MOUSEUP_DISMISS: `mouseup.dismiss${ee}`, MOUSEDOWN_DISMISS: `mousedown.dismiss${ee}`, CLICK_DATA_API: `click${ee}.data-api`,
    }; const se = 'modal-dialog-scrollable'; const ae = 'modal-scrollbar-measure'; const le = 'modal-backdrop'; const ce = 'modal-open'; const he = 'fade'; const ue = 'show'; const fe = '.modal-dialog'; const de = '.modal-body'; const ge = '[data-toggle="modal"]'; const _e = '[data-dismiss="modal"]'; const me = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'; const pe = '.sticky-top'; const ve = (function () { function o(t, e) { this._config = this._getConfig(e), this._element = t, this._dialog = t.querySelector(fe), this._backdrop = null, this._isShown = !1, this._isBodyOverflowing = !1, this._ignoreBackdropClick = !1, this._isTransitioning = !1, this._scrollbarWidth = 0; } const t = o.prototype; return t.toggle = function (t) { return this._isShown ? this.hide() : this.show(t); }, t.show = function (t) { const e = this; if (!this._isShown && !this._isTransitioning) { g(this._element).hasClass(he) && (this._isTransitioning = !0); const n = g.Event(re.SHOW, { relatedTarget: t }); g(this._element).trigger(n), this._isShown || n.isDefaultPrevented() || (this._isShown = !0, this._checkScrollbar(), this._setScrollbar(), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), g(this._element).on(re.CLICK_DISMISS, _e, (t) => e.hide(t)), g(this._dialog).on(re.MOUSEDOWN_DISMISS, () => { g(e._element).one(re.MOUSEUP_DISMISS, (t) => { g(t.target).is(e._element) && (e._ignoreBackdropClick = !0); }); }), this._showBackdrop(() => e._showElement(t))); } }, t.hide = function (t) { const e = this; if (t && t.preventDefault(), this._isShown && !this._isTransitioning) { const n = g.Event(re.HIDE); if (g(this._element).trigger(n), this._isShown && !n.isDefaultPrevented()) { this._isShown = !1; const i = g(this._element).hasClass(he); if (i && (this._isTransitioning = !0), this._setEscapeEvent(), this._setResizeEvent(), g(document).off(re.FOCUSIN), g(this._element).removeClass(ue), g(this._element).off(re.CLICK_DISMISS), g(this._dialog).off(re.MOUSEDOWN_DISMISS), i) { const o = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, (t) => e._hideModal(t)).emulateTransitionEnd(o); } else this._hideModal(); } } }, t.dispose = function () { [window, this._element, this._dialog].forEach((t) => g(t).off(ee)), g(document).off(re.FOCUSIN), g.removeData(this._element, te), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._isTransitioning = null, this._scrollbarWidth = null; }, t.handleUpdate = function () { this._adjustDialog(); }, t._getConfig = function (t) { return t = l({}, ie, t), _.typeCheckConfig(Zt, t, oe), t; }, t._showElement = function (t) { const e = this; const n = g(this._element).hasClass(he); this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = 'block', this._element.removeAttribute('aria-hidden'), this._element.setAttribute('aria-modal', !0), g(this._dialog).hasClass(se) ? this._dialog.querySelector(de).scrollTop = 0 : this._element.scrollTop = 0, n && _.reflow(this._element), g(this._element).addClass(ue), this._config.focus && this._enforceFocus(); const i = g.Event(re.SHOWN, { relatedTarget: t }); const o = function () { e._config.focus && e._element.focus(), e._isTransitioning = !1, g(e._element).trigger(i); }; if (n) { const r = _.getTransitionDurationFromElement(this._dialog); g(this._dialog).one(_.TRANSITION_END, o).emulateTransitionEnd(r); } else o(); }, t._enforceFocus = function () { const e = this; g(document).off(re.FOCUSIN).on(re.FOCUSIN, (t) => { document !== t.target && e._element !== t.target && g(e._element).has(t.target).length === 0 && e._element.focus(); }); }, t._setEscapeEvent = function () { const e = this; this._isShown && this._config.keyboard ? g(this._element).on(re.KEYDOWN_DISMISS, (t) => { t.which === 27 && (t.preventDefault(), e.hide()); }) : this._isShown || g(this._element).off(re.KEYDOWN_DISMISS); }, t._setResizeEvent = function () { const e = this; this._isShown ? g(window).on(re.RESIZE, (t) => e.handleUpdate(t)) : g(window).off(re.RESIZE); }, t._hideModal = function () { const t = this; this._element.style.display = 'none', this._element.setAttribute('aria-hidden', !0), this._element.removeAttribute('aria-modal'), this._isTransitioning = !1, this._showBackdrop(() => { g(document.body).removeClass(ce), t._resetAdjustments(), t._resetScrollbar(), g(t._element).trigger(re.HIDDEN); }); }, t._removeBackdrop = function () { this._backdrop && (g(this._backdrop).remove(), this._backdrop = null); }, t._showBackdrop = function (t) { const e = this; const n = g(this._element).hasClass(he) ? he : ''; if (this._isShown && this._config.backdrop) { if (this._backdrop = document.createElement('div'), this._backdrop.className = le, n && this._backdrop.classList.add(n), g(this._backdrop).appendTo(document.body), g(this._element).on(re.CLICK_DISMISS, (t) => { e._ignoreBackdropClick ? e._ignoreBackdropClick = !1 : t.target === t.currentTarget && (e._config.backdrop === 'static' ? e._element.focus() : e.hide()); }), n && _.reflow(this._backdrop), g(this._backdrop).addClass(ue), !t) return; if (!n) return void t(); const i = _.getTransitionDurationFromElement(this._backdrop); g(this._backdrop).one(_.TRANSITION_END, t).emulateTransitionEnd(i); } else if (!this._isShown && this._backdrop) { g(this._backdrop).removeClass(ue); const o = function () { e._removeBackdrop(), t && t(); }; if (g(this._element).hasClass(he)) { const r = _.getTransitionDurationFromElement(this._backdrop); g(this._backdrop).one(_.TRANSITION_END, o).emulateTransitionEnd(r); } else o(); } else t && t(); }, t._adjustDialog = function () { const t = this._element.scrollHeight > document.documentElement.clientHeight; !this._isBodyOverflowing && t && (this._element.style.paddingLeft = `${this._scrollbarWidth}px`), this._isBodyOverflowing && !t && (this._element.style.paddingRight = `${this._scrollbarWidth}px`); }, t._resetAdjustments = function () { this._element.style.paddingLeft = '', this._element.style.paddingRight = ''; }, t._checkScrollbar = function () { const t = document.body.getBoundingClientRect(); this._isBodyOverflowing = t.left + t.right < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth(); }, t._setScrollbar = function () { const o = this; if (this._isBodyOverflowing) { const t = [].slice.call(document.querySelectorAll(me)); const e = [].slice.call(document.querySelectorAll(pe)); g(t).each((t, e) => { const n = e.style.paddingRight; const i = g(e).css('padding-right'); g(e).data('padding-right', n).css('padding-right', `${parseFloat(i) + o._scrollbarWidth}px`); }), g(e).each((t, e) => { const n = e.style.marginRight; const i = g(e).css('margin-right'); g(e).data('margin-right', n).css('margin-right', `${parseFloat(i) - o._scrollbarWidth}px`); }); const n = document.body.style.paddingRight; const i = g(document.body).css('padding-right'); g(document.body).data('padding-right', n).css('padding-right', `${parseFloat(i) + this._scrollbarWidth}px`); }g(document.body).addClass(ce); }, t._resetScrollbar = function () { const t = [].slice.call(document.querySelectorAll(me)); g(t).each((t, e) => { const n = g(e).data('padding-right'); g(e).removeData('padding-right'), e.style.paddingRight = n || ''; }); const e = [].slice.call(document.querySelectorAll(`${pe}`)); g(e).each((t, e) => { const n = g(e).data('margin-right'); typeof n !== 'undefined' && g(e).css('margin-right', n).removeData('margin-right'); }); const n = g(document.body).data('padding-right'); g(document.body).removeData('padding-right'), document.body.style.paddingRight = n || ''; }, t._getScrollbarWidth = function () { const t = document.createElement('div'); t.className = ae, document.body.appendChild(t); const e = t.getBoundingClientRect().width - t.clientWidth; return document.body.removeChild(t), e; }, o._jQueryInterface = function (n, i) { return this.each(function () { let t = g(this).data(te); const e = l({}, ie, g(this).data(), typeof n === 'object' && n ? n : {}); if (t || (t = new o(this, e), g(this).data(te, t)), typeof n === 'string') { if (typeof t[n] === 'undefined') throw new TypeError(`No method named "${n}"`); t[n](i); } else e.show && t.show(i); }); }, s(o, null, [{ key: 'VERSION', get() { return '4.3.1'; } }, { key: 'Default', get() { return ie; } }]), o; }()); g(document).on(re.CLICK_DATA_API, ge, function (t) { let e; const n = this; const i = _.getSelectorFromElement(this); i && (e = document.querySelector(i)); const o = g(e).data(te) ? 'toggle' : l({}, g(e).data(), g(this).data()); this.tagName !== 'A' && this.tagName !== 'AREA' || t.preventDefault(); var r = g(e).one(re.SHOW, (t) => { t.isDefaultPrevented() || r.one(re.HIDDEN, () => { g(n).is(':visible') && n.focus(); }); }); ve._jQueryInterface.call(g(e), o, this); }), g.fn[Zt] = ve._jQueryInterface, g.fn[Zt].Constructor = ve, g.fn[Zt].noConflict = function () { return g.fn[Zt] = ne, ve._jQueryInterface; }; const ye = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href']; const Ee = {
        '*': ['class', 'dir', 'id', 'lang', 'role', /^aria-[\w-]*$/i], a: ['target', 'href', 'title', 'rel'], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ['src', 'alt', 'title', 'width', 'height'], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [],
    }; const Ce = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi; const Te = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i; function Se(t, s, e) { if (t.length === 0) return t; if (e && typeof e === 'function') return e(t); for (var n = (new window.DOMParser()).parseFromString(t, 'text/html'), a = Object.keys(s), l = [].slice.call(n.body.querySelectorAll('*')), i = function (t, e) { const n = l[t]; const i = n.nodeName.toLowerCase(); if (a.indexOf(n.nodeName.toLowerCase()) === -1) return n.parentNode.removeChild(n), 'continue'; const o = [].slice.call(n.attributes); const r = [].concat(s['*'] || [], s[i] || []); o.forEach((t) => { (function (t, e) { const n = t.nodeName.toLowerCase(); if (e.indexOf(n) !== -1) return ye.indexOf(n) === -1 || Boolean(t.nodeValue.match(Ce) || t.nodeValue.match(Te)); for (let i = e.filter((t) => t instanceof RegExp), o = 0, r = i.length; o < r; o++) if (n.match(i[o])) return !0; return !1; }(t, r)) || n.removeAttribute(t.nodeName); }); }, o = 0, r = l.length; o < r; o++)i(o); return n.body.innerHTML; } const be = 'tooltip'; const Ie = 'bs.tooltip'; const De = `.${Ie}`; const we = g.fn[be]; const Ae = 'bs-tooltip'; const Ne = new RegExp(`(^|\\s)${Ae}\\S+`, 'g'); const Oe = ['sanitize', 'whiteList', 'sanitizeFn']; const ke = {
        animation: 'boolean', template: 'string', title: '(string|element|function)', trigger: 'string', delay: '(number|object)', html: 'boolean', selector: '(string|boolean)', placement: '(string|function)', offset: '(number|string|function)', container: '(string|element|boolean)', fallbackPlacement: '(string|array)', boundary: '(string|element)', sanitize: 'boolean', sanitizeFn: '(null|function)', whiteList: 'object',
    }; const Pe = {
        AUTO: 'auto', TOP: 'top', RIGHT: 'right', BOTTOM: 'bottom', LEFT: 'left',
    }; const Le = {
        animation: !0, template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>', trigger: 'hover focus', title: '', delay: 0, html: !1, selector: !1, placement: 'top', offset: 0, container: !1, fallbackPlacement: 'flip', boundary: 'scrollParent', sanitize: !0, sanitizeFn: null, whiteList: Ee,
    }; const je = 'show'; const He = 'out'; const Re = {
        HIDE: `hide${De}`, HIDDEN: `hidden${De}`, SHOW: `show${De}`, SHOWN: `shown${De}`, INSERTED: `inserted${De}`, CLICK: `click${De}`, FOCUSIN: `focusin${De}`, FOCUSOUT: `focusout${De}`, MOUSEENTER: `mouseenter${De}`, MOUSELEAVE: `mouseleave${De}`,
    }; const xe = 'fade'; const Fe = 'show'; const Ue = '.tooltip-inner'; const We = '.arrow'; const qe = 'hover'; const Me = 'focus'; const Ke = 'click'; const Qe = 'manual'; const Be = (function () {
        function i(t, e) { if (typeof u === 'undefined') throw new TypeError('Bootstrap\'s tooltips require Popper.js (https://popper.js.org/)'); this._isEnabled = !0, this._timeout = 0, this._hoverState = '', this._activeTrigger = {}, this._popper = null, this.element = t, this.config = this._getConfig(e), this.tip = null, this._setListeners(); } const t = i.prototype; return t.enable = function () { this._isEnabled = !0; }, t.disable = function () { this._isEnabled = !1; }, t.toggleEnabled = function () { this._isEnabled = !this._isEnabled; }, t.toggle = function (t) { if (this._isEnabled) if (t) { const e = this.constructor.DATA_KEY; let n = g(t.currentTarget).data(e); n || (n = new this.constructor(t.currentTarget, this._getDelegateConfig()), g(t.currentTarget).data(e, n)), n._activeTrigger.click = !n._activeTrigger.click, n._isWithActiveTrigger() ? n._enter(null, n) : n._leave(null, n); } else { if (g(this.getTipElement()).hasClass(Fe)) return void this._leave(null, this); this._enter(null, this); } }, t.dispose = function () { clearTimeout(this._timeout), g.removeData(this.element, this.constructor.DATA_KEY), g(this.element).off(this.constructor.EVENT_KEY), g(this.element).closest('.modal').off('hide.bs.modal'), this.tip && g(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, (this._activeTrigger = null) !== this._popper && this._popper.destroy(), this._popper = null, this.element = null, this.config = null, this.tip = null; }, t.show = function () {
            const e = this; if (g(this.element).css('display') === 'none') throw new Error('Please use show on visible elements'); const t = g.Event(this.constructor.Event.SHOW); if (this.isWithContent() && this._isEnabled) {
                g(this.element).trigger(t); const n = _.findShadowRoot(this.element); const i = g.contains(n !== null ? n : this.element.ownerDocument.documentElement, this.element); if (t.isDefaultPrevented() || !i) return; const o = this.getTipElement(); const r = _.getUID(this.constructor.NAME); o.setAttribute('id', r), this.element.setAttribute('aria-describedby', r), this.setContent(), this.config.animation && g(o).addClass(xe); const s = typeof this.config.placement === 'function' ? this.config.placement.call(this, o, this.element) : this.config.placement; const a = this._getAttachment(s); this.addAttachmentClass(a); const l = this._getContainer(); g(o).data(this.constructor.DATA_KEY, this), g.contains(this.element.ownerDocument.documentElement, this.tip) || g(o).appendTo(l), g(this.element).trigger(this.constructor.Event.INSERTED), this._popper = new u(this.element, o, {
                    placement: a,
                    modifiers: {
                        offset: this._getOffset(), flip: { behavior: this.config.fallbackPlacement }, arrow: { element: We }, preventOverflow: { boundariesElement: this.config.boundary },
                    },
                    onCreate(t) { t.originalPlacement !== t.placement && e._handlePopperPlacementChange(t); },
                    onUpdate(t) { return e._handlePopperPlacementChange(t); },
                }), g(o).addClass(Fe), 'ontouchstart' in document.documentElement && g(document.body).children().on('mouseover', null, g.noop); const c = function () { e.config.animation && e._fixTransition(); const t = e._hoverState; e._hoverState = null, g(e.element).trigger(e.constructor.Event.SHOWN), t === He && e._leave(null, e); }; if (g(this.tip).hasClass(xe)) { const h = _.getTransitionDurationFromElement(this.tip); g(this.tip).one(_.TRANSITION_END, c).emulateTransitionEnd(h); } else c();
            }
        }, t.hide = function (t) { const e = this; const n = this.getTipElement(); const i = g.Event(this.constructor.Event.HIDE); const o = function () { e._hoverState !== je && n.parentNode && n.parentNode.removeChild(n), e._cleanTipClass(), e.element.removeAttribute('aria-describedby'), g(e.element).trigger(e.constructor.Event.HIDDEN), e._popper !== null && e._popper.destroy(), t && t(); }; if (g(this.element).trigger(i), !i.isDefaultPrevented()) { if (g(n).removeClass(Fe), 'ontouchstart' in document.documentElement && g(document.body).children().off('mouseover', null, g.noop), this._activeTrigger[Ke] = !1, this._activeTrigger[Me] = !1, this._activeTrigger[qe] = !1, g(this.tip).hasClass(xe)) { const r = _.getTransitionDurationFromElement(n); g(n).one(_.TRANSITION_END, o).emulateTransitionEnd(r); } else o(); this._hoverState = ''; } }, t.update = function () { this._popper !== null && this._popper.scheduleUpdate(); }, t.isWithContent = function () { return Boolean(this.getTitle()); }, t.addAttachmentClass = function (t) { g(this.getTipElement()).addClass(`${Ae}-${t}`); }, t.getTipElement = function () { return this.tip = this.tip || g(this.config.template)[0], this.tip; }, t.setContent = function () { const t = this.getTipElement(); this.setElementContent(g(t.querySelectorAll(Ue)), this.getTitle()), g(t).removeClass(`${xe} ${Fe}`); }, t.setElementContent = function (t, e) { typeof e !== 'object' || !e.nodeType && !e.jquery ? this.config.html ? (this.config.sanitize && (e = Se(e, this.config.whiteList, this.config.sanitizeFn)), t.html(e)) : t.text(e) : this.config.html ? g(e).parent().is(t) || t.empty().append(e) : t.text(g(e).text()); }, t.getTitle = function () { let t = this.element.getAttribute('data-original-title'); return t || (t = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title), t; }, t._getOffset = function () { const e = this; const t = {}; return typeof this.config.offset === 'function' ? t.fn = function (t) { return t.offsets = l({}, t.offsets, e.config.offset(t.offsets, e.element) || {}), t; } : t.offset = this.config.offset, t; }, t._getContainer = function () { return !1 === this.config.container ? document.body : _.isElement(this.config.container) ? g(this.config.container) : g(document).find(this.config.container); }, t._getAttachment = function (t) { return Pe[t.toUpperCase()]; }, t._setListeners = function () { const i = this; this.config.trigger.split(' ').forEach((t) => { if (t === 'click')g(i.element).on(i.constructor.Event.CLICK, i.config.selector, (t) => i.toggle(t)); else if (t !== Qe) { const e = t === qe ? i.constructor.Event.MOUSEENTER : i.constructor.Event.FOCUSIN; const n = t === qe ? i.constructor.Event.MOUSELEAVE : i.constructor.Event.FOCUSOUT; g(i.element).on(e, i.config.selector, (t) => i._enter(t)).on(n, i.config.selector, (t) => i._leave(t)); } }), g(this.element).closest('.modal').on('hide.bs.modal', () => { i.element && i.hide(); }), this.config.selector ? this.config = l({}, this.config, { trigger: 'manual', selector: '' }) : this._fixTitle(); }, t._fixTitle = function () { const t = typeof this.element.getAttribute('data-original-title'); (this.element.getAttribute('title') || t !== 'string') && (this.element.setAttribute('data-original-title', this.element.getAttribute('title') || ''), this.element.setAttribute('title', '')); }, t._enter = function (t, e) { const n = this.constructor.DATA_KEY; (e = e || g(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), g(t.currentTarget).data(n, e)), t && (e._activeTrigger[t.type === 'focusin' ? Me : qe] = !0), g(e.getTipElement()).hasClass(Fe) || e._hoverState === je ? e._hoverState = je : (clearTimeout(e._timeout), e._hoverState = je, e.config.delay && e.config.delay.show ? e._timeout = setTimeout(() => { e._hoverState === je && e.show(); }, e.config.delay.show) : e.show()); }, t._leave = function (t, e) { const n = this.constructor.DATA_KEY; (e = e || g(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), g(t.currentTarget).data(n, e)), t && (e._activeTrigger[t.type === 'focusout' ? Me : qe] = !1), e._isWithActiveTrigger() || (clearTimeout(e._timeout), e._hoverState = He, e.config.delay && e.config.delay.hide ? e._timeout = setTimeout(() => { e._hoverState === He && e.hide(); }, e.config.delay.hide) : e.hide()); }, t._isWithActiveTrigger = function () { for (const t in this._activeTrigger) if (this._activeTrigger[t]) return !0; return !1; }, t._getConfig = function (t) { const e = g(this.element).data(); return Object.keys(e).forEach((t) => { Oe.indexOf(t) !== -1 && delete e[t]; }), typeof (t = l({}, this.constructor.Default, e, typeof t === 'object' && t ? t : {})).delay === 'number' && (t.delay = { show: t.delay, hide: t.delay }), typeof t.title === 'number' && (t.title = t.title.toString()), typeof t.content === 'number' && (t.content = t.content.toString()), _.typeCheckConfig(be, t, this.constructor.DefaultType), t.sanitize && (t.template = Se(t.template, t.whiteList, t.sanitizeFn)), t; }, t._getDelegateConfig = function () { const t = {}; if (this.config) for (const e in this.config) this.constructor.Default[e] !== this.config[e] && (t[e] = this.config[e]); return t; }, t._cleanTipClass = function () { const t = g(this.getTipElement()); const e = t.attr('class').match(Ne); e !== null && e.length && t.removeClass(e.join('')); }, t._handlePopperPlacementChange = function (t) { const e = t.instance; this.tip = e.popper, this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t.placement)); }, t._fixTransition = function () { const t = this.getTipElement(); const e = this.config.animation; t.getAttribute('x-placement') === null && (g(t).removeClass(xe), this.config.animation = !1, this.hide(), this.show(), this.config.animation = e); }, i._jQueryInterface = function (n) { return this.each(function () { let t = g(this).data(Ie); const e = typeof n === 'object' && n; if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), g(this).data(Ie, t)), typeof n === 'string')) { if (typeof t[n] === 'undefined') throw new TypeError(`No method named "${n}"`); t[n](); } }); }, s(i, null, [{ key: 'VERSION', get() { return '4.3.1'; } }, { key: 'Default', get() { return Le; } }, { key: 'NAME', get() { return be; } }, { key: 'DATA_KEY', get() { return Ie; } }, { key: 'Event', get() { return Re; } }, { key: 'EVENT_KEY', get() { return De; } }, { key: 'DefaultType', get() { return ke; } }]), i;
    }()); g.fn[be] = Be._jQueryInterface, g.fn[be].Constructor = Be, g.fn[be].noConflict = function () { return g.fn[be] = we, Be._jQueryInterface; }; const Ve = 'popover'; const Ye = 'bs.popover'; const ze = `.${Ye}`; const Xe = g.fn[Ve]; const $e = 'bs-popover'; const Ge = new RegExp(`(^|\\s)${$e}\\S+`, 'g'); const Je = l({}, Be.Default, {
        placement: 'right', trigger: 'click', content: '', template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
    }); const Ze = l({}, Be.DefaultType, { content: '(string|element|function)' }); const tn = 'fade'; const en = 'show'; const nn = '.popover-header'; const on = '.popover-body'; const rn = {
        HIDE: `hide${ze}`, HIDDEN: `hidden${ze}`, SHOW: `show${ze}`, SHOWN: `shown${ze}`, INSERTED: `inserted${ze}`, CLICK: `click${ze}`, FOCUSIN: `focusin${ze}`, FOCUSOUT: `focusout${ze}`, MOUSEENTER: `mouseenter${ze}`, MOUSELEAVE: `mouseleave${ze}`,
    }; const sn = (function (t) { let e; let n; function i() { return t.apply(this, arguments) || this; }n = t, (e = i).prototype = Object.create(n.prototype), (e.prototype.constructor = e).__proto__ = n; const o = i.prototype; return o.isWithContent = function () { return this.getTitle() || this._getContent(); }, o.addAttachmentClass = function (t) { g(this.getTipElement()).addClass(`${$e}-${t}`); }, o.getTipElement = function () { return this.tip = this.tip || g(this.config.template)[0], this.tip; }, o.setContent = function () { const t = g(this.getTipElement()); this.setElementContent(t.find(nn), this.getTitle()); let e = this._getContent(); typeof e === 'function' && (e = e.call(this.element)), this.setElementContent(t.find(on), e), t.removeClass(`${tn} ${en}`); }, o._getContent = function () { return this.element.getAttribute('data-content') || this.config.content; }, o._cleanTipClass = function () { const t = g(this.getTipElement()); const e = t.attr('class').match(Ge); e !== null && e.length > 0 && t.removeClass(e.join('')); }, i._jQueryInterface = function (n) { return this.each(function () { let t = g(this).data(Ye); const e = typeof n === 'object' ? n : null; if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), g(this).data(Ye, t)), typeof n === 'string')) { if (typeof t[n] === 'undefined') throw new TypeError(`No method named "${n}"`); t[n](); } }); }, s(i, null, [{ key: 'VERSION', get() { return '4.3.1'; } }, { key: 'Default', get() { return Je; } }, { key: 'NAME', get() { return Ve; } }, { key: 'DATA_KEY', get() { return Ye; } }, { key: 'Event', get() { return rn; } }, { key: 'EVENT_KEY', get() { return ze; } }, { key: 'DefaultType', get() { return Ze; } }]), i; }(Be)); g.fn[Ve] = sn._jQueryInterface, g.fn[Ve].Constructor = sn, g.fn[Ve].noConflict = function () { return g.fn[Ve] = Xe, sn._jQueryInterface; }; const an = 'scrollspy'; const ln = 'bs.scrollspy'; const cn = `.${ln}`; const hn = g.fn[an]; const un = { offset: 10, method: 'auto', target: '' }; const fn = { offset: 'number', method: 'string', target: '(string|element)' }; const dn = { ACTIVATE: `activate${cn}`, SCROLL: `scroll${cn}`, LOAD_DATA_API: `load${cn}.data-api` }; const gn = 'dropdown-item'; const _n = 'active'; const mn = '[data-spy="scroll"]'; const pn = '.nav, .list-group'; const vn = '.nav-link'; const yn = '.nav-item'; const En = '.list-group-item'; const Cn = '.dropdown'; const Tn = '.dropdown-item'; const Sn = '.dropdown-toggle'; const bn = 'offset'; const In = 'position'; const Dn = (function () {
        function n(t, e) { const n = this; this._element = t, this._scrollElement = t.tagName === 'BODY' ? window : t, this._config = this._getConfig(e), this._selector = `${this._config.target} ${vn},${this._config.target} ${En},${this._config.target} ${Tn}`, this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, g(this._scrollElement).on(dn.SCROLL, (t) => n._process(t)), this.refresh(), this._process(); } const t = n.prototype; return t.refresh = function () {
            const e = this; const t = this._scrollElement === this._scrollElement.window ? bn : In; const o = this._config.method === 'auto' ? t : this._config.method; const r = o === In ? this._getScrollTop() : 0; this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), [].slice.call(document.querySelectorAll(this._selector)).map((t) => { let e; const n = _.getSelectorFromElement(t); if (n && (e = document.querySelector(n)), e) { const i = e.getBoundingClientRect(); if (i.width || i.height) return [g(e)[o]().top + r, n]; } return null; }).filter((t) => t).sort((t, e) => t[0] - e[0])
                .forEach((t) => { e._offsets.push(t[0]), e._targets.push(t[1]); });
        }, t.dispose = function () { g.removeData(this._element, ln), g(this._scrollElement).off(cn), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null; }, t._getConfig = function (t) { if (typeof (t = l({}, un, typeof t === 'object' && t ? t : {})).target !== 'string') { let e = g(t.target).attr('id'); e || (e = _.getUID(an), g(t.target).attr('id', e)), t.target = `#${e}`; } return _.typeCheckConfig(an, t, fn), t; }, t._getScrollTop = function () { return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop; }, t._getScrollHeight = function () { return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight); }, t._getOffsetHeight = function () { return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height; }, t._process = function () { const t = this._getScrollTop() + this._config.offset; const e = this._getScrollHeight(); const n = this._config.offset + e - this._getOffsetHeight(); if (this._scrollHeight !== e && this.refresh(), n <= t) { const i = this._targets[this._targets.length - 1]; this._activeTarget !== i && this._activate(i); } else { if (this._activeTarget && t < this._offsets[0] && this._offsets[0] > 0) return this._activeTarget = null, void this._clear(); for (let o = this._offsets.length; o--;) { this._activeTarget !== this._targets[o] && t >= this._offsets[o] && (typeof this._offsets[o + 1] === 'undefined' || t < this._offsets[o + 1]) && this._activate(this._targets[o]); } } }, t._activate = function (e) { this._activeTarget = e, this._clear(); const t = this._selector.split(',').map((t) => `${t}[data-target="${e}"],${t}[href="${e}"]`); const n = g([].slice.call(document.querySelectorAll(t.join(',')))); n.hasClass(gn) ? (n.closest(Cn).find(Sn).addClass(_n), n.addClass(_n)) : (n.addClass(_n), n.parents(pn).prev(`${vn}, ${En}`).addClass(_n), n.parents(pn).prev(yn).children(vn).addClass(_n)), g(this._scrollElement).trigger(dn.ACTIVATE, { relatedTarget: e }); }, t._clear = function () { [].slice.call(document.querySelectorAll(this._selector)).filter((t) => t.classList.contains(_n)).forEach((t) => t.classList.remove(_n)); }, n._jQueryInterface = function (e) { return this.each(function () { let t = g(this).data(ln); if (t || (t = new n(this, typeof e === 'object' && e), g(this).data(ln, t)), typeof e === 'string') { if (typeof t[e] === 'undefined') throw new TypeError(`No method named "${e}"`); t[e](); } }); }, s(n, null, [{ key: 'VERSION', get() { return '4.3.1'; } }, { key: 'Default', get() { return un; } }]), n;
    }()); g(window).on(dn.LOAD_DATA_API, () => { for (let t = [].slice.call(document.querySelectorAll(mn)), e = t.length; e--;) { const n = g(t[e]); Dn._jQueryInterface.call(n, n.data()); } }), g.fn[an] = Dn._jQueryInterface, g.fn[an].Constructor = Dn, g.fn[an].noConflict = function () { return g.fn[an] = hn, Dn._jQueryInterface; }; const wn = 'bs.tab'; const An = `.${wn}`; const Nn = g.fn.tab; const On = {
        HIDE: `hide${An}`, HIDDEN: `hidden${An}`, SHOW: `show${An}`, SHOWN: `shown${An}`, CLICK_DATA_API: `click${An}.data-api`,
    }; const kn = 'dropdown-menu'; const Pn = 'active'; const Ln = 'disabled'; const jn = 'fade'; const Hn = 'show'; const Rn = '.dropdown'; const xn = '.nav, .list-group'; const Fn = '.active'; const Un = '> li > .active'; const Wn = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]'; const qn = '.dropdown-toggle'; const Mn = '> .dropdown-menu .active'; const Kn = (function () { function i(t) { this._element = t; } const t = i.prototype; return t.show = function () { const n = this; if (!(this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && g(this._element).hasClass(Pn) || g(this._element).hasClass(Ln))) { let t; let i; const e = g(this._element).closest(xn)[0]; const o = _.getSelectorFromElement(this._element); if (e) { const r = e.nodeName === 'UL' || e.nodeName === 'OL' ? Un : Fn; i = (i = g.makeArray(g(e).find(r)))[i.length - 1]; } const s = g.Event(On.HIDE, { relatedTarget: this._element }); const a = g.Event(On.SHOW, { relatedTarget: i }); if (i && g(i).trigger(s), g(this._element).trigger(a), !a.isDefaultPrevented() && !s.isDefaultPrevented()) { o && (t = document.querySelector(o)), this._activate(this._element, e); const l = function () { const t = g.Event(On.HIDDEN, { relatedTarget: n._element }); const e = g.Event(On.SHOWN, { relatedTarget: i }); g(i).trigger(t), g(n._element).trigger(e); }; t ? this._activate(t, t.parentNode, l) : l(); } } }, t.dispose = function () { g.removeData(this._element, wn), this._element = null; }, t._activate = function (t, e, n) { const i = this; const o = (!e || e.nodeName !== 'UL' && e.nodeName !== 'OL' ? g(e).children(Fn) : g(e).find(Un))[0]; const r = n && o && g(o).hasClass(jn); const s = function () { return i._transitionComplete(t, o, n); }; if (o && r) { const a = _.getTransitionDurationFromElement(o); g(o).removeClass(Hn).one(_.TRANSITION_END, s).emulateTransitionEnd(a); } else s(); }, t._transitionComplete = function (t, e, n) { if (e) { g(e).removeClass(Pn); const i = g(e.parentNode).find(Mn)[0]; i && g(i).removeClass(Pn), e.getAttribute('role') === 'tab' && e.setAttribute('aria-selected', !1); } if (g(t).addClass(Pn), t.getAttribute('role') === 'tab' && t.setAttribute('aria-selected', !0), _.reflow(t), t.classList.contains(jn) && t.classList.add(Hn), t.parentNode && g(t.parentNode).hasClass(kn)) { const o = g(t).closest(Rn)[0]; if (o) { const r = [].slice.call(o.querySelectorAll(qn)); g(r).addClass(Pn); }t.setAttribute('aria-expanded', !0); }n && n(); }, i._jQueryInterface = function (n) { return this.each(function () { const t = g(this); let e = t.data(wn); if (e || (e = new i(this), t.data(wn, e)), typeof n === 'string') { if (typeof e[n] === 'undefined') throw new TypeError(`No method named "${n}"`); e[n](); } }); }, s(i, null, [{ key: 'VERSION', get() { return '4.3.1'; } }]), i; }()); g(document).on(On.CLICK_DATA_API, Wn, function (t) { t.preventDefault(), Kn._jQueryInterface.call(g(this), 'show'); }), g.fn.tab = Kn._jQueryInterface, g.fn.tab.Constructor = Kn, g.fn.tab.noConflict = function () { return g.fn.tab = Nn, Kn._jQueryInterface; }; const Qn = 'toast'; const Bn = 'bs.toast'; const Vn = `.${Bn}`; const Yn = g.fn[Qn]; const zn = {
        CLICK_DISMISS: `click.dismiss${Vn}`, HIDE: `hide${Vn}`, HIDDEN: `hidden${Vn}`, SHOW: `show${Vn}`, SHOWN: `shown${Vn}`,
    }; const Xn = 'fade'; const $n = 'hide'; const Gn = 'show'; const Jn = 'showing'; const Zn = { animation: 'boolean', autohide: 'boolean', delay: 'number' }; const ti = { animation: !0, autohide: !0, delay: 500 }; const ei = '[data-dismiss="toast"]'; const ni = (function () { function i(t, e) { this._element = t, this._config = this._getConfig(e), this._timeout = null, this._setListeners(); } const t = i.prototype; return t.show = function () { const t = this; g(this._element).trigger(zn.SHOW), this._config.animation && this._element.classList.add(Xn); const e = function () { t._element.classList.remove(Jn), t._element.classList.add(Gn), g(t._element).trigger(zn.SHOWN), t._config.autohide && t.hide(); }; if (this._element.classList.remove($n), this._element.classList.add(Jn), this._config.animation) { const n = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, e).emulateTransitionEnd(n); } else e(); }, t.hide = function (t) { const e = this; this._element.classList.contains(Gn) && (g(this._element).trigger(zn.HIDE), t ? this._close() : this._timeout = setTimeout(() => { e._close(); }, this._config.delay)); }, t.dispose = function () { clearTimeout(this._timeout), this._timeout = null, this._element.classList.contains(Gn) && this._element.classList.remove(Gn), g(this._element).off(zn.CLICK_DISMISS), g.removeData(this._element, Bn), this._element = null, this._config = null; }, t._getConfig = function (t) { return t = l({}, ti, g(this._element).data(), typeof t === 'object' && t ? t : {}), _.typeCheckConfig(Qn, t, this.constructor.DefaultType), t; }, t._setListeners = function () { const t = this; g(this._element).on(zn.CLICK_DISMISS, ei, () => t.hide(!0)); }, t._close = function () { const t = this; const e = function () { t._element.classList.add($n), g(t._element).trigger(zn.HIDDEN); }; if (this._element.classList.remove(Gn), this._config.animation) { const n = _.getTransitionDurationFromElement(this._element); g(this._element).one(_.TRANSITION_END, e).emulateTransitionEnd(n); } else e(); }, i._jQueryInterface = function (n) { return this.each(function () { const t = g(this); let e = t.data(Bn); if (e || (e = new i(this, typeof n === 'object' && n), t.data(Bn, e)), typeof n === 'string') { if (typeof e[n] === 'undefined') throw new TypeError(`No method named "${n}"`); e[n](this); } }); }, s(i, null, [{ key: 'VERSION', get() { return '4.3.1'; } }, { key: 'DefaultType', get() { return Zn; } }, { key: 'Default', get() { return ti; } }]), i; }()); g.fn[Qn] = ni._jQueryInterface, g.fn[Qn].Constructor = ni, g.fn[Qn].noConflict = function () { return g.fn[Qn] = Yn, ni._jQueryInterface; }, (function () { if (typeof g === 'undefined') throw new TypeError('Bootstrap\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\'s JavaScript.'); const t = g.fn.jquery.split(' ')[0].split('.'); if (t[0] < 2 && t[1] < 9 || t[0] === 1 && t[1] === 9 && t[2] < 1 || t[0] >= 4) throw new Error('Bootstrap\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0'); }()), t.Util = _, t.Alert = p, t.Button = P, t.Carousel = lt, t.Collapse = bt, t.Dropdown = Jt, t.Modal = ve, t.Popover = sn, t.Scrollspy = Dn, t.Tab = Kn, t.Toast = ni, t.Tooltip = Be, Object.defineProperty(t, '__esModule', { value: !0 });
}));
// # sourceMappingURL=bootstrap.min.js.map
/*!
 * perfect-scrollbar v1.3.0
 * (c) 2017 Hyunje Jun
 * @license MIT
 */
!(function (t, e) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = e() : typeof define === 'function' && define.amd ? define(e) : t.PerfectScrollbar = e(); }(this, () => {
    function t(t) { return getComputedStyle(t); } function e(t, e) { for (const i in e) { let r = e[i]; typeof r === 'number' && (r += 'px'), t.style[i] = r; } return t; } function i(t) { const e = document.createElement('div'); return e.className = t, e; } function r(t, e) { if (!v) throw new Error('No element matching method supported'); return v.call(t, e); } function l(t) { t.remove ? t.remove() : t.parentNode && t.parentNode.removeChild(t); } function n(t, e) { return Array.prototype.filter.call(t.children, (t) => r(t, e)); } function o(t, e) { const i = t.element.classList; const r = m.state.scrolling(e); i.contains(r) ? clearTimeout(Y[e]) : i.add(r); } function s(t, e) { Y[e] = setTimeout(() => t.isAlive && t.element.classList.remove(m.state.scrolling(e)), t.settings.scrollingThreshold); } function a(t, e) { o(t, e), s(t, e); } function c(t) { if (typeof window.CustomEvent === 'function') return new CustomEvent(t); const e = document.createEvent('CustomEvent'); return e.initCustomEvent(t, !1, !1, void 0), e; } function h(t, e, i, r, l) { const n = i[0]; const o = i[1]; const s = i[2]; const h = i[3]; const u = i[4]; const d = i[5]; void 0 === r && (r = !0), void 0 === l && (l = !1); const f = t.element; t.reach[h] = null, f[s] < 1 && (t.reach[h] = 'start'), f[s] > t[n] - t[o] - 1 && (t.reach[h] = 'end'), e && (f.dispatchEvent(c(`ps-scroll-${h}`)), e < 0 ? f.dispatchEvent(c(`ps-scroll-${u}`)) : e > 0 && f.dispatchEvent(c(`ps-scroll-${d}`)), r && a(t, h)), t.reach[h] && (e || l) && f.dispatchEvent(c(`ps-${h}-reach-${t.reach[h]}`)); } function u(t) { return parseInt(t, 10) || 0; } function d(t) { return r(t, 'input,[contenteditable]') || r(t, 'select,[contenteditable]') || r(t, 'textarea,[contenteditable]') || r(t, 'button,[contenteditable]'); } function f(e) { const i = t(e); return u(i.width) + u(i.paddingLeft) + u(i.paddingRight) + u(i.borderLeftWidth) + u(i.borderRightWidth); } function p(t, e) { return t.settings.minScrollbarLength && (e = Math.max(e, t.settings.minScrollbarLength)), t.settings.maxScrollbarLength && (e = Math.min(e, t.settings.maxScrollbarLength)), e; } function b(t, i) { const r = { width: i.railXWidth }; i.isRtl ? r.left = i.negativeScrollAdjustment + t.scrollLeft + i.containerWidth - i.contentWidth : r.left = t.scrollLeft, i.isScrollbarXUsingBottom ? r.bottom = i.scrollbarXBottom - t.scrollTop : r.top = i.scrollbarXTop + t.scrollTop, e(i.scrollbarXRail, r); const l = { top: t.scrollTop, height: i.railYHeight }; i.isScrollbarYUsingRight ? i.isRtl ? l.right = i.contentWidth - (i.negativeScrollAdjustment + t.scrollLeft) - i.scrollbarYRight - i.scrollbarYOuterWidth : l.right = i.scrollbarYRight - t.scrollLeft : i.isRtl ? l.left = i.negativeScrollAdjustment + t.scrollLeft + 2 * i.containerWidth - i.contentWidth - i.scrollbarYLeft - i.scrollbarYOuterWidth : l.left = i.scrollbarYLeft + t.scrollLeft, e(i.scrollbarYRail, l), e(i.scrollbarX, { left: i.scrollbarXLeft, width: i.scrollbarXWidth - i.railBorderXWidth }), e(i.scrollbarY, { top: i.scrollbarYTop, height: i.scrollbarYHeight - i.railBorderYWidth }); } function g(t, e) { function i(e) { p[d] = b + v * (e[a] - g), o(t, f), T(t), e.stopPropagation(), e.preventDefault(); } function r() { s(t, f), t.event.unbind(t.ownerDocument, 'mousemove', i); } const l = e[0]; const n = e[1]; var a = e[2]; const c = e[3]; const h = e[4]; const u = e[5]; var d = e[6]; var f = e[7]; var p = t.element; var b = null; var g = null; var v = null; t.event.bind(t[h], 'mousedown', (e) => { b = p[d], g = e[a], v = (t[n] - t[l]) / (t[c] - t[u]), t.event.bind(t.ownerDocument, 'mousemove', i), t.event.once(t.ownerDocument, 'mouseup', r), e.stopPropagation(), e.preventDefault(); }); } var v = typeof Element !== 'undefined' && (Element.prototype.matches || Element.prototype.webkitMatchesSelector || Element.prototype.msMatchesSelector); var m = { main: 'ps', element: { thumb(t) { return `ps__thumb-${t}`; }, rail(t) { return `ps__rail-${t}`; }, consuming: 'ps__child--consume' }, state: { focus: 'ps--focus', active(t) { return `ps--active-${t}`; }, scrolling(t) { return `ps--scrolling-${t}`; } } }; var Y = { x: null, y: null }; const X = function (t) { this.element = t, this.handlers = {}; }; const w = { isEmpty: { configurable: !0 } }; X.prototype.bind = function (t, e) { void 0 === this.handlers[t] && (this.handlers[t] = []), this.handlers[t].push(e), this.element.addEventListener(t, e, !1); }, X.prototype.unbind = function (t, e) { const i = this; this.handlers[t] = this.handlers[t].filter((r) => !(!e || r === e) || (i.element.removeEventListener(t, r, !1), !1)); }, X.prototype.unbindAll = function () { const t = this; for (const e in t.handlers)t.unbind(e); }, w.isEmpty.get = function () { const t = this; return Object.keys(this.handlers).every((e) => t.handlers[e].length === 0); }, Object.defineProperties(X.prototype, w); const y = function () { this.eventElements = []; }; y.prototype.eventElement = function (t) { let e = this.eventElements.filter((e) => e.element === t)[0]; return e || (e = new X(t), this.eventElements.push(e)), e; }, y.prototype.bind = function (t, e, i) { this.eventElement(t).bind(e, i); }, y.prototype.unbind = function (t, e, i) { const r = this.eventElement(t); r.unbind(e, i), r.isEmpty && this.eventElements.splice(this.eventElements.indexOf(r), 1); }, y.prototype.unbindAll = function () { this.eventElements.forEach((t) => t.unbindAll()), this.eventElements = []; }, y.prototype.once = function (t, e, i) { const r = this.eventElement(t); var l = function (t) { r.unbind(e, l), i(t); }; r.bind(e, l); }; const W = function (t, e, i, r, l) { void 0 === r && (r = !0), void 0 === l && (l = !1); let n; if (e === 'top')n = ['contentHeight', 'containerHeight', 'scrollTop', 'y', 'up', 'down']; else { if (e !== 'left') throw new Error('A proper axis should be provided'); n = ['contentWidth', 'containerWidth', 'scrollLeft', 'x', 'left', 'right']; }h(t, i, n, r, l); }; const L = {
        isWebKit: typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style, supportsTouch: typeof window !== 'undefined' && ('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch), supportsIePointer: typeof navigator !== 'undefined' && navigator.msMaxTouchPoints, isChrome: typeof navigator !== 'undefined' && /Chrome/i.test(navigator && navigator.userAgent),
    }; var T = function (t) { const e = t.element; t.containerWidth = e.clientWidth, t.containerHeight = e.clientHeight, t.contentWidth = e.scrollWidth, t.contentHeight = e.scrollHeight, e.contains(t.scrollbarXRail) || (n(e, m.element.rail('x')).forEach((t) => l(t)), e.appendChild(t.scrollbarXRail)), e.contains(t.scrollbarYRail) || (n(e, m.element.rail('y')).forEach((t) => l(t)), e.appendChild(t.scrollbarYRail)), !t.settings.suppressScrollX && t.containerWidth + t.settings.scrollXMarginOffset < t.contentWidth ? (t.scrollbarXActive = !0, t.railXWidth = t.containerWidth - t.railXMarginWidth, t.railXRatio = t.containerWidth / t.railXWidth, t.scrollbarXWidth = p(t, u(t.railXWidth * t.containerWidth / t.contentWidth)), t.scrollbarXLeft = u((t.negativeScrollAdjustment + e.scrollLeft) * (t.railXWidth - t.scrollbarXWidth) / (t.contentWidth - t.containerWidth))) : t.scrollbarXActive = !1, !t.settings.suppressScrollY && t.containerHeight + t.settings.scrollYMarginOffset < t.contentHeight ? (t.scrollbarYActive = !0, t.railYHeight = t.containerHeight - t.railYMarginHeight, t.railYRatio = t.containerHeight / t.railYHeight, t.scrollbarYHeight = p(t, u(t.railYHeight * t.containerHeight / t.contentHeight)), t.scrollbarYTop = u(e.scrollTop * (t.railYHeight - t.scrollbarYHeight) / (t.contentHeight - t.containerHeight))) : t.scrollbarYActive = !1, t.scrollbarXLeft >= t.railXWidth - t.scrollbarXWidth && (t.scrollbarXLeft = t.railXWidth - t.scrollbarXWidth), t.scrollbarYTop >= t.railYHeight - t.scrollbarYHeight && (t.scrollbarYTop = t.railYHeight - t.scrollbarYHeight), b(e, t), t.scrollbarXActive ? e.classList.add(m.state.active('x')) : (e.classList.remove(m.state.active('x')), t.scrollbarXWidth = 0, t.scrollbarXLeft = 0, e.scrollLeft = 0), t.scrollbarYActive ? e.classList.add(m.state.active('y')) : (e.classList.remove(m.state.active('y')), t.scrollbarYHeight = 0, t.scrollbarYTop = 0, e.scrollTop = 0); }; const R = {
        'click-rail': function (t) { t.event.bind(t.scrollbarY, 'mousedown', (t) => t.stopPropagation()), t.event.bind(t.scrollbarYRail, 'mousedown', (e) => { const i = e.pageY - window.pageYOffset - t.scrollbarYRail.getBoundingClientRect().top > t.scrollbarYTop ? 1 : -1; t.element.scrollTop += i * t.containerHeight, T(t), e.stopPropagation(); }), t.event.bind(t.scrollbarX, 'mousedown', (t) => t.stopPropagation()), t.event.bind(t.scrollbarXRail, 'mousedown', (e) => { const i = e.pageX - window.pageXOffset - t.scrollbarXRail.getBoundingClientRect().left > t.scrollbarXLeft ? 1 : -1; t.element.scrollLeft += i * t.containerWidth, T(t), e.stopPropagation(); }); }, 'drag-thumb': function (t) { g(t, ['containerWidth', 'contentWidth', 'pageX', 'railXWidth', 'scrollbarX', 'scrollbarXWidth', 'scrollLeft', 'x']), g(t, ['containerHeight', 'contentHeight', 'pageY', 'railYHeight', 'scrollbarY', 'scrollbarYHeight', 'scrollTop', 'y']); }, keyboard(t) { function e(e, r) { const l = i.scrollTop; if (e === 0) { if (!t.scrollbarYActive) return !1; if (l === 0 && r > 0 || l >= t.contentHeight - t.containerHeight && r < 0) return !t.settings.wheelPropagation; } const n = i.scrollLeft; if (r === 0) { if (!t.scrollbarXActive) return !1; if (n === 0 && e < 0 || n >= t.contentWidth - t.containerWidth && e > 0) return !t.settings.wheelPropagation; } return !0; } var i = t.element; const l = function () { return r(i, ':hover'); }; const n = function () { return r(t.scrollbarX, ':focus') || r(t.scrollbarY, ':focus'); }; t.event.bind(t.ownerDocument, 'keydown', (r) => { if (!(r.isDefaultPrevented && r.isDefaultPrevented() || r.defaultPrevented) && (l() || n())) { let o = document.activeElement ? document.activeElement : t.ownerDocument.activeElement; if (o) { if (o.tagName === 'IFRAME')o = o.contentDocument.activeElement; else for (;o.shadowRoot;)o = o.shadowRoot.activeElement; if (d(o)) return; } let s = 0; let a = 0; switch (r.which) { case 37: s = r.metaKey ? -t.contentWidth : r.altKey ? -t.containerWidth : -30; break; case 38: a = r.metaKey ? t.contentHeight : r.altKey ? t.containerHeight : 30; break; case 39: s = r.metaKey ? t.contentWidth : r.altKey ? t.containerWidth : 30; break; case 40: a = r.metaKey ? -t.contentHeight : r.altKey ? -t.containerHeight : -30; break; case 32: a = r.shiftKey ? t.containerHeight : -t.containerHeight; break; case 33: a = t.containerHeight; break; case 34: a = -t.containerHeight; break; case 36: a = t.contentHeight; break; case 35: a = -t.contentHeight; break; default: return; }t.settings.suppressScrollX && s !== 0 || t.settings.suppressScrollY && a !== 0 || (i.scrollTop -= a, i.scrollLeft += s, T(t), e(s, a) && r.preventDefault()); } }); }, wheel(e) { function i(t, i) { const r = o.scrollTop === 0; const l = o.scrollTop + o.offsetHeight === o.scrollHeight; const n = o.scrollLeft === 0; const s = o.scrollLeft + o.offsetWidth === o.offsetWidth; return !(Math.abs(i) > Math.abs(t) ? r || l : n || s) || !e.settings.wheelPropagation; } function r(t) { let e = t.deltaX; let i = -1 * t.deltaY; return void 0 !== e && void 0 !== i || (e = -1 * t.wheelDeltaX / 6, i = t.wheelDeltaY / 6), t.deltaMode && t.deltaMode === 1 && (e *= 10, i *= 10), e !== e && i !== i && (e = 0, i = t.wheelDelta), t.shiftKey ? [-i, -e] : [e, i]; } function l(e, i, r) { if (!L.isWebKit && o.querySelector('select:focus')) return !0; if (!o.contains(e)) return !1; for (let l = e; l && l !== o;) { if (l.classList.contains(m.element.consuming)) return !0; const n = t(l); if ([n.overflow, n.overflowX, n.overflowY].join('').match(/(scroll|auto)/)) { const s = l.scrollHeight - l.clientHeight; if (s > 0 && !(l.scrollTop === 0 && r > 0 || l.scrollTop === s && r < 0)) return !0; const a = l.scrollLeft - l.clientWidth; if (a > 0 && !(l.scrollLeft === 0 && i < 0 || l.scrollLeft === a && i > 0)) return !0; }l = l.parentNode; } return !1; } function n(t) { const n = r(t); const s = n[0]; const a = n[1]; if (!l(t.target, s, a)) { let c = !1; e.settings.useBothWheelAxes ? e.scrollbarYActive && !e.scrollbarXActive ? (a ? o.scrollTop -= a * e.settings.wheelSpeed : o.scrollTop += s * e.settings.wheelSpeed, c = !0) : e.scrollbarXActive && !e.scrollbarYActive && (s ? o.scrollLeft += s * e.settings.wheelSpeed : o.scrollLeft -= a * e.settings.wheelSpeed, c = !0) : (o.scrollTop -= a * e.settings.wheelSpeed, o.scrollLeft += s * e.settings.wheelSpeed), T(e), (c = c || i(s, a)) && !t.ctrlKey && (t.stopPropagation(), t.preventDefault()); } } var o = e.element; void 0 !== window.onwheel ? e.event.bind(o, 'wheel', n) : void 0 !== window.onmousewheel && e.event.bind(o, 'mousewheel', n); }, touch(e) { function i(t, i) { const r = h.scrollTop; const l = h.scrollLeft; const n = Math.abs(t); const o = Math.abs(i); if (o > n) { if (i < 0 && r === e.contentHeight - e.containerHeight || i > 0 && r === 0) return window.scrollY === 0 && i > 0 && L.isChrome; } else if (n > o && (t < 0 && l === e.contentWidth - e.containerWidth || t > 0 && l === 0)) return !0; return !0; } function r(t, i) { h.scrollTop -= i, h.scrollLeft -= t, T(e); } function l(t) { return t.targetTouches ? t.targetTouches[0] : t; } function n(t) { return !(t.pointerType && t.pointerType === 'pen' && t.buttons === 0 || (!t.targetTouches || t.targetTouches.length !== 1) && (!t.pointerType || t.pointerType === 'mouse' || t.pointerType === t.MSPOINTER_TYPE_MOUSE)); } function o(t) { if (n(t)) { const e = l(t); u.pageX = e.pageX, u.pageY = e.pageY, d = (new Date()).getTime(), p !== null && clearInterval(p); } } function s(e, i, r) { if (!h.contains(e)) return !1; for (let l = e; l && l !== h;) { if (l.classList.contains(m.element.consuming)) return !0; const n = t(l); if ([n.overflow, n.overflowX, n.overflowY].join('').match(/(scroll|auto)/)) { const o = l.scrollHeight - l.clientHeight; if (o > 0 && !(l.scrollTop === 0 && r > 0 || l.scrollTop === o && r < 0)) return !0; const s = l.scrollLeft - l.clientWidth; if (s > 0 && !(l.scrollLeft === 0 && i < 0 || l.scrollLeft === s && i > 0)) return !0; }l = l.parentNode; } return !1; } function a(t) { if (n(t)) { const e = l(t); const o = { pageX: e.pageX, pageY: e.pageY }; const a = o.pageX - u.pageX; const c = o.pageY - u.pageY; if (s(t.target, a, c)) return; r(a, c), u = o; const h = (new Date()).getTime(); const p = h - d; p > 0 && (f.x = a / p, f.y = c / p, d = h), i(a, c) && t.preventDefault(); } } function c() { e.settings.swipeEasing && (clearInterval(p), p = setInterval(() => { e.isInitialized ? clearInterval(p) : f.x || f.y ? Math.abs(f.x) < 0.01 && Math.abs(f.y) < 0.01 ? clearInterval(p) : (r(30 * f.x, 30 * f.y), f.x *= 0.8, f.y *= 0.8) : clearInterval(p); }, 10)); } if (L.supportsTouch || L.supportsIePointer) { var h = e.element; var u = {}; var d = 0; var f = {}; var p = null; L.supportsTouch ? (e.event.bind(h, 'touchstart', o), e.event.bind(h, 'touchmove', a), e.event.bind(h, 'touchend', c)) : L.supportsIePointer && (window.PointerEvent ? (e.event.bind(h, 'pointerdown', o), e.event.bind(h, 'pointermove', a), e.event.bind(h, 'pointerup', c)) : window.MSPointerEvent && (e.event.bind(h, 'MSPointerDown', o), e.event.bind(h, 'MSPointerMove', a), e.event.bind(h, 'MSPointerUp', c))); } },
    }; const H = function (r, l) {
        const n = this; if (void 0 === l && (l = {}), typeof r === 'string' && (r = document.querySelector(r)), !r || !r.nodeName) throw new Error('no element is specified to initialize PerfectScrollbar'); this.element = r, r.classList.add(m.main), this.settings = {
            handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'], maxScrollbarLength: null, minScrollbarLength: null, scrollingThreshold: 1e3, scrollXMarginOffset: 0, scrollYMarginOffset: 0, suppressScrollX: !1, suppressScrollY: !1, swipeEasing: !0, useBothWheelAxes: !1, wheelPropagation: !1, wheelSpeed: 1,
        }; for (const o in l)n.settings[o] = l[o]; this.containerWidth = null, this.containerHeight = null, this.contentWidth = null, this.contentHeight = null; const s = function () { return r.classList.add(m.state.focus); }; const a = function () { return r.classList.remove(m.state.focus); }; this.isRtl = t(r).direction === 'rtl', this.isNegativeScroll = (function () { const t = r.scrollLeft; let e = null; return r.scrollLeft = -1, e = r.scrollLeft < 0, r.scrollLeft = t, e; }()), this.negativeScrollAdjustment = this.isNegativeScroll ? r.scrollWidth - r.clientWidth : 0, this.event = new y(), this.ownerDocument = r.ownerDocument || document, this.scrollbarXRail = i(m.element.rail('x')), r.appendChild(this.scrollbarXRail), this.scrollbarX = i(m.element.thumb('x')), this.scrollbarXRail.appendChild(this.scrollbarX), this.scrollbarX.setAttribute('tabindex', 0), this.event.bind(this.scrollbarX, 'focus', s), this.event.bind(this.scrollbarX, 'blur', a), this.scrollbarXActive = null, this.scrollbarXWidth = null, this.scrollbarXLeft = null; const c = t(this.scrollbarXRail); this.scrollbarXBottom = parseInt(c.bottom, 10), isNaN(this.scrollbarXBottom) ? (this.isScrollbarXUsingBottom = !1, this.scrollbarXTop = u(c.top)) : this.isScrollbarXUsingBottom = !0, this.railBorderXWidth = u(c.borderLeftWidth) + u(c.borderRightWidth), e(this.scrollbarXRail, { display: 'block' }), this.railXMarginWidth = u(c.marginLeft) + u(c.marginRight), e(this.scrollbarXRail, { display: '' }), this.railXWidth = null, this.railXRatio = null, this.scrollbarYRail = i(m.element.rail('y')), r.appendChild(this.scrollbarYRail), this.scrollbarY = i(m.element.thumb('y')), this.scrollbarYRail.appendChild(this.scrollbarY), this.scrollbarY.setAttribute('tabindex', 0), this.event.bind(this.scrollbarY, 'focus', s), this.event.bind(this.scrollbarY, 'blur', a), this.scrollbarYActive = null, this.scrollbarYHeight = null, this.scrollbarYTop = null; const h = t(this.scrollbarYRail); this.scrollbarYRight = parseInt(h.right, 10), isNaN(this.scrollbarYRight) ? (this.isScrollbarYUsingRight = !1, this.scrollbarYLeft = u(h.left)) : this.isScrollbarYUsingRight = !0, this.scrollbarYOuterWidth = this.isRtl ? f(this.scrollbarY) : null, this.railBorderYWidth = u(h.borderTopWidth) + u(h.borderBottomWidth), e(this.scrollbarYRail, { display: 'block' }), this.railYMarginHeight = u(h.marginTop) + u(h.marginBottom), e(this.scrollbarYRail, { display: '' }), this.railYHeight = null, this.railYRatio = null, this.reach = { x: r.scrollLeft <= 0 ? 'start' : r.scrollLeft >= this.contentWidth - this.containerWidth ? 'end' : null, y: r.scrollTop <= 0 ? 'start' : r.scrollTop >= this.contentHeight - this.containerHeight ? 'end' : null }, this.isAlive = !0, this.settings.handlers.forEach((t) => R[t](n)), this.lastScrollTop = r.scrollTop, this.lastScrollLeft = r.scrollLeft, this.event.bind(this.element, 'scroll', (t) => n.onScroll(t)), T(this);
    }; return H.prototype.update = function () { this.isAlive && (this.negativeScrollAdjustment = this.isNegativeScroll ? this.element.scrollWidth - this.element.clientWidth : 0, e(this.scrollbarXRail, { display: 'block' }), e(this.scrollbarYRail, { display: 'block' }), this.railXMarginWidth = u(t(this.scrollbarXRail).marginLeft) + u(t(this.scrollbarXRail).marginRight), this.railYMarginHeight = u(t(this.scrollbarYRail).marginTop) + u(t(this.scrollbarYRail).marginBottom), e(this.scrollbarXRail, { display: 'none' }), e(this.scrollbarYRail, { display: 'none' }), T(this), W(this, 'top', 0, !1, !0), W(this, 'left', 0, !1, !0), e(this.scrollbarXRail, { display: '' }), e(this.scrollbarYRail, { display: '' })); }, H.prototype.onScroll = function (t) { this.isAlive && (T(this), W(this, 'top', this.element.scrollTop - this.lastScrollTop), W(this, 'left', this.element.scrollLeft - this.lastScrollLeft), this.lastScrollTop = this.element.scrollTop, this.lastScrollLeft = this.element.scrollLeft); }, H.prototype.destroy = function () { this.isAlive && (this.event.unbindAll(), l(this.scrollbarX), l(this.scrollbarY), l(this.scrollbarXRail), l(this.scrollbarYRail), this.removePsClasses(), this.element = null, this.scrollbarX = null, this.scrollbarY = null, this.scrollbarXRail = null, this.scrollbarYRail = null, this.isAlive = !1); }, H.prototype.removePsClasses = function () { this.element.className = this.element.className.split(' ').filter((t) => !t.match(/^ps([-_].+|)$/)).join(' '); }, H;
}));
